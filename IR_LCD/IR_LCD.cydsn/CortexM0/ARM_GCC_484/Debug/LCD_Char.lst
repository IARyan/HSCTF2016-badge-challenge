ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LCD_Char.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	LCD_Char_enableState
  18              		.bss
  19              		.type	LCD_Char_enableState, %object
  20              		.size	LCD_Char_enableState, 1
  21              	LCD_Char_enableState:
  22 0000 00       		.space	1
  23              		.global	LCD_Char_initVar
  24              		.type	LCD_Char_initVar, %object
  25              		.size	LCD_Char_initVar, 1
  26              	LCD_Char_initVar:
  27 0001 00       		.space	1
  28              		.section	.text.LCD_Char_Init,"ax",%progbits
  29              		.align	2
  30              		.global	LCD_Char_Init
  31              		.code	16
  32              		.thumb_func
  33              		.type	LCD_Char_Init, %function
  34              	LCD_Char_Init:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC4\\LCD_Char.c"
   1:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/LCD_Char.c **** * File Name: LCD_Char.c
   3:.\Generated_Source\PSoC4/LCD_Char.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/LCD_Char.c **** *
   5:.\Generated_Source\PSoC4/LCD_Char.c **** * Description:
   6:.\Generated_Source\PSoC4/LCD_Char.c **** *  This file provides source code for the Character LCD component's API.
   7:.\Generated_Source\PSoC4/LCD_Char.c **** *
   8:.\Generated_Source\PSoC4/LCD_Char.c **** * Note:
   9:.\Generated_Source\PSoC4/LCD_Char.c **** *
  10:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/LCD_Char.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/LCD_Char.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/LCD_Char.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/LCD_Char.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/LCD_Char.c **** 
  17:.\Generated_Source\PSoC4/LCD_Char.c **** #include "CyLib.h"
  18:.\Generated_Source\PSoC4/LCD_Char.c **** #include "LCD_Char.h"
  19:.\Generated_Source\PSoC4/LCD_Char.c **** 
  20:.\Generated_Source\PSoC4/LCD_Char.c **** 
  21:.\Generated_Source\PSoC4/LCD_Char.c **** static void LCD_Char_WrDatNib(uint8 nibble) ;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 2


  22:.\Generated_Source\PSoC4/LCD_Char.c **** static void LCD_Char_WrCntrlNib(uint8 nibble) ;
  23:.\Generated_Source\PSoC4/LCD_Char.c **** 
  24:.\Generated_Source\PSoC4/LCD_Char.c **** /* Stores state of component. Indicates whether component is or not
  25:.\Generated_Source\PSoC4/LCD_Char.c **** * in the enable state.
  26:.\Generated_Source\PSoC4/LCD_Char.c **** */
  27:.\Generated_Source\PSoC4/LCD_Char.c **** uint8 LCD_Char_enableState = 0u;
  28:.\Generated_Source\PSoC4/LCD_Char.c **** 
  29:.\Generated_Source\PSoC4/LCD_Char.c **** uint8 LCD_Char_initVar = 0u;
  30:.\Generated_Source\PSoC4/LCD_Char.c **** 
  31:.\Generated_Source\PSoC4/LCD_Char.c **** 
  32:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
  33:.\Generated_Source\PSoC4/LCD_Char.c **** * Function Name: LCD_Char_Init
  34:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
  35:.\Generated_Source\PSoC4/LCD_Char.c **** *
  36:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
  37:.\Generated_Source\PSoC4/LCD_Char.c **** *  Perform initialization required for the components normal work.
  38:.\Generated_Source\PSoC4/LCD_Char.c **** *  This function initializes the LCD hardware module as follows:
  39:.\Generated_Source\PSoC4/LCD_Char.c **** *        Enables a 4-bit interface
  40:.\Generated_Source\PSoC4/LCD_Char.c **** *        Clears the display
  41:.\Generated_Source\PSoC4/LCD_Char.c **** *        Enables the auto cursor increment
  42:.\Generated_Source\PSoC4/LCD_Char.c **** *        Resets the cursor to start position
  43:.\Generated_Source\PSoC4/LCD_Char.c **** *  Also, it loads a custom character set to the LCD if it was defined in the customizer.
  44:.\Generated_Source\PSoC4/LCD_Char.c **** *
  45:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
  46:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
  47:.\Generated_Source\PSoC4/LCD_Char.c **** *
  48:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
  49:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
  50:.\Generated_Source\PSoC4/LCD_Char.c **** *
  51:.\Generated_Source\PSoC4/LCD_Char.c **** * Reentrant:
  52:.\Generated_Source\PSoC4/LCD_Char.c **** *  No.
  53:.\Generated_Source\PSoC4/LCD_Char.c **** *
  54:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_Init(void) 
  56:.\Generated_Source\PSoC4/LCD_Char.c **** {
  37              		.loc 1 56 0
  38              		.cfi_startproc
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/LCD_Char.c ****     /* INIT CODE */
  58:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelay(40u);                                                        /* Delay 40 ms */
  45              		.loc 1 58 0
  46 0004 2820     		mov	r0, #40
  47 0006 FFF7FEFF 		bl	CyDelay
  59:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrCntrlNib(LCD_Char_DISPLAY_8_BIT_INIT);    /* Selects 8-bit mode */
  48              		.loc 1 59 0
  49 000a 0320     		mov	r0, #3
  50 000c FFF7FEFF 		bl	LCD_Char_WrCntrlNib
  60:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelay(5u);                                                         /* Delay 5 ms */
  51              		.loc 1 60 0
  52 0010 0520     		mov	r0, #5
  53 0012 FFF7FEFF 		bl	CyDelay
  61:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrCntrlNib(LCD_Char_DISPLAY_8_BIT_INIT);    /* Selects 8-bit mode */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 3


  54              		.loc 1 61 0
  55 0016 0320     		mov	r0, #3
  56 0018 FFF7FEFF 		bl	LCD_Char_WrCntrlNib
  62:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelay(15u);                                                        /* Delay 15 ms */
  57              		.loc 1 62 0
  58 001c 0F20     		mov	r0, #15
  59 001e FFF7FEFF 		bl	CyDelay
  63:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrCntrlNib(LCD_Char_DISPLAY_8_BIT_INIT);    /* Selects 8-bit mode */
  60              		.loc 1 63 0
  61 0022 0320     		mov	r0, #3
  62 0024 FFF7FEFF 		bl	LCD_Char_WrCntrlNib
  64:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelay(1u);                                                         /* Delay 1 ms */
  63              		.loc 1 64 0
  64 0028 0120     		mov	r0, #1
  65 002a FFF7FEFF 		bl	CyDelay
  65:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrCntrlNib(LCD_Char_DISPLAY_4_BIT_INIT);    /* Selects 4-bit mode */
  66              		.loc 1 65 0
  67 002e 0220     		mov	r0, #2
  68 0030 FFF7FEFF 		bl	LCD_Char_WrCntrlNib
  66:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelay(5u);                                                         /* Delay 5 ms */
  69              		.loc 1 66 0
  70 0034 0520     		mov	r0, #5
  71 0036 FFF7FEFF 		bl	CyDelay
  67:.\Generated_Source\PSoC4/LCD_Char.c **** 
  68:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteControl(LCD_Char_CURSOR_AUTO_INCR_ON);    /* Incr Cursor After Writes */
  72              		.loc 1 68 0
  73 003a 0620     		mov	r0, #6
  74 003c FFF7FEFF 		bl	LCD_Char_WriteControl
  69:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteControl(LCD_Char_DISPLAY_CURSOR_ON);      /* Turn Display, Cursor ON */
  75              		.loc 1 69 0
  76 0040 0E20     		mov	r0, #14
  77 0042 FFF7FEFF 		bl	LCD_Char_WriteControl
  70:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteControl(LCD_Char_DISPLAY_2_LINES_5x10);   /* 2 Lines by 5x10 Characters */
  78              		.loc 1 70 0
  79 0046 2C20     		mov	r0, #44
  80 0048 FFF7FEFF 		bl	LCD_Char_WriteControl
  71:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteControl(LCD_Char_DISPLAY_CURSOR_OFF);     /* Turn Display, Cursor OFF */
  81              		.loc 1 71 0
  82 004c 0820     		mov	r0, #8
  83 004e FFF7FEFF 		bl	LCD_Char_WriteControl
  72:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteControl(LCD_Char_CLEAR_DISPLAY);          /* Clear LCD Screen */
  84              		.loc 1 72 0
  85 0052 0120     		mov	r0, #1
  86 0054 FFF7FEFF 		bl	LCD_Char_WriteControl
  73:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteControl(LCD_Char_DISPLAY_ON_CURSOR_OFF);  /* Turn Display ON, Cursor OFF */
  87              		.loc 1 73 0
  88 0058 0C20     		mov	r0, #12
  89 005a FFF7FEFF 		bl	LCD_Char_WriteControl
  74:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteControl(LCD_Char_RESET_CURSOR_POSITION);  /* Set Cursor to 0,0 */
  90              		.loc 1 74 0
  91 005e 0320     		mov	r0, #3
  92 0060 FFF7FEFF 		bl	LCD_Char_WriteControl
  75:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelay(5u);
  93              		.loc 1 75 0
  94 0064 0520     		mov	r0, #5
  95 0066 FFF7FEFF 		bl	CyDelay
  76:.\Generated_Source\PSoC4/LCD_Char.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 4


  77:.\Generated_Source\PSoC4/LCD_Char.c ****     #if(LCD_Char_CUSTOM_CHAR_SET != LCD_Char_NONE)
  78:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_LoadCustomFonts(LCD_Char_customFonts);
  96              		.loc 1 78 0
  97 006a 034B     		ldr	r3, .L2
  98 006c 181C     		mov	r0, r3
  99 006e FFF7FEFF 		bl	LCD_Char_LoadCustomFonts
  79:.\Generated_Source\PSoC4/LCD_Char.c ****     #endif /* LCD_Char_CUSTOM_CHAR_SET != LCD_Char_NONE */
  80:.\Generated_Source\PSoC4/LCD_Char.c **** }
 100              		.loc 1 80 0
 101 0072 BD46     		mov	sp, r7
 102              		@ sp needed
 103 0074 80BD     		pop	{r7, pc}
 104              	.L3:
 105 0076 C046     		.align	2
 106              	.L2:
 107 0078 00000000 		.word	LCD_Char_customFonts
 108              		.cfi_endproc
 109              	.LFE0:
 110              		.size	LCD_Char_Init, .-LCD_Char_Init
 111              		.section	.text.LCD_Char_Enable,"ax",%progbits
 112              		.align	2
 113              		.global	LCD_Char_Enable
 114              		.code	16
 115              		.thumb_func
 116              		.type	LCD_Char_Enable, %function
 117              	LCD_Char_Enable:
 118              	.LFB1:
  81:.\Generated_Source\PSoC4/LCD_Char.c **** 
  82:.\Generated_Source\PSoC4/LCD_Char.c **** 
  83:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
  84:.\Generated_Source\PSoC4/LCD_Char.c **** * Function Name: LCD_Char_Enable
  85:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
  86:.\Generated_Source\PSoC4/LCD_Char.c **** *
  87:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
  88:.\Generated_Source\PSoC4/LCD_Char.c **** *  Turns on the display.
  89:.\Generated_Source\PSoC4/LCD_Char.c **** *
  90:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
  91:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
  92:.\Generated_Source\PSoC4/LCD_Char.c **** *
  93:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
  94:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
  95:.\Generated_Source\PSoC4/LCD_Char.c **** *
  96:.\Generated_Source\PSoC4/LCD_Char.c **** * Reentrant:
  97:.\Generated_Source\PSoC4/LCD_Char.c **** *  No.
  98:.\Generated_Source\PSoC4/LCD_Char.c **** *
  99:.\Generated_Source\PSoC4/LCD_Char.c **** * Theory:
 100:.\Generated_Source\PSoC4/LCD_Char.c **** *  This function has no effect when it is called the first time as
 101:.\Generated_Source\PSoC4/LCD_Char.c **** *  LCD_Char_Init() turns on the LCD.
 102:.\Generated_Source\PSoC4/LCD_Char.c **** *
 103:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 104:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_Enable(void) 
 105:.\Generated_Source\PSoC4/LCD_Char.c **** {
 119              		.loc 1 105 0
 120              		.cfi_startproc
 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 5


 124              		.cfi_offset 14, -4
 125 0002 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 106:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_DisplayOn();
 127              		.loc 1 106 0
 128 0004 0C20     		mov	r0, #12
 129 0006 FFF7FEFF 		bl	LCD_Char_WriteControl
 107:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_enableState = 1u;
 130              		.loc 1 107 0
 131 000a 024B     		ldr	r3, .L5
 132 000c 0122     		mov	r2, #1
 133 000e 1A70     		strb	r2, [r3]
 108:.\Generated_Source\PSoC4/LCD_Char.c **** }
 134              		.loc 1 108 0
 135 0010 BD46     		mov	sp, r7
 136              		@ sp needed
 137 0012 80BD     		pop	{r7, pc}
 138              	.L6:
 139              		.align	2
 140              	.L5:
 141 0014 00000000 		.word	LCD_Char_enableState
 142              		.cfi_endproc
 143              	.LFE1:
 144              		.size	LCD_Char_Enable, .-LCD_Char_Enable
 145              		.section	.text.LCD_Char_Start,"ax",%progbits
 146              		.align	2
 147              		.global	LCD_Char_Start
 148              		.code	16
 149              		.thumb_func
 150              		.type	LCD_Char_Start, %function
 151              	LCD_Char_Start:
 152              	.LFB2:
 109:.\Generated_Source\PSoC4/LCD_Char.c **** 
 110:.\Generated_Source\PSoC4/LCD_Char.c **** 
 111:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 112:.\Generated_Source\PSoC4/LCD_Char.c **** * Function Name: LCD_Char_Start
 113:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 114:.\Generated_Source\PSoC4/LCD_Char.c **** *
 115:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 116:.\Generated_Source\PSoC4/LCD_Char.c **** *  Perform initialization required for the components normal work.
 117:.\Generated_Source\PSoC4/LCD_Char.c **** *  This function initializes the LCD hardware module as follows:
 118:.\Generated_Source\PSoC4/LCD_Char.c **** *        Enables 4-bit interface
 119:.\Generated_Source\PSoC4/LCD_Char.c **** *        Clears the display
 120:.\Generated_Source\PSoC4/LCD_Char.c **** *        Enables auto cursor increment
 121:.\Generated_Source\PSoC4/LCD_Char.c **** *        Resets the cursor to start position
 122:.\Generated_Source\PSoC4/LCD_Char.c **** *  Also, it loads a custom character set to the LCD if it was defined in the customizer.
 123:.\Generated_Source\PSoC4/LCD_Char.c **** *  If it was not the first call in this project, then it just turns on the
 124:.\Generated_Source\PSoC4/LCD_Char.c **** *  display
 125:.\Generated_Source\PSoC4/LCD_Char.c **** *
 126:.\Generated_Source\PSoC4/LCD_Char.c **** *
 127:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 128:.\Generated_Source\PSoC4/LCD_Char.c **** *  LCD_Char_initVar - global variable.
 129:.\Generated_Source\PSoC4/LCD_Char.c **** *
 130:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 131:.\Generated_Source\PSoC4/LCD_Char.c **** *  LCD_Char_initVar - global variable.
 132:.\Generated_Source\PSoC4/LCD_Char.c **** *
 133:.\Generated_Source\PSoC4/LCD_Char.c **** * Reentrant:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 6


 134:.\Generated_Source\PSoC4/LCD_Char.c **** *  No.
 135:.\Generated_Source\PSoC4/LCD_Char.c **** *
 136:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 137:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_Start(void) 
 138:.\Generated_Source\PSoC4/LCD_Char.c **** {
 153              		.loc 1 138 0
 154              		.cfi_startproc
 155 0000 80B5     		push	{r7, lr}
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 139:.\Generated_Source\PSoC4/LCD_Char.c ****     /* If not initialized, perform initialization */
 140:.\Generated_Source\PSoC4/LCD_Char.c ****     if(LCD_Char_initVar == 0u)
 161              		.loc 1 140 0
 162 0004 064B     		ldr	r3, .L9
 163 0006 1B78     		ldrb	r3, [r3]
 164 0008 002B     		cmp	r3, #0
 165 000a 04D1     		bne	.L8
 141:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 142:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_Init();
 166              		.loc 1 142 0
 167 000c FFF7FEFF 		bl	LCD_Char_Init
 143:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_initVar = 1u;
 168              		.loc 1 143 0
 169 0010 034B     		ldr	r3, .L9
 170 0012 0122     		mov	r2, #1
 171 0014 1A70     		strb	r2, [r3]
 172              	.L8:
 144:.\Generated_Source\PSoC4/LCD_Char.c ****     }
 145:.\Generated_Source\PSoC4/LCD_Char.c **** 
 146:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Turn on the LCD */
 147:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_Enable();
 173              		.loc 1 147 0
 174 0016 FFF7FEFF 		bl	LCD_Char_Enable
 148:.\Generated_Source\PSoC4/LCD_Char.c **** }
 175              		.loc 1 148 0
 176 001a BD46     		mov	sp, r7
 177              		@ sp needed
 178 001c 80BD     		pop	{r7, pc}
 179              	.L10:
 180 001e C046     		.align	2
 181              	.L9:
 182 0020 00000000 		.word	LCD_Char_initVar
 183              		.cfi_endproc
 184              	.LFE2:
 185              		.size	LCD_Char_Start, .-LCD_Char_Start
 186              		.section	.text.LCD_Char_Stop,"ax",%progbits
 187              		.align	2
 188              		.global	LCD_Char_Stop
 189              		.code	16
 190              		.thumb_func
 191              		.type	LCD_Char_Stop, %function
 192              	LCD_Char_Stop:
 193              	.LFB3:
 149:.\Generated_Source\PSoC4/LCD_Char.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 7


 150:.\Generated_Source\PSoC4/LCD_Char.c **** 
 151:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 152:.\Generated_Source\PSoC4/LCD_Char.c **** * Function Name: LCD_Char_Stop
 153:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 154:.\Generated_Source\PSoC4/LCD_Char.c **** *
 155:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 156:.\Generated_Source\PSoC4/LCD_Char.c **** *  Turns off the display of the LCD screen.
 157:.\Generated_Source\PSoC4/LCD_Char.c **** *
 158:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 159:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 160:.\Generated_Source\PSoC4/LCD_Char.c **** *
 161:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 162:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 163:.\Generated_Source\PSoC4/LCD_Char.c **** *
 164:.\Generated_Source\PSoC4/LCD_Char.c **** * Reentrant:
 165:.\Generated_Source\PSoC4/LCD_Char.c **** *  No.
 166:.\Generated_Source\PSoC4/LCD_Char.c **** *
 167:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 168:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_Stop(void) 
 169:.\Generated_Source\PSoC4/LCD_Char.c **** {
 194              		.loc 1 169 0
 195              		.cfi_startproc
 196 0000 80B5     		push	{r7, lr}
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 170:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Calls LCD Off Macro */
 171:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_DisplayOff();
 202              		.loc 1 171 0
 203 0004 0820     		mov	r0, #8
 204 0006 FFF7FEFF 		bl	LCD_Char_WriteControl
 172:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_enableState = 0u;
 205              		.loc 1 172 0
 206 000a 024B     		ldr	r3, .L12
 207 000c 0022     		mov	r2, #0
 208 000e 1A70     		strb	r2, [r3]
 173:.\Generated_Source\PSoC4/LCD_Char.c **** }
 209              		.loc 1 173 0
 210 0010 BD46     		mov	sp, r7
 211              		@ sp needed
 212 0012 80BD     		pop	{r7, pc}
 213              	.L13:
 214              		.align	2
 215              	.L12:
 216 0014 00000000 		.word	LCD_Char_enableState
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	LCD_Char_Stop, .-LCD_Char_Stop
 220              		.section	.text.LCD_Char_Position,"ax",%progbits
 221              		.align	2
 222              		.global	LCD_Char_Position
 223              		.code	16
 224              		.thumb_func
 225              		.type	LCD_Char_Position, %function
 226              	LCD_Char_Position:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 8


 227              	.LFB4:
 174:.\Generated_Source\PSoC4/LCD_Char.c **** 
 175:.\Generated_Source\PSoC4/LCD_Char.c **** 
 176:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 177:.\Generated_Source\PSoC4/LCD_Char.c **** *  Function Name: LCD_Char_Position
 178:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 179:.\Generated_Source\PSoC4/LCD_Char.c **** *
 180:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 181:.\Generated_Source\PSoC4/LCD_Char.c **** *  Moves the active cursor location to a point specified by the input arguments
 182:.\Generated_Source\PSoC4/LCD_Char.c **** *
 183:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 184:.\Generated_Source\PSoC4/LCD_Char.c **** *  row:    Specific row of LCD module to be written
 185:.\Generated_Source\PSoC4/LCD_Char.c **** *  column: Column of LCD module to be written
 186:.\Generated_Source\PSoC4/LCD_Char.c **** *
 187:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 188:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 189:.\Generated_Source\PSoC4/LCD_Char.c **** *
 190:.\Generated_Source\PSoC4/LCD_Char.c **** * Note:
 191:.\Generated_Source\PSoC4/LCD_Char.c **** *  This only applies for LCD displays that use the 2X40 address mode.
 192:.\Generated_Source\PSoC4/LCD_Char.c **** *  In this case Row 2 starts with 0x28 offset from Row 1.
 193:.\Generated_Source\PSoC4/LCD_Char.c **** *  When there are more than 2 rows, each row must be fewer than 20 characters.
 194:.\Generated_Source\PSoC4/LCD_Char.c **** *
 195:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 196:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_Position(uint8 row, uint8 column) 
 197:.\Generated_Source\PSoC4/LCD_Char.c **** {
 228              		.loc 1 197 0
 229              		.cfi_startproc
 230 0000 80B5     		push	{r7, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 0002 82B0     		sub	sp, sp, #8
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 238 0006 0A1C     		mov	r2, r1
 239 0008 FB1D     		add	r3, r7, #7
 240 000a 011C     		add	r1, r0, #0
 241 000c 1970     		strb	r1, [r3]
 242 000e BB1D     		add	r3, r7, #6
 243 0010 1A70     		strb	r2, [r3]
 198:.\Generated_Source\PSoC4/LCD_Char.c ****     switch (row)
 244              		.loc 1 198 0
 245 0012 FB1D     		add	r3, r7, #7
 246 0014 1B78     		ldrb	r3, [r3]
 247 0016 012B     		cmp	r3, #1
 248 0018 10D0     		beq	.L16
 249 001a 02DC     		bgt	.L17
 250 001c 002B     		cmp	r3, #0
 251 001e 05D0     		beq	.L18
 199:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 200:.\Generated_Source\PSoC4/LCD_Char.c ****         case (uint8)0:
 201:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_0_START + column);
 202:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 203:.\Generated_Source\PSoC4/LCD_Char.c ****         case (uint8) 1:
 204:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_1_START + column);
 205:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 9


 206:.\Generated_Source\PSoC4/LCD_Char.c ****         case (uint8) 2:
 207:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_2_START + column);
 208:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 209:.\Generated_Source\PSoC4/LCD_Char.c ****         case (uint8) 3:
 210:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_3_START + column);
 211:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 212:.\Generated_Source\PSoC4/LCD_Char.c ****         default:
 213:.\Generated_Source\PSoC4/LCD_Char.c ****             /* if default case is hit, invalid row argument was passed.*/
 214:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 252              		.loc 1 214 0
 253 0020 24E0     		b	.L14
 254              	.L17:
 198:.\Generated_Source\PSoC4/LCD_Char.c ****     switch (row)
 255              		.loc 1 198 0
 256 0022 022B     		cmp	r3, #2
 257 0024 12D0     		beq	.L19
 258 0026 032B     		cmp	r3, #3
 259 0028 18D0     		beq	.L20
 260              		.loc 1 214 0
 261 002a 1FE0     		b	.L14
 262              	.L18:
 201:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_0_START + column);
 263              		.loc 1 201 0
 264 002c BB1D     		add	r3, r7, #6
 265 002e 1B78     		ldrb	r3, [r3]
 266 0030 803B     		sub	r3, r3, #128
 267 0032 DBB2     		uxtb	r3, r3
 268 0034 181C     		mov	r0, r3
 269 0036 FFF7FEFF 		bl	LCD_Char_WriteControl
 202:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 270              		.loc 1 202 0
 271 003a 17E0     		b	.L14
 272              	.L16:
 204:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_1_START + column);
 273              		.loc 1 204 0
 274 003c BB1D     		add	r3, r7, #6
 275 003e 1B78     		ldrb	r3, [r3]
 276 0040 403B     		sub	r3, r3, #64
 277 0042 DBB2     		uxtb	r3, r3
 278 0044 181C     		mov	r0, r3
 279 0046 FFF7FEFF 		bl	LCD_Char_WriteControl
 205:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 280              		.loc 1 205 0
 281 004a 0FE0     		b	.L14
 282              	.L19:
 207:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_2_START + column);
 283              		.loc 1 207 0
 284 004c BB1D     		add	r3, r7, #6
 285 004e 1B78     		ldrb	r3, [r3]
 286 0050 6C3B     		sub	r3, r3, #108
 287 0052 DBB2     		uxtb	r3, r3
 288 0054 181C     		mov	r0, r3
 289 0056 FFF7FEFF 		bl	LCD_Char_WriteControl
 208:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 290              		.loc 1 208 0
 291 005a 07E0     		b	.L14
 292              	.L20:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 10


 210:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_WriteControl(LCD_Char_ROW_3_START + column);
 293              		.loc 1 210 0
 294 005c BB1D     		add	r3, r7, #6
 295 005e 1B78     		ldrb	r3, [r3]
 296 0060 2C3B     		sub	r3, r3, #44
 297 0062 DBB2     		uxtb	r3, r3
 298 0064 181C     		mov	r0, r3
 299 0066 FFF7FEFF 		bl	LCD_Char_WriteControl
 211:.\Generated_Source\PSoC4/LCD_Char.c ****             break;
 300              		.loc 1 211 0
 301 006a C046     		mov	r8, r8
 302              	.L14:
 215:.\Generated_Source\PSoC4/LCD_Char.c ****     }
 216:.\Generated_Source\PSoC4/LCD_Char.c **** }
 303              		.loc 1 216 0
 304 006c BD46     		mov	sp, r7
 305 006e 02B0     		add	sp, sp, #8
 306              		@ sp needed
 307 0070 80BD     		pop	{r7, pc}
 308              		.cfi_endproc
 309              	.LFE4:
 310              		.size	LCD_Char_Position, .-LCD_Char_Position
 311 0072 C046     		.section	.text.LCD_Char_PrintString,"ax",%progbits
 312              		.align	2
 313              		.global	LCD_Char_PrintString
 314              		.code	16
 315              		.thumb_func
 316              		.type	LCD_Char_PrintString, %function
 317              	LCD_Char_PrintString:
 318              	.LFB5:
 217:.\Generated_Source\PSoC4/LCD_Char.c **** 
 218:.\Generated_Source\PSoC4/LCD_Char.c **** 
 219:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 220:.\Generated_Source\PSoC4/LCD_Char.c **** * Function Name: LCD_Char_PrintString
 221:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 222:.\Generated_Source\PSoC4/LCD_Char.c **** *
 223:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 224:.\Generated_Source\PSoC4/LCD_Char.c **** *  Writes a zero terminated string to the LCD.
 225:.\Generated_Source\PSoC4/LCD_Char.c **** *
 226:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 227:.\Generated_Source\PSoC4/LCD_Char.c **** *  string: Pointer to head of char8 array to be written to the LCD module
 228:.\Generated_Source\PSoC4/LCD_Char.c **** *
 229:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 230:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 231:.\Generated_Source\PSoC4/LCD_Char.c **** *
 232:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_PrintString(char8 const string[]) 
 234:.\Generated_Source\PSoC4/LCD_Char.c **** {
 319              		.loc 1 234 0
 320              		.cfi_startproc
 321 0000 80B5     		push	{r7, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 84B0     		sub	sp, sp, #16
 326              		.cfi_def_cfa_offset 24
 327 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 11


 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
 235:.\Generated_Source\PSoC4/LCD_Char.c ****     uint8 indexU8 = 1u;
 330              		.loc 1 235 0
 331 0008 3B1C     		mov	r3, r7
 332 000a 0F33     		add	r3, r3, #15
 333 000c 0122     		mov	r2, #1
 334 000e 1A70     		strb	r2, [r3]
 236:.\Generated_Source\PSoC4/LCD_Char.c ****     char8 current = *string;
 335              		.loc 1 236 0
 336 0010 3B1C     		mov	r3, r7
 337 0012 0E33     		add	r3, r3, #14
 338 0014 7A68     		ldr	r2, [r7, #4]
 339 0016 1278     		ldrb	r2, [r2]
 340 0018 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/LCD_Char.c **** 
 238:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Until null is reached, print next character */
 239:.\Generated_Source\PSoC4/LCD_Char.c ****     while((char8) '\0' != current)
 341              		.loc 1 239 0
 342 001a 15E0     		b	.L23
 343              	.L24:
 240:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 241:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_WriteData((uint8)current);
 344              		.loc 1 241 0
 345 001c 3B1C     		mov	r3, r7
 346 001e 0E33     		add	r3, r3, #14
 347 0020 1B78     		ldrb	r3, [r3]
 348 0022 181C     		mov	r0, r3
 349 0024 FFF7FEFF 		bl	LCD_Char_WriteData
 242:.\Generated_Source\PSoC4/LCD_Char.c ****         current = string[indexU8];
 350              		.loc 1 242 0
 351 0028 3B1C     		mov	r3, r7
 352 002a 0F33     		add	r3, r3, #15
 353 002c 1B78     		ldrb	r3, [r3]
 354 002e 7A68     		ldr	r2, [r7, #4]
 355 0030 D218     		add	r2, r2, r3
 356 0032 3B1C     		mov	r3, r7
 357 0034 0E33     		add	r3, r3, #14
 358 0036 1278     		ldrb	r2, [r2]
 359 0038 1A70     		strb	r2, [r3]
 243:.\Generated_Source\PSoC4/LCD_Char.c ****         indexU8++;
 360              		.loc 1 243 0
 361 003a 3B1C     		mov	r3, r7
 362 003c 0F33     		add	r3, r3, #15
 363 003e 1A78     		ldrb	r2, [r3]
 364 0040 3B1C     		mov	r3, r7
 365 0042 0F33     		add	r3, r3, #15
 366 0044 0132     		add	r2, r2, #1
 367 0046 1A70     		strb	r2, [r3]
 368              	.L23:
 239:.\Generated_Source\PSoC4/LCD_Char.c ****     while((char8) '\0' != current)
 369              		.loc 1 239 0 discriminator 1
 370 0048 3B1C     		mov	r3, r7
 371 004a 0E33     		add	r3, r3, #14
 372 004c 1B78     		ldrb	r3, [r3]
 373 004e 002B     		cmp	r3, #0
 374 0050 E4D1     		bne	.L24
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 12


 244:.\Generated_Source\PSoC4/LCD_Char.c ****     }
 245:.\Generated_Source\PSoC4/LCD_Char.c **** }
 375              		.loc 1 245 0
 376 0052 BD46     		mov	sp, r7
 377 0054 04B0     		add	sp, sp, #16
 378              		@ sp needed
 379 0056 80BD     		pop	{r7, pc}
 380              		.cfi_endproc
 381              	.LFE5:
 382              		.size	LCD_Char_PrintString, .-LCD_Char_PrintString
 383              		.section	.text.LCD_Char_PutChar,"ax",%progbits
 384              		.align	2
 385              		.global	LCD_Char_PutChar
 386              		.code	16
 387              		.thumb_func
 388              		.type	LCD_Char_PutChar, %function
 389              	LCD_Char_PutChar:
 390              	.LFB6:
 246:.\Generated_Source\PSoC4/LCD_Char.c **** 
 247:.\Generated_Source\PSoC4/LCD_Char.c **** 
 248:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/LCD_Char.c **** *  Function Name: LCD_Char_PutChar
 250:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/LCD_Char.c **** *
 252:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 253:.\Generated_Source\PSoC4/LCD_Char.c **** *  Writes a single character to the current cursor position of the LCD module.
 254:.\Generated_Source\PSoC4/LCD_Char.c **** *  Custom character names (_CUSTOM_0 through
 255:.\Generated_Source\PSoC4/LCD_Char.c **** *  _CUSTOM_7) are acceptable as inputs.
 256:.\Generated_Source\PSoC4/LCD_Char.c **** *
 257:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 258:.\Generated_Source\PSoC4/LCD_Char.c **** *  character: Character to be written to LCD
 259:.\Generated_Source\PSoC4/LCD_Char.c **** *
 260:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 261:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 262:.\Generated_Source\PSoC4/LCD_Char.c **** *
 263:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 264:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_PutChar(char8 character) 
 265:.\Generated_Source\PSoC4/LCD_Char.c **** {
 391              		.loc 1 265 0
 392              		.cfi_startproc
 393 0000 80B5     		push	{r7, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 82B0     		sub	sp, sp, #8
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 401 0006 021C     		mov	r2, r0
 402 0008 FB1D     		add	r3, r7, #7
 403 000a 1A70     		strb	r2, [r3]
 266:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WriteData((uint8)character);
 404              		.loc 1 266 0
 405 000c FB1D     		add	r3, r7, #7
 406 000e 1B78     		ldrb	r3, [r3]
 407 0010 181C     		mov	r0, r3
 408 0012 FFF7FEFF 		bl	LCD_Char_WriteData
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 13


 267:.\Generated_Source\PSoC4/LCD_Char.c **** }
 409              		.loc 1 267 0
 410 0016 BD46     		mov	sp, r7
 411 0018 02B0     		add	sp, sp, #8
 412              		@ sp needed
 413 001a 80BD     		pop	{r7, pc}
 414              		.cfi_endproc
 415              	.LFE6:
 416              		.size	LCD_Char_PutChar, .-LCD_Char_PutChar
 417              		.section	.text.LCD_Char_WriteData,"ax",%progbits
 418              		.align	2
 419              		.global	LCD_Char_WriteData
 420              		.code	16
 421              		.thumb_func
 422              		.type	LCD_Char_WriteData, %function
 423              	LCD_Char_WriteData:
 424              	.LFB7:
 268:.\Generated_Source\PSoC4/LCD_Char.c **** 
 269:.\Generated_Source\PSoC4/LCD_Char.c **** 
 270:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 271:.\Generated_Source\PSoC4/LCD_Char.c **** *  Function Name: LCD_Char_WriteData
 272:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 273:.\Generated_Source\PSoC4/LCD_Char.c **** *
 274:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 275:.\Generated_Source\PSoC4/LCD_Char.c **** *  Writes a data byte to the LCD module's Data Display RAM.
 276:.\Generated_Source\PSoC4/LCD_Char.c **** *
 277:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 278:.\Generated_Source\PSoC4/LCD_Char.c **** *  dByte: Byte to be written to the LCD module
 279:.\Generated_Source\PSoC4/LCD_Char.c **** *
 280:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 281:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 282:.\Generated_Source\PSoC4/LCD_Char.c **** *
 283:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 284:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_WriteData(uint8 dByte) 
 285:.\Generated_Source\PSoC4/LCD_Char.c **** {
 425              		.loc 1 285 0
 426              		.cfi_startproc
 427 0000 80B5     		push	{r7, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 84B0     		sub	sp, sp, #16
 432              		.cfi_def_cfa_offset 24
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 435 0006 021C     		mov	r2, r0
 436 0008 FB1D     		add	r3, r7, #7
 437 000a 1A70     		strb	r2, [r3]
 286:.\Generated_Source\PSoC4/LCD_Char.c ****     uint8 nibble;
 287:.\Generated_Source\PSoC4/LCD_Char.c **** 
 288:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_IsReady();
 438              		.loc 1 288 0
 439 000c FFF7FEFF 		bl	LCD_Char_IsReady
 289:.\Generated_Source\PSoC4/LCD_Char.c ****     nibble = dByte >> LCD_Char_NIBBLE_SHIFT;
 440              		.loc 1 289 0
 441 0010 3B1C     		mov	r3, r7
 442 0012 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 14


 443 0014 FA1D     		add	r2, r7, #7
 444 0016 1278     		ldrb	r2, [r2]
 445 0018 1209     		lsr	r2, r2, #4
 446 001a 1A70     		strb	r2, [r3]
 290:.\Generated_Source\PSoC4/LCD_Char.c **** 
 291:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Write high nibble */
 292:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrDatNib(nibble);
 447              		.loc 1 292 0
 448 001c 3B1C     		mov	r3, r7
 449 001e 0F33     		add	r3, r3, #15
 450 0020 1B78     		ldrb	r3, [r3]
 451 0022 181C     		mov	r0, r3
 452 0024 FFF7FEFF 		bl	LCD_Char_WrDatNib
 293:.\Generated_Source\PSoC4/LCD_Char.c **** 
 294:.\Generated_Source\PSoC4/LCD_Char.c ****     nibble = dByte & LCD_Char_NIBBLE_MASK;
 453              		.loc 1 294 0
 454 0028 3B1C     		mov	r3, r7
 455 002a 0F33     		add	r3, r3, #15
 456 002c FA1D     		add	r2, r7, #7
 457 002e 1178     		ldrb	r1, [r2]
 458 0030 0F22     		mov	r2, #15
 459 0032 0A40     		and	r2, r1
 460 0034 1A70     		strb	r2, [r3]
 295:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Write low nibble */
 296:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrDatNib(nibble);
 461              		.loc 1 296 0
 462 0036 3B1C     		mov	r3, r7
 463 0038 0F33     		add	r3, r3, #15
 464 003a 1B78     		ldrb	r3, [r3]
 465 003c 181C     		mov	r0, r3
 466 003e FFF7FEFF 		bl	LCD_Char_WrDatNib
 297:.\Generated_Source\PSoC4/LCD_Char.c **** }
 467              		.loc 1 297 0
 468 0042 BD46     		mov	sp, r7
 469 0044 04B0     		add	sp, sp, #16
 470              		@ sp needed
 471 0046 80BD     		pop	{r7, pc}
 472              		.cfi_endproc
 473              	.LFE7:
 474              		.size	LCD_Char_WriteData, .-LCD_Char_WriteData
 475              		.section	.text.LCD_Char_WriteControl,"ax",%progbits
 476              		.align	2
 477              		.global	LCD_Char_WriteControl
 478              		.code	16
 479              		.thumb_func
 480              		.type	LCD_Char_WriteControl, %function
 481              	LCD_Char_WriteControl:
 482              	.LFB8:
 298:.\Generated_Source\PSoC4/LCD_Char.c **** 
 299:.\Generated_Source\PSoC4/LCD_Char.c **** 
 300:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/LCD_Char.c **** *  Function Name: LCD_Char_WriteControl
 302:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/LCD_Char.c **** *
 304:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 305:.\Generated_Source\PSoC4/LCD_Char.c **** *  Writes a command byte to the LCD module.
 306:.\Generated_Source\PSoC4/LCD_Char.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 15


 307:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 308:.\Generated_Source\PSoC4/LCD_Char.c **** *  cByte:  The byte to be written to theLCD module
 309:.\Generated_Source\PSoC4/LCD_Char.c **** * 
 310:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 311:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 312:.\Generated_Source\PSoC4/LCD_Char.c **** *
 313:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 314:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_WriteControl(uint8 cByte) 
 315:.\Generated_Source\PSoC4/LCD_Char.c **** {
 483              		.loc 1 315 0
 484              		.cfi_startproc
 485 0000 80B5     		push	{r7, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 84B0     		sub	sp, sp, #16
 490              		.cfi_def_cfa_offset 24
 491 0004 00AF     		add	r7, sp, #0
 492              		.cfi_def_cfa_register 7
 493 0006 021C     		mov	r2, r0
 494 0008 FB1D     		add	r3, r7, #7
 495 000a 1A70     		strb	r2, [r3]
 316:.\Generated_Source\PSoC4/LCD_Char.c ****     uint8 nibble;
 317:.\Generated_Source\PSoC4/LCD_Char.c **** 
 318:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_IsReady();
 496              		.loc 1 318 0
 497 000c FFF7FEFF 		bl	LCD_Char_IsReady
 319:.\Generated_Source\PSoC4/LCD_Char.c **** 
 320:.\Generated_Source\PSoC4/LCD_Char.c ****     nibble = cByte >> LCD_Char_NIBBLE_SHIFT;
 498              		.loc 1 320 0
 499 0010 3B1C     		mov	r3, r7
 500 0012 0F33     		add	r3, r3, #15
 501 0014 FA1D     		add	r2, r7, #7
 502 0016 1278     		ldrb	r2, [r2]
 503 0018 1209     		lsr	r2, r2, #4
 504 001a 1A70     		strb	r2, [r3]
 321:.\Generated_Source\PSoC4/LCD_Char.c ****     
 322:.\Generated_Source\PSoC4/LCD_Char.c ****     /* WrCntrlNib(High Nibble) */
 323:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrCntrlNib(nibble);
 505              		.loc 1 323 0
 506 001c 3B1C     		mov	r3, r7
 507 001e 0F33     		add	r3, r3, #15
 508 0020 1B78     		ldrb	r3, [r3]
 509 0022 181C     		mov	r0, r3
 510 0024 FFF7FEFF 		bl	LCD_Char_WrCntrlNib
 324:.\Generated_Source\PSoC4/LCD_Char.c ****     nibble = cByte & LCD_Char_NIBBLE_MASK;
 511              		.loc 1 324 0
 512 0028 3B1C     		mov	r3, r7
 513 002a 0F33     		add	r3, r3, #15
 514 002c FA1D     		add	r2, r7, #7
 515 002e 1178     		ldrb	r1, [r2]
 516 0030 0F22     		mov	r2, #15
 517 0032 0A40     		and	r2, r1
 518 0034 1A70     		strb	r2, [r3]
 325:.\Generated_Source\PSoC4/LCD_Char.c **** 
 326:.\Generated_Source\PSoC4/LCD_Char.c ****     /* WrCntrlNib(Low Nibble) */
 327:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_WrCntrlNib(nibble);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 16


 519              		.loc 1 327 0
 520 0036 3B1C     		mov	r3, r7
 521 0038 0F33     		add	r3, r3, #15
 522 003a 1B78     		ldrb	r3, [r3]
 523 003c 181C     		mov	r0, r3
 524 003e FFF7FEFF 		bl	LCD_Char_WrCntrlNib
 328:.\Generated_Source\PSoC4/LCD_Char.c **** }
 525              		.loc 1 328 0
 526 0042 BD46     		mov	sp, r7
 527 0044 04B0     		add	sp, sp, #16
 528              		@ sp needed
 529 0046 80BD     		pop	{r7, pc}
 530              		.cfi_endproc
 531              	.LFE8:
 532              		.size	LCD_Char_WriteControl, .-LCD_Char_WriteControl
 533              		.section	.text.LCD_Char_IsReady,"ax",%progbits
 534              		.align	2
 535              		.global	LCD_Char_IsReady
 536              		.code	16
 537              		.thumb_func
 538              		.type	LCD_Char_IsReady, %function
 539              	LCD_Char_IsReady:
 540              	.LFB9:
 329:.\Generated_Source\PSoC4/LCD_Char.c **** 
 330:.\Generated_Source\PSoC4/LCD_Char.c **** 
 331:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 332:.\Generated_Source\PSoC4/LCD_Char.c **** * Function Name: LCD_Char_IsReady
 333:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 334:.\Generated_Source\PSoC4/LCD_Char.c **** *
 335:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 336:.\Generated_Source\PSoC4/LCD_Char.c **** *  Polls the LCD until the ready bit is set.
 337:.\Generated_Source\PSoC4/LCD_Char.c **** *
 338:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 339:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 340:.\Generated_Source\PSoC4/LCD_Char.c **** *
 341:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 342:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 343:.\Generated_Source\PSoC4/LCD_Char.c **** *
 344:.\Generated_Source\PSoC4/LCD_Char.c **** * Note:
 345:.\Generated_Source\PSoC4/LCD_Char.c **** *  Changes the pins to High-Z.
 346:.\Generated_Source\PSoC4/LCD_Char.c **** *
 347:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 348:.\Generated_Source\PSoC4/LCD_Char.c **** void LCD_Char_IsReady(void) 
 349:.\Generated_Source\PSoC4/LCD_Char.c **** {
 541              		.loc 1 349 0
 542              		.cfi_startproc
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 350:.\Generated_Source\PSoC4/LCD_Char.c ****     uint32 value;
 351:.\Generated_Source\PSoC4/LCD_Char.c **** 
 352:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Clear LCD port*/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 17


 353:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_PORT_MASK));
 551              		.loc 1 353 0
 552 0006 314B     		ldr	r3, .L30
 553 0008 304A     		ldr	r2, .L30
 554 000a 1268     		ldr	r2, [r2]
 555 000c FE21     		mov	r1, #254
 556 000e 8A43     		bic	r2, r1
 557 0010 1A60     		str	r2, [r3]
 354:.\Generated_Source\PSoC4/LCD_Char.c **** 
 355:.\Generated_Source\PSoC4/LCD_Char.c ****     /* PSoC4 has a little different from PSoC3/5 port/pin organization for setting Drive Modes.
 356:.\Generated_Source\PSoC4/LCD_Char.c ****   
 357:.\Generated_Source\PSoC4/LCD_Char.c ****     */
 358:.\Generated_Source\PSoC4/LCD_Char.c ****     #if (CY_PSOC4)
 359:.\Generated_Source\PSoC4/LCD_Char.c ****         
 360:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear old values out */
 361:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_PC_REG & ((uint32) (~ LCD_Char_DM_DATA_MASK));
 558              		.loc 1 361 0
 559 0012 2F4B     		ldr	r3, .L30+4
 560 0014 1A68     		ldr	r2, [r3]
 561 0016 2F4B     		ldr	r3, .L30+8
 562 0018 1340     		and	r3, r2
 563 001a 7B60     		str	r3, [r7, #4]
 362:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Load in high Z values for data pins, others unchanged */
 363:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_PC_REG = value | LCD_Char_HIGH_Z_DATA_DM;
 564              		.loc 1 363 0
 565 001c 2C4B     		ldr	r3, .L30+4
 566 001e 7A68     		ldr	r2, [r7, #4]
 567 0020 2D49     		ldr	r1, .L30+12
 568 0022 0A43     		orr	r2, r1
 569 0024 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/LCD_Char.c **** 
 365:.\Generated_Source\PSoC4/LCD_Char.c ****     #else
 366:.\Generated_Source\PSoC4/LCD_Char.c ****     
 367:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Change Port to High-Z Status on data pins */
 368:.\Generated_Source\PSoC4/LCD_Char.c **** 
 369:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear old values out */
 370:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_DM0_REG & ((uint8)(~LCD_Char_DATA_MASK));
 371:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Load in high Z values for data pins, others unchanged */
 372:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DM0_REG = value | (LCD_Char_HIGH_Z_DM0 & LCD_Char_DATA_MASK);
 373:.\Generated_Source\PSoC4/LCD_Char.c **** 
 374:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear old values out */
 375:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_DM1_REG & ((uint8)(~LCD_Char_DATA_MASK));
 376:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Load in high Z values for data pins, others unchanged */
 377:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DM1_REG = value;
 378:.\Generated_Source\PSoC4/LCD_Char.c **** 
 379:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear old values out */
 380:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_DM2_REG & ((uint8)(~LCD_Char_DATA_MASK));
 381:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Load in high Z values for data pins, others unchanged */
 382:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DM2_REG = value;
 383:.\Generated_Source\PSoC4/LCD_Char.c ****     
 384:.\Generated_Source\PSoC4/LCD_Char.c ****     #endif /* CY_PSOC4 */
 385:.\Generated_Source\PSoC4/LCD_Char.c ****     
 386:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Make sure RS is low */
 387:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_RS));
 570              		.loc 1 387 0
 571 0026 294B     		ldr	r3, .L30
 572 0028 284A     		ldr	r2, .L30
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 18


 573 002a 1268     		ldr	r2, [r2]
 574 002c 4021     		mov	r1, #64
 575 002e 8A43     		bic	r2, r1
 576 0030 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/LCD_Char.c **** 
 389:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Set R/W high to read */
 390:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG |= LCD_Char_RW;
 577              		.loc 1 390 0
 578 0032 264B     		ldr	r3, .L30
 579 0034 254A     		ldr	r2, .L30
 580 0036 1268     		ldr	r2, [r2]
 581 0038 8021     		mov	r1, #128
 582 003a 0A43     		orr	r2, r1
 583 003c 1A60     		str	r2, [r3]
 584              	.L29:
 391:.\Generated_Source\PSoC4/LCD_Char.c **** 
 392:.\Generated_Source\PSoC4/LCD_Char.c ****     do
 393:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 394:.\Generated_Source\PSoC4/LCD_Char.c ****         /* 40 ns delay required before rising Enable and 500ns between neighbour Enables */
 395:.\Generated_Source\PSoC4/LCD_Char.c ****         CyDelayUs(0u);
 585              		.loc 1 395 0 discriminator 1
 586 003e 0020     		mov	r0, #0
 587 0040 FFF7FEFF 		bl	CyDelayUs
 396:.\Generated_Source\PSoC4/LCD_Char.c **** 
 397:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Set E high */
 398:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= LCD_Char_E;
 588              		.loc 1 398 0 discriminator 1
 589 0044 214B     		ldr	r3, .L30
 590 0046 214A     		ldr	r2, .L30
 591 0048 1268     		ldr	r2, [r2]
 592 004a 2021     		mov	r1, #32
 593 004c 0A43     		orr	r2, r1
 594 004e 1A60     		str	r2, [r3]
 399:.\Generated_Source\PSoC4/LCD_Char.c **** 
 400:.\Generated_Source\PSoC4/LCD_Char.c ****         /* 360 ns delay setup time for data pins */
 401:.\Generated_Source\PSoC4/LCD_Char.c ****         CyDelayUs(1u);
 595              		.loc 1 401 0 discriminator 1
 596 0050 0120     		mov	r0, #1
 597 0052 FFF7FEFF 		bl	CyDelayUs
 402:.\Generated_Source\PSoC4/LCD_Char.c **** 
 403:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Get port state */
 404:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_PS_REG;
 598              		.loc 1 404 0 discriminator 1
 599 0056 214B     		ldr	r3, .L30+16
 600 0058 1B68     		ldr	r3, [r3]
 601 005a 7B60     		str	r3, [r7, #4]
 405:.\Generated_Source\PSoC4/LCD_Char.c **** 
 406:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Set enable low */
 407:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_E));
 602              		.loc 1 407 0 discriminator 1
 603 005c 1B4B     		ldr	r3, .L30
 604 005e 1B4A     		ldr	r2, .L30
 605 0060 1268     		ldr	r2, [r2]
 606 0062 2021     		mov	r1, #32
 607 0064 8A43     		bic	r2, r1
 608 0066 1A60     		str	r2, [r3]
 408:.\Generated_Source\PSoC4/LCD_Char.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 19


 409:.\Generated_Source\PSoC4/LCD_Char.c ****         /* This gives true delay between disabling Enable bit and polling Ready bit */
 410:.\Generated_Source\PSoC4/LCD_Char.c ****         CyDelayUs(0u);
 609              		.loc 1 410 0 discriminator 1
 610 0068 0020     		mov	r0, #0
 611 006a FFF7FEFF 		bl	CyDelayUs
 411:.\Generated_Source\PSoC4/LCD_Char.c **** 
 412:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Extract ready bit */
 413:.\Generated_Source\PSoC4/LCD_Char.c ****         value &= LCD_Char_READY_BIT;
 612              		.loc 1 413 0 discriminator 1
 613 006e 7A68     		ldr	r2, [r7, #4]
 614 0070 1023     		mov	r3, #16
 615 0072 1340     		and	r3, r2
 616 0074 7B60     		str	r3, [r7, #4]
 414:.\Generated_Source\PSoC4/LCD_Char.c **** 
 415:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Set E high as we in 4-bit interface we need extra operation */
 416:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= LCD_Char_E;
 617              		.loc 1 416 0 discriminator 1
 618 0076 154B     		ldr	r3, .L30
 619 0078 144A     		ldr	r2, .L30
 620 007a 1268     		ldr	r2, [r2]
 621 007c 2021     		mov	r1, #32
 622 007e 0A43     		orr	r2, r1
 623 0080 1A60     		str	r2, [r3]
 417:.\Generated_Source\PSoC4/LCD_Char.c **** 
 418:.\Generated_Source\PSoC4/LCD_Char.c ****         /* 360 ns delay the setup time for data pins */
 419:.\Generated_Source\PSoC4/LCD_Char.c ****         CyDelayUs(1u);
 624              		.loc 1 419 0 discriminator 1
 625 0082 0120     		mov	r0, #1
 626 0084 FFF7FEFF 		bl	CyDelayUs
 420:.\Generated_Source\PSoC4/LCD_Char.c **** 
 421:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Set enable low */
 422:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_E));
 627              		.loc 1 422 0 discriminator 1
 628 0088 104B     		ldr	r3, .L30
 629 008a 104A     		ldr	r2, .L30
 630 008c 1268     		ldr	r2, [r2]
 631 008e 2021     		mov	r1, #32
 632 0090 8A43     		bic	r2, r1
 633 0092 1A60     		str	r2, [r3]
 423:.\Generated_Source\PSoC4/LCD_Char.c **** 
 424:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Repeat until bit 4 is not zero. */
 425:.\Generated_Source\PSoC4/LCD_Char.c **** 
 426:.\Generated_Source\PSoC4/LCD_Char.c ****     } while (value != 0u);
 634              		.loc 1 426 0 discriminator 1
 635 0094 7B68     		ldr	r3, [r7, #4]
 636 0096 002B     		cmp	r3, #0
 637 0098 D1D1     		bne	.L29
 427:.\Generated_Source\PSoC4/LCD_Char.c **** 
 428:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Set R/W low to write */
 429:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_RW));
 638              		.loc 1 429 0
 639 009a 0C4B     		ldr	r3, .L30
 640 009c 0B4A     		ldr	r2, .L30
 641 009e 1268     		ldr	r2, [r2]
 642 00a0 8021     		mov	r1, #128
 643 00a2 8A43     		bic	r2, r1
 644 00a4 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 20


 430:.\Generated_Source\PSoC4/LCD_Char.c **** 
 431:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Clear LCD port*/
 432:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_PORT_MASK));
 645              		.loc 1 432 0
 646 00a6 094B     		ldr	r3, .L30
 647 00a8 084A     		ldr	r2, .L30
 648 00aa 1268     		ldr	r2, [r2]
 649 00ac FE21     		mov	r1, #254
 650 00ae 8A43     		bic	r2, r1
 651 00b0 1A60     		str	r2, [r3]
 433:.\Generated_Source\PSoC4/LCD_Char.c **** 
 434:.\Generated_Source\PSoC4/LCD_Char.c ****     #if (CY_PSOC4)
 435:.\Generated_Source\PSoC4/LCD_Char.c ****         
 436:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear old values out */
 437:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_PC_REG & ((uint32)(~ LCD_Char_DM_DATA_MASK));
 652              		.loc 1 437 0
 653 00b2 074B     		ldr	r3, .L30+4
 654 00b4 1A68     		ldr	r2, [r3]
 655 00b6 074B     		ldr	r3, .L30+8
 656 00b8 1340     		and	r3, r2
 657 00ba 7B60     		str	r3, [r7, #4]
 438:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Load in high Z values for data pins, others unchanged */
 439:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_PC_REG = value | LCD_Char_STRONG_DATA_DM;
 658              		.loc 1 439 0
 659 00bc 044B     		ldr	r3, .L30+4
 660 00be 7A68     		ldr	r2, [r7, #4]
 661 00c0 0749     		ldr	r1, .L30+20
 662 00c2 0A43     		orr	r2, r1
 663 00c4 1A60     		str	r2, [r3]
 440:.\Generated_Source\PSoC4/LCD_Char.c **** 
 441:.\Generated_Source\PSoC4/LCD_Char.c ****     #else
 442:.\Generated_Source\PSoC4/LCD_Char.c **** 
 443:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Change Port to Output (Strong) on data pins */
 444:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear high z values out. Configure data pins 
 445:.\Generated_Source\PSoC4/LCD_Char.c ****         * to Strong Drive, others unchanged.
 446:.\Generated_Source\PSoC4/LCD_Char.c ****         */
 447:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DM0_REG &= ((uint8)(~LCD_Char_DATA_MASK));
 448:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear high z values out */
 449:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_DM1_REG & ((uint8)(~LCD_Char_DATA_MASK));
 450:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Configure data pins to Strong Drive, others unchanged */
 451:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DM1_REG = value | (LCD_Char_STRONG_DM1 & LCD_Char_DATA_MASK);
 452:.\Generated_Source\PSoC4/LCD_Char.c **** 
 453:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Mask off data pins to clear high z values out */
 454:.\Generated_Source\PSoC4/LCD_Char.c ****         value = LCD_Char_PORT_DM2_REG & ((uint8)(~LCD_Char_DATA_MASK));
 455:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Configure data pins to Strong Drive, others unchanged */
 456:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DM2_REG = value | (LCD_Char_STRONG_DM2 & LCD_Char_DATA_MASK);
 457:.\Generated_Source\PSoC4/LCD_Char.c ****     
 458:.\Generated_Source\PSoC4/LCD_Char.c ****     #endif /* CY_PSOC4 */
 459:.\Generated_Source\PSoC4/LCD_Char.c **** }
 664              		.loc 1 459 0
 665 00c6 BD46     		mov	sp, r7
 666 00c8 02B0     		add	sp, sp, #8
 667              		@ sp needed
 668 00ca 80BD     		pop	{r7, pc}
 669              	.L31:
 670              		.align	2
 671              	.L30:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 21


 672 00cc 00020440 		.word	1074004480
 673 00d0 08020440 		.word	1074004488
 674 00d4 0780FFFF 		.word	-32761
 675 00d8 48120000 		.word	4680
 676 00dc 04020440 		.word	1074004484
 677 00e0 B06D0000 		.word	28080
 678              		.cfi_endproc
 679              	.LFE9:
 680              		.size	LCD_Char_IsReady, .-LCD_Char_IsReady
 681              		.section	.text.LCD_Char_WrDatNib,"ax",%progbits
 682              		.align	2
 683              		.code	16
 684              		.thumb_func
 685              		.type	LCD_Char_WrDatNib, %function
 686              	LCD_Char_WrDatNib:
 687              	.LFB10:
 460:.\Generated_Source\PSoC4/LCD_Char.c **** 
 461:.\Generated_Source\PSoC4/LCD_Char.c **** 
 462:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 463:.\Generated_Source\PSoC4/LCD_Char.c **** *  Function Name: LCD_Char_WrDatNib
 464:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 465:.\Generated_Source\PSoC4/LCD_Char.c **** *
 466:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 467:.\Generated_Source\PSoC4/LCD_Char.c **** *  Writes a data nibble to the LCD module.
 468:.\Generated_Source\PSoC4/LCD_Char.c **** *
 469:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 470:.\Generated_Source\PSoC4/LCD_Char.c **** *  nibble:  Byte containing nibble in least significant nibble to be written
 471:.\Generated_Source\PSoC4/LCD_Char.c **** *           to LCD module.
 472:.\Generated_Source\PSoC4/LCD_Char.c **** *
 473:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 474:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 475:.\Generated_Source\PSoC4/LCD_Char.c **** *
 476:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 477:.\Generated_Source\PSoC4/LCD_Char.c **** static void LCD_Char_WrDatNib(uint8 nibble) 
 478:.\Generated_Source\PSoC4/LCD_Char.c **** {
 688              		.loc 1 478 0
 689              		.cfi_startproc
 690 0000 80B5     		push	{r7, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 7, -8
 693              		.cfi_offset 14, -4
 694 0002 82B0     		sub	sp, sp, #8
 695              		.cfi_def_cfa_offset 16
 696 0004 00AF     		add	r7, sp, #0
 697              		.cfi_def_cfa_register 7
 698 0006 021C     		mov	r2, r0
 699 0008 FB1D     		add	r3, r7, #7
 700 000a 1A70     		strb	r2, [r3]
 479:.\Generated_Source\PSoC4/LCD_Char.c ****     /* RS should be low to select data register */
 480:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG |= LCD_Char_RS;
 701              		.loc 1 480 0
 702 000c 164B     		ldr	r3, .L33
 703 000e 164A     		ldr	r2, .L33
 704 0010 1268     		ldr	r2, [r2]
 705 0012 4021     		mov	r1, #64
 706 0014 0A43     		orr	r2, r1
 707 0016 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 22


 481:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Reset RW for write operation */
 482:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_RW));
 708              		.loc 1 482 0
 709 0018 134B     		ldr	r3, .L33
 710 001a 134A     		ldr	r2, .L33
 711 001c 1268     		ldr	r2, [r2]
 712 001e 8021     		mov	r1, #128
 713 0020 8A43     		bic	r2, r1
 714 0022 1A60     		str	r2, [r3]
 483:.\Generated_Source\PSoC4/LCD_Char.c **** 
 484:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Guaranteed delay between Setting RS and RW and setting E bits */
 485:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelayUs(0u);
 715              		.loc 1 485 0
 716 0024 0020     		mov	r0, #0
 717 0026 FFF7FEFF 		bl	CyDelayUs
 486:.\Generated_Source\PSoC4/LCD_Char.c ****     
 487:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Clear data pins */
 488:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_DATA_MASK));
 718              		.loc 1 488 0
 719 002a 0F4B     		ldr	r3, .L33
 720 002c 0E4A     		ldr	r2, .L33
 721 002e 1268     		ldr	r2, [r2]
 722 0030 1E21     		mov	r1, #30
 723 0032 8A43     		bic	r2, r1
 724 0034 1A60     		str	r2, [r3]
 489:.\Generated_Source\PSoC4/LCD_Char.c **** 
 490:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Write data, bring E high */
 491:.\Generated_Source\PSoC4/LCD_Char.c ****     #if(0u != LCD_Char_PORT_SHIFT) /* MISRA forbids shift by 0 so need to handle that */
 492:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= 
 725              		.loc 1 492 0
 726 0036 0C4B     		ldr	r3, .L33
 727 0038 0B4A     		ldr	r2, .L33
 728 003a 1168     		ldr	r1, [r2]
 493:.\Generated_Source\PSoC4/LCD_Char.c ****             (LCD_Char_E | ((uint8)(((uint8) nibble) << LCD_Char_PORT_SHIFT)));
 729              		.loc 1 493 0
 730 003c FA1D     		add	r2, r7, #7
 731 003e 1278     		ldrb	r2, [r2]
 732 0040 9218     		add	r2, r2, r2
 733 0042 D2B2     		uxtb	r2, r2
 734 0044 2020     		mov	r0, #32
 735 0046 0243     		orr	r2, r0
 736 0048 D2B2     		uxtb	r2, r2
 492:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= 
 737              		.loc 1 492 0
 738 004a 0A43     		orr	r2, r1
 739 004c 1A60     		str	r2, [r3]
 494:.\Generated_Source\PSoC4/LCD_Char.c ****     #else
 495:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= (LCD_Char_E | nibble);
 496:.\Generated_Source\PSoC4/LCD_Char.c ****     #endif /* (0u != LCD_Char_PORT_SHIFT) */
 497:.\Generated_Source\PSoC4/LCD_Char.c **** 
 498:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Minimum of 230 ns delay */
 499:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelayUs(1u);
 740              		.loc 1 499 0
 741 004e 0120     		mov	r0, #1
 742 0050 FFF7FEFF 		bl	CyDelayUs
 500:.\Generated_Source\PSoC4/LCD_Char.c **** 
 501:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_E));
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 23


 743              		.loc 1 501 0
 744 0054 044B     		ldr	r3, .L33
 745 0056 044A     		ldr	r2, .L33
 746 0058 1268     		ldr	r2, [r2]
 747 005a 2021     		mov	r1, #32
 748 005c 8A43     		bic	r2, r1
 749 005e 1A60     		str	r2, [r3]
 502:.\Generated_Source\PSoC4/LCD_Char.c **** }
 750              		.loc 1 502 0
 751 0060 BD46     		mov	sp, r7
 752 0062 02B0     		add	sp, sp, #8
 753              		@ sp needed
 754 0064 80BD     		pop	{r7, pc}
 755              	.L34:
 756 0066 C046     		.align	2
 757              	.L33:
 758 0068 00020440 		.word	1074004480
 759              		.cfi_endproc
 760              	.LFE10:
 761              		.size	LCD_Char_WrDatNib, .-LCD_Char_WrDatNib
 762              		.section	.text.LCD_Char_WrCntrlNib,"ax",%progbits
 763              		.align	2
 764              		.code	16
 765              		.thumb_func
 766              		.type	LCD_Char_WrCntrlNib, %function
 767              	LCD_Char_WrCntrlNib:
 768              	.LFB11:
 503:.\Generated_Source\PSoC4/LCD_Char.c **** 
 504:.\Generated_Source\PSoC4/LCD_Char.c **** 
 505:.\Generated_Source\PSoC4/LCD_Char.c **** /*******************************************************************************
 506:.\Generated_Source\PSoC4/LCD_Char.c **** *  Function Name: LCD_Char_WrCntrlNib
 507:.\Generated_Source\PSoC4/LCD_Char.c **** ********************************************************************************
 508:.\Generated_Source\PSoC4/LCD_Char.c **** *
 509:.\Generated_Source\PSoC4/LCD_Char.c **** * Summary:
 510:.\Generated_Source\PSoC4/LCD_Char.c **** *  Writes a control nibble to the LCD module.
 511:.\Generated_Source\PSoC4/LCD_Char.c **** *
 512:.\Generated_Source\PSoC4/LCD_Char.c **** * Parameters:
 513:.\Generated_Source\PSoC4/LCD_Char.c **** *  nibble: The byte containing a nibble in the four least significant bits.????
 514:.\Generated_Source\PSoC4/LCD_Char.c **** *
 515:.\Generated_Source\PSoC4/LCD_Char.c **** * Return:
 516:.\Generated_Source\PSoC4/LCD_Char.c **** *  None.
 517:.\Generated_Source\PSoC4/LCD_Char.c **** *
 518:.\Generated_Source\PSoC4/LCD_Char.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/LCD_Char.c **** static void LCD_Char_WrCntrlNib(uint8 nibble) 
 520:.\Generated_Source\PSoC4/LCD_Char.c **** {
 769              		.loc 1 520 0
 770              		.cfi_startproc
 771 0000 80B5     		push	{r7, lr}
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 0002 82B0     		sub	sp, sp, #8
 776              		.cfi_def_cfa_offset 16
 777 0004 00AF     		add	r7, sp, #0
 778              		.cfi_def_cfa_register 7
 779 0006 021C     		mov	r2, r0
 780 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 24


 781 000a 1A70     		strb	r2, [r3]
 521:.\Generated_Source\PSoC4/LCD_Char.c ****     /* RS and RW should be low to select instruction register and  write operation respectively */
 522:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~(LCD_Char_RS | LCD_Char_RW)));
 782              		.loc 1 522 0
 783 000c 114B     		ldr	r3, .L36
 784 000e 114A     		ldr	r2, .L36
 785 0010 1268     		ldr	r2, [r2]
 786 0012 C021     		mov	r1, #192
 787 0014 8A43     		bic	r2, r1
 788 0016 1A60     		str	r2, [r3]
 523:.\Generated_Source\PSoC4/LCD_Char.c **** 
 524:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Two following lines of code will give 40ns delay */
 525:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Clear data pins */
 526:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_DATA_MASK));
 789              		.loc 1 526 0
 790 0018 0E4B     		ldr	r3, .L36
 791 001a 0E4A     		ldr	r2, .L36
 792 001c 1268     		ldr	r2, [r2]
 793 001e 1E21     		mov	r1, #30
 794 0020 8A43     		bic	r2, r1
 795 0022 1A60     		str	r2, [r3]
 527:.\Generated_Source\PSoC4/LCD_Char.c **** 
 528:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Write control data and set enable signal */
 529:.\Generated_Source\PSoC4/LCD_Char.c ****     #if(0u != LCD_Char_PORT_SHIFT) /* MISRA forbids shift by 0 so need to handle that */
 530:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= 
 796              		.loc 1 530 0
 797 0024 0B4B     		ldr	r3, .L36
 798 0026 0B4A     		ldr	r2, .L36
 799 0028 1168     		ldr	r1, [r2]
 531:.\Generated_Source\PSoC4/LCD_Char.c ****             (LCD_Char_E | ((uint8)(((uint8) nibble) << LCD_Char_PORT_SHIFT)));
 800              		.loc 1 531 0
 801 002a FA1D     		add	r2, r7, #7
 802 002c 1278     		ldrb	r2, [r2]
 803 002e 9218     		add	r2, r2, r2
 804 0030 D2B2     		uxtb	r2, r2
 805 0032 2020     		mov	r0, #32
 806 0034 0243     		orr	r2, r0
 807 0036 D2B2     		uxtb	r2, r2
 530:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= 
 808              		.loc 1 530 0
 809 0038 0A43     		orr	r2, r1
 810 003a 1A60     		str	r2, [r3]
 532:.\Generated_Source\PSoC4/LCD_Char.c ****     #else
 533:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PORT_DR_REG |= (LCD_Char_E | nibble);
 534:.\Generated_Source\PSoC4/LCD_Char.c ****     #endif /* (0u != LCD_Char_PORT_SHIFT) */
 535:.\Generated_Source\PSoC4/LCD_Char.c **** 
 536:.\Generated_Source\PSoC4/LCD_Char.c ****     /* Minimum of 230 ns delay */
 537:.\Generated_Source\PSoC4/LCD_Char.c ****     CyDelayUs(1u);
 811              		.loc 1 537 0
 812 003c 0120     		mov	r0, #1
 813 003e FFF7FEFF 		bl	CyDelayUs
 538:.\Generated_Source\PSoC4/LCD_Char.c **** 
 539:.\Generated_Source\PSoC4/LCD_Char.c ****     LCD_Char_PORT_DR_REG &= ((uint32)(~LCD_Char_E));
 814              		.loc 1 539 0
 815 0042 044B     		ldr	r3, .L36
 816 0044 034A     		ldr	r2, .L36
 817 0046 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 25


 818 0048 2021     		mov	r1, #32
 819 004a 8A43     		bic	r2, r1
 820 004c 1A60     		str	r2, [r3]
 540:.\Generated_Source\PSoC4/LCD_Char.c **** }
 821              		.loc 1 540 0
 822 004e BD46     		mov	sp, r7
 823 0050 02B0     		add	sp, sp, #8
 824              		@ sp needed
 825 0052 80BD     		pop	{r7, pc}
 826              	.L37:
 827              		.align	2
 828              	.L36:
 829 0054 00020440 		.word	1074004480
 830              		.cfi_endproc
 831              	.LFE11:
 832              		.size	LCD_Char_WrCntrlNib, .-LCD_Char_WrCntrlNib
 833              		.section	.text.LCD_Char_PrintInt8,"ax",%progbits
 834              		.align	2
 835              		.global	LCD_Char_PrintInt8
 836              		.code	16
 837              		.thumb_func
 838              		.type	LCD_Char_PrintInt8, %function
 839              	LCD_Char_PrintInt8:
 840              	.LFB12:
 541:.\Generated_Source\PSoC4/LCD_Char.c **** 
 542:.\Generated_Source\PSoC4/LCD_Char.c **** 
 543:.\Generated_Source\PSoC4/LCD_Char.c **** #if(LCD_Char_CONVERSION_ROUTINES == 1u)
 544:.\Generated_Source\PSoC4/LCD_Char.c **** 
 545:.\Generated_Source\PSoC4/LCD_Char.c ****     /*******************************************************************************
 546:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Function Name: LCD_Char_PrintInt8
 547:.\Generated_Source\PSoC4/LCD_Char.c ****     ********************************************************************************
 548:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 549:.\Generated_Source\PSoC4/LCD_Char.c ****     * Summary:
 550:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Print a byte as two ASCII characters.
 551:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 552:.\Generated_Source\PSoC4/LCD_Char.c ****     * Parameters:
 553:.\Generated_Source\PSoC4/LCD_Char.c ****     *  value: The byte to be printed out as ASCII characters.
 554:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 555:.\Generated_Source\PSoC4/LCD_Char.c ****     * Return:
 556:.\Generated_Source\PSoC4/LCD_Char.c ****     *  None.
 557:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 558:.\Generated_Source\PSoC4/LCD_Char.c ****     *******************************************************************************/
 559:.\Generated_Source\PSoC4/LCD_Char.c ****     void LCD_Char_PrintInt8(uint8 value) 
 560:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 841              		.loc 1 560 0
 842              		.cfi_startproc
 843 0000 80B5     		push	{r7, lr}
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 7, -8
 846              		.cfi_offset 14, -4
 847 0002 82B0     		sub	sp, sp, #8
 848              		.cfi_def_cfa_offset 16
 849 0004 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 851 0006 021C     		mov	r2, r0
 852 0008 FB1D     		add	r3, r7, #7
 853 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 26


 561:.\Generated_Source\PSoC4/LCD_Char.c ****         static char8 const CYCODE LCD_Char_hex[16u] = "0123456789ABCDEF";
 562:.\Generated_Source\PSoC4/LCD_Char.c ****         
 563:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PutChar((char8) LCD_Char_hex[value >> LCD_Char_BYTE_UPPER_NIBBLE_SHIFT]);
 854              		.loc 1 563 0
 855 000c FB1D     		add	r3, r7, #7
 856 000e 1B78     		ldrb	r3, [r3]
 857 0010 1B09     		lsr	r3, r3, #4
 858 0012 DBB2     		uxtb	r3, r3
 859 0014 084A     		ldr	r2, .L39
 860 0016 D35C     		ldrb	r3, [r2, r3]
 861 0018 181C     		mov	r0, r3
 862 001a FFF7FEFF 		bl	LCD_Char_PutChar
 564:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PutChar((char8) LCD_Char_hex[value & LCD_Char_BYTE_LOWER_NIBBLE_MASK]);
 863              		.loc 1 564 0
 864 001e FB1D     		add	r3, r7, #7
 865 0020 1A78     		ldrb	r2, [r3]
 866 0022 0F23     		mov	r3, #15
 867 0024 1340     		and	r3, r2
 868 0026 044A     		ldr	r2, .L39
 869 0028 D35C     		ldrb	r3, [r2, r3]
 870 002a 181C     		mov	r0, r3
 871 002c FFF7FEFF 		bl	LCD_Char_PutChar
 565:.\Generated_Source\PSoC4/LCD_Char.c ****     }
 872              		.loc 1 565 0
 873 0030 BD46     		mov	sp, r7
 874 0032 02B0     		add	sp, sp, #8
 875              		@ sp needed
 876 0034 80BD     		pop	{r7, pc}
 877              	.L40:
 878 0036 C046     		.align	2
 879              	.L39:
 880 0038 00000000 		.word	LCD_Char_hex.4766
 881              		.cfi_endproc
 882              	.LFE12:
 883              		.size	LCD_Char_PrintInt8, .-LCD_Char_PrintInt8
 884              		.section	.text.LCD_Char_PrintInt16,"ax",%progbits
 885              		.align	2
 886              		.global	LCD_Char_PrintInt16
 887              		.code	16
 888              		.thumb_func
 889              		.type	LCD_Char_PrintInt16, %function
 890              	LCD_Char_PrintInt16:
 891              	.LFB13:
 566:.\Generated_Source\PSoC4/LCD_Char.c **** 
 567:.\Generated_Source\PSoC4/LCD_Char.c **** 
 568:.\Generated_Source\PSoC4/LCD_Char.c ****     /*******************************************************************************
 569:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Function Name: LCD_Char_PrintInt16
 570:.\Generated_Source\PSoC4/LCD_Char.c ****     ********************************************************************************
 571:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 572:.\Generated_Source\PSoC4/LCD_Char.c ****     * Summary:
 573:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Print a uint16 as four ASCII characters.
 574:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 575:.\Generated_Source\PSoC4/LCD_Char.c ****     * Parameters:
 576:.\Generated_Source\PSoC4/LCD_Char.c ****     *  value: The uint16 to be printed out as ASCII characters.
 577:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 578:.\Generated_Source\PSoC4/LCD_Char.c ****     * Return:
 579:.\Generated_Source\PSoC4/LCD_Char.c ****     *  None.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 27


 580:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 581:.\Generated_Source\PSoC4/LCD_Char.c ****     *******************************************************************************/
 582:.\Generated_Source\PSoC4/LCD_Char.c ****     void LCD_Char_PrintInt16(uint16 value) 
 583:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 892              		.loc 1 583 0
 893              		.cfi_startproc
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 021C     		mov	r2, r0
 903 0008 BB1D     		add	r3, r7, #6
 904 000a 1A80     		strh	r2, [r3]
 584:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PrintInt8((uint8)(value >> LCD_Char_U16_UPPER_BYTE_SHIFT));
 905              		.loc 1 584 0
 906 000c BB1D     		add	r3, r7, #6
 907 000e 1B88     		ldrh	r3, [r3]
 908 0010 1B0A     		lsr	r3, r3, #8
 909 0012 9BB2     		uxth	r3, r3
 910 0014 DBB2     		uxtb	r3, r3
 911 0016 181C     		mov	r0, r3
 912 0018 FFF7FEFF 		bl	LCD_Char_PrintInt8
 585:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PrintInt8((uint8)(value & LCD_Char_U16_LOWER_BYTE_MASK));
 913              		.loc 1 585 0
 914 001c BB1D     		add	r3, r7, #6
 915 001e 1B88     		ldrh	r3, [r3]
 916 0020 DBB2     		uxtb	r3, r3
 917 0022 181C     		mov	r0, r3
 918 0024 FFF7FEFF 		bl	LCD_Char_PrintInt8
 586:.\Generated_Source\PSoC4/LCD_Char.c ****     }
 919              		.loc 1 586 0
 920 0028 BD46     		mov	sp, r7
 921 002a 02B0     		add	sp, sp, #8
 922              		@ sp needed
 923 002c 80BD     		pop	{r7, pc}
 924              		.cfi_endproc
 925              	.LFE13:
 926              		.size	LCD_Char_PrintInt16, .-LCD_Char_PrintInt16
 927 002e C046     		.section	.text.LCD_Char_PrintInt32,"ax",%progbits
 928              		.align	2
 929              		.global	LCD_Char_PrintInt32
 930              		.code	16
 931              		.thumb_func
 932              		.type	LCD_Char_PrintInt32, %function
 933              	LCD_Char_PrintInt32:
 934              	.LFB14:
 587:.\Generated_Source\PSoC4/LCD_Char.c **** 
 588:.\Generated_Source\PSoC4/LCD_Char.c ****     
 589:.\Generated_Source\PSoC4/LCD_Char.c ****     /*******************************************************************************
 590:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Function Name: LCD_Char_PrintInt32
 591:.\Generated_Source\PSoC4/LCD_Char.c ****     ********************************************************************************
 592:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 593:.\Generated_Source\PSoC4/LCD_Char.c ****     * Summary:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 28


 594:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Print a uint32 hexadecimal number as eight ASCII characters.
 595:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 596:.\Generated_Source\PSoC4/LCD_Char.c ****     * Parameters:
 597:.\Generated_Source\PSoC4/LCD_Char.c ****     *  value: The uint32 to be printed out as ASCII characters.
 598:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 599:.\Generated_Source\PSoC4/LCD_Char.c ****     * Return:
 600:.\Generated_Source\PSoC4/LCD_Char.c ****     *  None.
 601:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 602:.\Generated_Source\PSoC4/LCD_Char.c ****     *******************************************************************************/
 603:.\Generated_Source\PSoC4/LCD_Char.c ****     void LCD_Char_PrintInt32(uint32 value) 
 604:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 935              		.loc 1 604 0
 936              		.cfi_startproc
 937 0000 80B5     		push	{r7, lr}
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 7, -8
 940              		.cfi_offset 14, -4
 941 0002 84B0     		sub	sp, sp, #16
 942              		.cfi_def_cfa_offset 24
 943 0004 00AF     		add	r7, sp, #0
 944              		.cfi_def_cfa_register 7
 945 0006 7860     		str	r0, [r7, #4]
 605:.\Generated_Source\PSoC4/LCD_Char.c ****         uint8 shift = LCD_Char_32_BIT_SHIFT;
 946              		.loc 1 605 0
 947 0008 3B1C     		mov	r3, r7
 948 000a 0F33     		add	r3, r3, #15
 949 000c 2022     		mov	r2, #32
 950 000e 1A70     		strb	r2, [r3]
 606:.\Generated_Source\PSoC4/LCD_Char.c ****         
 607:.\Generated_Source\PSoC4/LCD_Char.c ****         while (shift != 0u)
 951              		.loc 1 607 0
 952 0010 11E0     		b	.L43
 953              	.L44:
 608:.\Generated_Source\PSoC4/LCD_Char.c ****         {
 609:.\Generated_Source\PSoC4/LCD_Char.c ****             /* "shift" var should be subtracted by 8 prior shifting. This implements 
 610:.\Generated_Source\PSoC4/LCD_Char.c ****             * shifting by 24, 16, 8 and 0u. 
 611:.\Generated_Source\PSoC4/LCD_Char.c ****             */
 612:.\Generated_Source\PSoC4/LCD_Char.c ****             shift -= LCD_Char_8_BIT_SHIFT;
 954              		.loc 1 612 0
 955 0012 3B1C     		mov	r3, r7
 956 0014 0F33     		add	r3, r3, #15
 957 0016 3A1C     		mov	r2, r7
 958 0018 0F32     		add	r2, r2, #15
 959 001a 1278     		ldrb	r2, [r2]
 960 001c 083A     		sub	r2, r2, #8
 961 001e 1A70     		strb	r2, [r3]
 613:.\Generated_Source\PSoC4/LCD_Char.c ****             
 614:.\Generated_Source\PSoC4/LCD_Char.c ****             /* Print 8 bits of uint32 hex number */
 615:.\Generated_Source\PSoC4/LCD_Char.c ****             LCD_Char_PrintInt8((uint8) ((uint32) (value >> shift)));
 962              		.loc 1 615 0
 963 0020 3B1C     		mov	r3, r7
 964 0022 0F33     		add	r3, r3, #15
 965 0024 1B78     		ldrb	r3, [r3]
 966 0026 7A68     		ldr	r2, [r7, #4]
 967 0028 111C     		mov	r1, r2
 968 002a D940     		lsr	r1, r1, r3
 969 002c 0B1C     		mov	r3, r1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 29


 970 002e DBB2     		uxtb	r3, r3
 971 0030 181C     		mov	r0, r3
 972 0032 FFF7FEFF 		bl	LCD_Char_PrintInt8
 973              	.L43:
 607:.\Generated_Source\PSoC4/LCD_Char.c ****         while (shift != 0u)
 974              		.loc 1 607 0 discriminator 1
 975 0036 3B1C     		mov	r3, r7
 976 0038 0F33     		add	r3, r3, #15
 977 003a 1B78     		ldrb	r3, [r3]
 978 003c 002B     		cmp	r3, #0
 979 003e E8D1     		bne	.L44
 616:.\Generated_Source\PSoC4/LCD_Char.c ****         }
 617:.\Generated_Source\PSoC4/LCD_Char.c ****     }
 980              		.loc 1 617 0
 981 0040 BD46     		mov	sp, r7
 982 0042 04B0     		add	sp, sp, #16
 983              		@ sp needed
 984 0044 80BD     		pop	{r7, pc}
 985              		.cfi_endproc
 986              	.LFE14:
 987              		.size	LCD_Char_PrintInt32, .-LCD_Char_PrintInt32
 988              		.global	__aeabi_uidivmod
 989              		.global	__aeabi_uidiv
 990 0046 C046     		.section	.text.LCD_Char_PrintU32Number,"ax",%progbits
 991              		.align	2
 992              		.global	LCD_Char_PrintU32Number
 993              		.code	16
 994              		.thumb_func
 995              		.type	LCD_Char_PrintU32Number, %function
 996              	LCD_Char_PrintU32Number:
 997              	.LFB15:
 618:.\Generated_Source\PSoC4/LCD_Char.c ****     
 619:.\Generated_Source\PSoC4/LCD_Char.c ****     
 620:.\Generated_Source\PSoC4/LCD_Char.c ****     /*******************************************************************************
 621:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Function Name: LCD_Char_PrintNumber
 622:.\Generated_Source\PSoC4/LCD_Char.c ****     ********************************************************************************
 623:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 624:.\Generated_Source\PSoC4/LCD_Char.c ****     * Summary:
 625:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Print an uint16 value as a left-justified decimal value.
 626:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 627:.\Generated_Source\PSoC4/LCD_Char.c ****     * Parameters:
 628:.\Generated_Source\PSoC4/LCD_Char.c ****     *  value: A 16-bit value to be printed in ASCII characters as a decimal number
 629:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 630:.\Generated_Source\PSoC4/LCD_Char.c ****     * Return:
 631:.\Generated_Source\PSoC4/LCD_Char.c ****     *  None.
 632:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 633:.\Generated_Source\PSoC4/LCD_Char.c ****     * Note:
 634:.\Generated_Source\PSoC4/LCD_Char.c ****     *  This function is implemented as a macro.
 635:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 636:.\Generated_Source\PSoC4/LCD_Char.c ****     *******************************************************************************/
 637:.\Generated_Source\PSoC4/LCD_Char.c **** 
 638:.\Generated_Source\PSoC4/LCD_Char.c ****     
 639:.\Generated_Source\PSoC4/LCD_Char.c ****     /*******************************************************************************
 640:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Function Name: LCD_Char_PrintU32Number
 641:.\Generated_Source\PSoC4/LCD_Char.c ****     ********************************************************************************
 642:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 643:.\Generated_Source\PSoC4/LCD_Char.c ****     * Summary:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 30


 644:.\Generated_Source\PSoC4/LCD_Char.c ****     *  Print an uint32 value as a left-justified decimal value.
 645:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 646:.\Generated_Source\PSoC4/LCD_Char.c ****     * Parameters:
 647:.\Generated_Source\PSoC4/LCD_Char.c ****     *  value: A 32-bit value to be printed in ASCII characters as a decimal number
 648:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 649:.\Generated_Source\PSoC4/LCD_Char.c ****     * Return:
 650:.\Generated_Source\PSoC4/LCD_Char.c ****     *  None.
 651:.\Generated_Source\PSoC4/LCD_Char.c ****     *
 652:.\Generated_Source\PSoC4/LCD_Char.c ****     *******************************************************************************/
 653:.\Generated_Source\PSoC4/LCD_Char.c ****     void LCD_Char_PrintU32Number(uint32 value) 
 654:.\Generated_Source\PSoC4/LCD_Char.c ****     {
 998              		.loc 1 654 0
 999              		.cfi_startproc
 1000 0000 80B5     		push	{r7, lr}
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 1004 0002 86B0     		sub	sp, sp, #24
 1005              		.cfi_def_cfa_offset 32
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
 655:.\Generated_Source\PSoC4/LCD_Char.c ****         uint8 tmpDigit;
 656:.\Generated_Source\PSoC4/LCD_Char.c ****         char8 number[LCD_Char_NUMBER_OF_REMAINDERS_U32 + 1u];
 657:.\Generated_Source\PSoC4/LCD_Char.c ****         uint8 digIndex = LCD_Char_NUMBER_OF_REMAINDERS_U32;
 1009              		.loc 1 657 0
 1010 0008 3B1C     		mov	r3, r7
 1011 000a 1733     		add	r3, r3, #23
 1012 000c 0A22     		mov	r2, #10
 1013 000e 1A70     		strb	r2, [r3]
 658:.\Generated_Source\PSoC4/LCD_Char.c ****         
 659:.\Generated_Source\PSoC4/LCD_Char.c ****         /* This API will output a decimal number as a string and that string will be 
 660:.\Generated_Source\PSoC4/LCD_Char.c ****         * filled from end to start. Set Null termination character first.
 661:.\Generated_Source\PSoC4/LCD_Char.c ****         */
 662:.\Generated_Source\PSoC4/LCD_Char.c ****         number[digIndex] = (char8) '\0';
 1014              		.loc 1 662 0
 1015 0010 3B1C     		mov	r3, r7
 1016 0012 1733     		add	r3, r3, #23
 1017 0014 1B78     		ldrb	r3, [r3]
 1018 0016 3A1C     		mov	r2, r7
 1019 0018 0832     		add	r2, r2, #8
 1020 001a 0021     		mov	r1, #0
 1021 001c D154     		strb	r1, [r2, r3]
 663:.\Generated_Source\PSoC4/LCD_Char.c ****         digIndex--;
 1022              		.loc 1 663 0
 1023 001e 3B1C     		mov	r3, r7
 1024 0020 1733     		add	r3, r3, #23
 1025 0022 1A78     		ldrb	r2, [r3]
 1026 0024 3B1C     		mov	r3, r7
 1027 0026 1733     		add	r3, r3, #23
 1028 0028 013A     		sub	r2, r2, #1
 1029 002a 1A70     		strb	r2, [r3]
 664:.\Generated_Source\PSoC4/LCD_Char.c ****         
 665:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Load these in reverse order */
 666:.\Generated_Source\PSoC4/LCD_Char.c ****         while(value >= LCD_Char_TEN)
 1030              		.loc 1 666 0
 1031 002c 21E0     		b	.L46
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 31


 1032              	.L47:
 667:.\Generated_Source\PSoC4/LCD_Char.c ****         {
 668:.\Generated_Source\PSoC4/LCD_Char.c ****             /* Extract decimal digit, indexed by 'digIndex', from 'value' and
 669:.\Generated_Source\PSoC4/LCD_Char.c ****             * convert it to ASCII character.
 670:.\Generated_Source\PSoC4/LCD_Char.c ****             */
 671:.\Generated_Source\PSoC4/LCD_Char.c ****             tmpDigit = (uint8) (((uint8) (value % LCD_Char_TEN)) + (uint8) LCD_Char_ZERO_CHAR_ASCII
 1033              		.loc 1 671 0
 1034 002e 7B68     		ldr	r3, [r7, #4]
 1035 0030 181C     		mov	r0, r3
 1036 0032 0A21     		mov	r1, #10
 1037 0034 FFF7FEFF 		bl	__aeabi_uidivmod
 1038 0038 0B1C     		mov	r3, r1
 1039 003a DAB2     		uxtb	r2, r3
 1040 003c 3B1C     		mov	r3, r7
 1041 003e 1633     		add	r3, r3, #22
 1042 0040 3032     		add	r2, r2, #48
 1043 0042 1A70     		strb	r2, [r3]
 672:.\Generated_Source\PSoC4/LCD_Char.c ****             
 673:.\Generated_Source\PSoC4/LCD_Char.c ****             /* Temporary variable 'tmpDigit' is used to avoid Violation of MISRA rule 
 674:.\Generated_Source\PSoC4/LCD_Char.c ****             * #10.3.
 675:.\Generated_Source\PSoC4/LCD_Char.c ****             */
 676:.\Generated_Source\PSoC4/LCD_Char.c ****             number[digIndex] = (char8) tmpDigit;
 1044              		.loc 1 676 0
 1045 0044 3B1C     		mov	r3, r7
 1046 0046 1733     		add	r3, r3, #23
 1047 0048 1B78     		ldrb	r3, [r3]
 1048 004a 3A1C     		mov	r2, r7
 1049 004c 0832     		add	r2, r2, #8
 1050 004e 391C     		mov	r1, r7
 1051 0050 1631     		add	r1, r1, #22
 1052 0052 0978     		ldrb	r1, [r1]
 1053 0054 D154     		strb	r1, [r2, r3]
 677:.\Generated_Source\PSoC4/LCD_Char.c ****             value /= LCD_Char_TEN;
 1054              		.loc 1 677 0
 1055 0056 7B68     		ldr	r3, [r7, #4]
 1056 0058 181C     		mov	r0, r3
 1057 005a 0A21     		mov	r1, #10
 1058 005c FFF7FEFF 		bl	__aeabi_uidiv
 1059 0060 031C     		mov	r3, r0
 1060 0062 7B60     		str	r3, [r7, #4]
 678:.\Generated_Source\PSoC4/LCD_Char.c ****             digIndex--;
 1061              		.loc 1 678 0
 1062 0064 3B1C     		mov	r3, r7
 1063 0066 1733     		add	r3, r3, #23
 1064 0068 1A78     		ldrb	r2, [r3]
 1065 006a 3B1C     		mov	r3, r7
 1066 006c 1733     		add	r3, r3, #23
 1067 006e 013A     		sub	r2, r2, #1
 1068 0070 1A70     		strb	r2, [r3]
 1069              	.L46:
 666:.\Generated_Source\PSoC4/LCD_Char.c ****         while(value >= LCD_Char_TEN)
 1070              		.loc 1 666 0 discriminator 1
 1071 0072 7B68     		ldr	r3, [r7, #4]
 1072 0074 092B     		cmp	r3, #9
 1073 0076 DAD8     		bhi	.L47
 679:.\Generated_Source\PSoC4/LCD_Char.c ****         }
 680:.\Generated_Source\PSoC4/LCD_Char.c ****         
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 32


 681:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Extract last decimal digit 'digIndex', from the 'value' and convert it
 682:.\Generated_Source\PSoC4/LCD_Char.c ****         * to ASCII character.
 683:.\Generated_Source\PSoC4/LCD_Char.c ****         */
 684:.\Generated_Source\PSoC4/LCD_Char.c ****         tmpDigit = (uint8) (((uint8)(value % LCD_Char_TEN)) + (uint8) LCD_Char_ZERO_CHAR_ASCII);
 1074              		.loc 1 684 0
 1075 0078 7B68     		ldr	r3, [r7, #4]
 1076 007a 181C     		mov	r0, r3
 1077 007c 0A21     		mov	r1, #10
 1078 007e FFF7FEFF 		bl	__aeabi_uidivmod
 1079 0082 0B1C     		mov	r3, r1
 1080 0084 DAB2     		uxtb	r2, r3
 1081 0086 3B1C     		mov	r3, r7
 1082 0088 1633     		add	r3, r3, #22
 1083 008a 3032     		add	r2, r2, #48
 1084 008c 1A70     		strb	r2, [r3]
 685:.\Generated_Source\PSoC4/LCD_Char.c ****         number[digIndex] = (char8) tmpDigit;
 1085              		.loc 1 685 0
 1086 008e 3B1C     		mov	r3, r7
 1087 0090 1733     		add	r3, r3, #23
 1088 0092 1B78     		ldrb	r3, [r3]
 1089 0094 3A1C     		mov	r2, r7
 1090 0096 0832     		add	r2, r2, #8
 1091 0098 391C     		mov	r1, r7
 1092 009a 1631     		add	r1, r1, #22
 1093 009c 0978     		ldrb	r1, [r1]
 1094 009e D154     		strb	r1, [r2, r3]
 686:.\Generated_Source\PSoC4/LCD_Char.c **** 
 687:.\Generated_Source\PSoC4/LCD_Char.c ****         /* Print out number */
 688:.\Generated_Source\PSoC4/LCD_Char.c ****         LCD_Char_PrintString(&number[digIndex]);
 1095              		.loc 1 688 0
 1096 00a0 3B1C     		mov	r3, r7
 1097 00a2 1733     		add	r3, r3, #23
 1098 00a4 1B78     		ldrb	r3, [r3]
 1099 00a6 3A1C     		mov	r2, r7
 1100 00a8 0832     		add	r2, r2, #8
 1101 00aa D318     		add	r3, r2, r3
 1102 00ac 181C     		mov	r0, r3
 1103 00ae FFF7FEFF 		bl	LCD_Char_PrintString
 689:.\Generated_Source\PSoC4/LCD_Char.c ****     }
 1104              		.loc 1 689 0
 1105 00b2 BD46     		mov	sp, r7
 1106 00b4 06B0     		add	sp, sp, #24
 1107              		@ sp needed
 1108 00b6 80BD     		pop	{r7, pc}
 1109              		.cfi_endproc
 1110              	.LFE15:
 1111              		.size	LCD_Char_PrintU32Number, .-LCD_Char_PrintU32Number
 1112              		.section	.rodata
 1113              		.align	2
 1114              		.type	LCD_Char_hex.4766, %object
 1115              		.size	LCD_Char_hex.4766, 16
 1116              	LCD_Char_hex.4766:
 1117 0000 30313233 		.ascii	"0123456789ABCDEF"
 1117      34353637 
 1117      38394142 
 1117      43444546 
 1118              		.text
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 33


 1119              	.Letext0:
 1120              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1121              		.file 3 ".\\Generated_Source\\PSoC4\\LCD_Char.h"
 1122              		.section	.debug_info,"",%progbits
 1123              	.Ldebug_info0:
 1124 0000 D1030000 		.4byte	0x3d1
 1125 0004 0400     		.2byte	0x4
 1126 0006 00000000 		.4byte	.Ldebug_abbrev0
 1127 000a 04       		.byte	0x4
 1128 000b 01       		.uleb128 0x1
 1129 000c DE000000 		.4byte	.LASF51
 1130 0010 01       		.byte	0x1
 1131 0011 E9020000 		.4byte	.LASF52
 1132 0015 58000000 		.4byte	.LASF53
 1133 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1134 001d 00000000 		.4byte	0
 1135 0021 00000000 		.4byte	.Ldebug_line0
 1136 0025 02       		.uleb128 0x2
 1137 0026 01       		.byte	0x1
 1138 0027 06       		.byte	0x6
 1139 0028 0D030000 		.4byte	.LASF0
 1140 002c 02       		.uleb128 0x2
 1141 002d 01       		.byte	0x1
 1142 002e 08       		.byte	0x8
 1143 002f B2010000 		.4byte	.LASF1
 1144 0033 02       		.uleb128 0x2
 1145 0034 02       		.byte	0x2
 1146 0035 05       		.byte	0x5
 1147 0036 AD020000 		.4byte	.LASF2
 1148 003a 02       		.uleb128 0x2
 1149 003b 02       		.byte	0x2
 1150 003c 07       		.byte	0x7
 1151 003d 8A000000 		.4byte	.LASF3
 1152 0041 02       		.uleb128 0x2
 1153 0042 04       		.byte	0x4
 1154 0043 05       		.byte	0x5
 1155 0044 CD020000 		.4byte	.LASF4
 1156 0048 02       		.uleb128 0x2
 1157 0049 04       		.byte	0x4
 1158 004a 07       		.byte	0x7
 1159 004b 87010000 		.4byte	.LASF5
 1160 004f 02       		.uleb128 0x2
 1161 0050 08       		.byte	0x8
 1162 0051 05       		.byte	0x5
 1163 0052 00000000 		.4byte	.LASF6
 1164 0056 02       		.uleb128 0x2
 1165 0057 08       		.byte	0x8
 1166 0058 07       		.byte	0x7
 1167 0059 0D020000 		.4byte	.LASF7
 1168 005d 03       		.uleb128 0x3
 1169 005e 04       		.byte	0x4
 1170 005f 05       		.byte	0x5
 1171 0060 696E7400 		.ascii	"int\000"
 1172 0064 02       		.uleb128 0x2
 1173 0065 04       		.byte	0x4
 1174 0066 07       		.byte	0x7
 1175 0067 00020000 		.4byte	.LASF8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 34


 1176 006b 04       		.uleb128 0x4
 1177 006c 99010000 		.4byte	.LASF9
 1178 0070 02       		.byte	0x2
 1179 0071 A1       		.byte	0xa1
 1180 0072 2C000000 		.4byte	0x2c
 1181 0076 04       		.uleb128 0x4
 1182 0077 C7010000 		.4byte	.LASF10
 1183 007b 02       		.byte	0x2
 1184 007c A2       		.byte	0xa2
 1185 007d 3A000000 		.4byte	0x3a
 1186 0081 04       		.uleb128 0x4
 1187 0082 F0010000 		.4byte	.LASF11
 1188 0086 02       		.byte	0x2
 1189 0087 A3       		.byte	0xa3
 1190 0088 48000000 		.4byte	0x48
 1191 008c 02       		.uleb128 0x2
 1192 008d 04       		.byte	0x4
 1193 008e 04       		.byte	0x4
 1194 008f D8000000 		.4byte	.LASF12
 1195 0093 02       		.uleb128 0x2
 1196 0094 08       		.byte	0x8
 1197 0095 04       		.byte	0x4
 1198 0096 C0010000 		.4byte	.LASF13
 1199 009a 04       		.uleb128 0x4
 1200 009b 69010000 		.4byte	.LASF14
 1201 009f 02       		.byte	0x2
 1202 00a0 B2       		.byte	0xb2
 1203 00a1 A5000000 		.4byte	0xa5
 1204 00a5 02       		.uleb128 0x2
 1205 00a6 01       		.byte	0x1
 1206 00a7 08       		.byte	0x8
 1207 00a8 74020000 		.4byte	.LASF15
 1208 00ac 05       		.uleb128 0x5
 1209 00ad D6020000 		.4byte	.LASF16
 1210 00b1 02       		.byte	0x2
 1211 00b2 4D01     		.2byte	0x14d
 1212 00b4 B8000000 		.4byte	0xb8
 1213 00b8 06       		.uleb128 0x6
 1214 00b9 81000000 		.4byte	0x81
 1215 00bd 02       		.uleb128 0x2
 1216 00be 04       		.byte	0x4
 1217 00bf 07       		.byte	0x7
 1218 00c0 3D020000 		.4byte	.LASF17
 1219 00c4 07       		.uleb128 0x7
 1220 00c5 E2010000 		.4byte	.LASF18
 1221 00c9 01       		.byte	0x1
 1222 00ca 37       		.byte	0x37
 1223 00cb 00000000 		.4byte	.LFB0
 1224 00cf 7C000000 		.4byte	.LFE0-.LFB0
 1225 00d3 01       		.uleb128 0x1
 1226 00d4 9C       		.byte	0x9c
 1227 00d5 07       		.uleb128 0x7
 1228 00d6 BA000000 		.4byte	.LASF19
 1229 00da 01       		.byte	0x1
 1230 00db 68       		.byte	0x68
 1231 00dc 00000000 		.4byte	.LFB1
 1232 00e0 18000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 35


 1233 00e4 01       		.uleb128 0x1
 1234 00e5 9C       		.byte	0x9c
 1235 00e6 07       		.uleb128 0x7
 1236 00e7 5A010000 		.4byte	.LASF20
 1237 00eb 01       		.byte	0x1
 1238 00ec 89       		.byte	0x89
 1239 00ed 00000000 		.4byte	.LFB2
 1240 00f1 24000000 		.4byte	.LFE2-.LFB2
 1241 00f5 01       		.uleb128 0x1
 1242 00f6 9C       		.byte	0x9c
 1243 00f7 07       		.uleb128 0x7
 1244 00f8 BF020000 		.4byte	.LASF21
 1245 00fc 01       		.byte	0x1
 1246 00fd A8       		.byte	0xa8
 1247 00fe 00000000 		.4byte	.LFB3
 1248 0102 18000000 		.4byte	.LFE3-.LFB3
 1249 0106 01       		.uleb128 0x1
 1250 0107 9C       		.byte	0x9c
 1251 0108 08       		.uleb128 0x8
 1252 0109 14000000 		.4byte	.LASF23
 1253 010d 01       		.byte	0x1
 1254 010e C4       		.byte	0xc4
 1255 010f 00000000 		.4byte	.LFB4
 1256 0113 72000000 		.4byte	.LFE4-.LFB4
 1257 0117 01       		.uleb128 0x1
 1258 0118 9C       		.byte	0x9c
 1259 0119 3A010000 		.4byte	0x13a
 1260 011d 09       		.uleb128 0x9
 1261 011e 726F7700 		.ascii	"row\000"
 1262 0122 01       		.byte	0x1
 1263 0123 C4       		.byte	0xc4
 1264 0124 6B000000 		.4byte	0x6b
 1265 0128 02       		.uleb128 0x2
 1266 0129 91       		.byte	0x91
 1267 012a 77       		.sleb128 -9
 1268 012b 0A       		.uleb128 0xa
 1269 012c D1000000 		.4byte	.LASF22
 1270 0130 01       		.byte	0x1
 1271 0131 C4       		.byte	0xc4
 1272 0132 6B000000 		.4byte	0x6b
 1273 0136 02       		.uleb128 0x2
 1274 0137 91       		.byte	0x91
 1275 0138 76       		.sleb128 -10
 1276 0139 00       		.byte	0
 1277 013a 08       		.uleb128 0x8
 1278 013b 8F020000 		.4byte	.LASF24
 1279 013f 01       		.byte	0x1
 1280 0140 E9       		.byte	0xe9
 1281 0141 00000000 		.4byte	.LFB5
 1282 0145 58000000 		.4byte	.LFE5-.LFB5
 1283 0149 01       		.uleb128 0x1
 1284 014a 9C       		.byte	0x9c
 1285 014b 7A010000 		.4byte	0x17a
 1286 014f 0A       		.uleb128 0xa
 1287 0150 CA000000 		.4byte	.LASF25
 1288 0154 01       		.byte	0x1
 1289 0155 E9       		.byte	0xe9
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 36


 1290 0156 7A010000 		.4byte	0x17a
 1291 015a 02       		.uleb128 0x2
 1292 015b 91       		.byte	0x91
 1293 015c 6C       		.sleb128 -20
 1294 015d 0B       		.uleb128 0xb
 1295 015e B2000000 		.4byte	.LASF26
 1296 0162 01       		.byte	0x1
 1297 0163 EB       		.byte	0xeb
 1298 0164 6B000000 		.4byte	0x6b
 1299 0168 02       		.uleb128 0x2
 1300 0169 91       		.byte	0x91
 1301 016a 77       		.sleb128 -9
 1302 016b 0B       		.uleb128 0xb
 1303 016c B7020000 		.4byte	.LASF27
 1304 0170 01       		.byte	0x1
 1305 0171 EC       		.byte	0xec
 1306 0172 9A000000 		.4byte	0x9a
 1307 0176 02       		.uleb128 0x2
 1308 0177 91       		.byte	0x91
 1309 0178 76       		.sleb128 -10
 1310 0179 00       		.byte	0
 1311 017a 0C       		.uleb128 0xc
 1312 017b 04       		.byte	0x4
 1313 017c 80010000 		.4byte	0x180
 1314 0180 0D       		.uleb128 0xd
 1315 0181 9A000000 		.4byte	0x9a
 1316 0185 0E       		.uleb128 0xe
 1317 0186 37000000 		.4byte	.LASF28
 1318 018a 01       		.byte	0x1
 1319 018b 0801     		.2byte	0x108
 1320 018d 00000000 		.4byte	.LFB6
 1321 0191 1C000000 		.4byte	.LFE6-.LFB6
 1322 0195 01       		.uleb128 0x1
 1323 0196 9C       		.byte	0x9c
 1324 0197 AB010000 		.4byte	0x1ab
 1325 019b 0F       		.uleb128 0xf
 1326 019c 48000000 		.4byte	.LASF29
 1327 01a0 01       		.byte	0x1
 1328 01a1 0801     		.2byte	0x108
 1329 01a3 9A000000 		.4byte	0x9a
 1330 01a7 02       		.uleb128 0x2
 1331 01a8 91       		.byte	0x91
 1332 01a9 77       		.sleb128 -9
 1333 01aa 00       		.byte	0
 1334 01ab 0E       		.uleb128 0xe
 1335 01ac 9F010000 		.4byte	.LASF30
 1336 01b0 01       		.byte	0x1
 1337 01b1 1C01     		.2byte	0x11c
 1338 01b3 00000000 		.4byte	.LFB7
 1339 01b7 48000000 		.4byte	.LFE7-.LFB7
 1340 01bb 01       		.uleb128 0x1
 1341 01bc 9C       		.byte	0x9c
 1342 01bd E0010000 		.4byte	0x1e0
 1343 01c1 0F       		.uleb128 0xf
 1344 01c2 19030000 		.4byte	.LASF31
 1345 01c6 01       		.byte	0x1
 1346 01c7 1C01     		.2byte	0x11c
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 37


 1347 01c9 6B000000 		.4byte	0x6b
 1348 01cd 02       		.uleb128 0x2
 1349 01ce 91       		.byte	0x91
 1350 01cf 6F       		.sleb128 -17
 1351 01d0 10       		.uleb128 0x10
 1352 01d1 58030000 		.4byte	.LASF32
 1353 01d5 01       		.byte	0x1
 1354 01d6 1E01     		.2byte	0x11e
 1355 01d8 6B000000 		.4byte	0x6b
 1356 01dc 02       		.uleb128 0x2
 1357 01dd 91       		.byte	0x91
 1358 01de 77       		.sleb128 -9
 1359 01df 00       		.byte	0
 1360 01e0 0E       		.uleb128 0xe
 1361 01e1 79020000 		.4byte	.LASF33
 1362 01e5 01       		.byte	0x1
 1363 01e6 3A01     		.2byte	0x13a
 1364 01e8 00000000 		.4byte	.LFB8
 1365 01ec 48000000 		.4byte	.LFE8-.LFB8
 1366 01f0 01       		.uleb128 0x1
 1367 01f1 9C       		.byte	0x9c
 1368 01f2 15020000 		.4byte	0x215
 1369 01f6 0F       		.uleb128 0xf
 1370 01f7 46020000 		.4byte	.LASF34
 1371 01fb 01       		.byte	0x1
 1372 01fc 3A01     		.2byte	0x13a
 1373 01fe 6B000000 		.4byte	0x6b
 1374 0202 02       		.uleb128 0x2
 1375 0203 91       		.byte	0x91
 1376 0204 6F       		.sleb128 -17
 1377 0205 10       		.uleb128 0x10
 1378 0206 58030000 		.4byte	.LASF32
 1379 020a 01       		.byte	0x1
 1380 020b 3C01     		.2byte	0x13c
 1381 020d 6B000000 		.4byte	0x6b
 1382 0211 02       		.uleb128 0x2
 1383 0212 91       		.byte	0x91
 1384 0213 77       		.sleb128 -9
 1385 0214 00       		.byte	0
 1386 0215 0E       		.uleb128 0xe
 1387 0216 33030000 		.4byte	.LASF35
 1388 021a 01       		.byte	0x1
 1389 021b 5C01     		.2byte	0x15c
 1390 021d 00000000 		.4byte	.LFB9
 1391 0221 E4000000 		.4byte	.LFE9-.LFB9
 1392 0225 01       		.uleb128 0x1
 1393 0226 9C       		.byte	0x9c
 1394 0227 3B020000 		.4byte	0x23b
 1395 022b 10       		.uleb128 0x10
 1396 022c 52000000 		.4byte	.LASF36
 1397 0230 01       		.byte	0x1
 1398 0231 5E01     		.2byte	0x15e
 1399 0233 81000000 		.4byte	0x81
 1400 0237 02       		.uleb128 0x2
 1401 0238 91       		.byte	0x91
 1402 0239 74       		.sleb128 -12
 1403 023a 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 38


 1404 023b 11       		.uleb128 0x11
 1405 023c 24020000 		.4byte	.LASF37
 1406 0240 01       		.byte	0x1
 1407 0241 DD01     		.2byte	0x1dd
 1408 0243 00000000 		.4byte	.LFB10
 1409 0247 6C000000 		.4byte	.LFE10-.LFB10
 1410 024b 01       		.uleb128 0x1
 1411 024c 9C       		.byte	0x9c
 1412 024d 61020000 		.4byte	0x261
 1413 0251 0F       		.uleb128 0xf
 1414 0252 58030000 		.4byte	.LASF32
 1415 0256 01       		.byte	0x1
 1416 0257 DD01     		.2byte	0x1dd
 1417 0259 6B000000 		.4byte	0x6b
 1418 025d 02       		.uleb128 0x2
 1419 025e 91       		.byte	0x91
 1420 025f 77       		.sleb128 -9
 1421 0260 00       		.byte	0
 1422 0261 11       		.uleb128 0x11
 1423 0262 CE010000 		.4byte	.LASF38
 1424 0266 01       		.byte	0x1
 1425 0267 0702     		.2byte	0x207
 1426 0269 00000000 		.4byte	.LFB11
 1427 026d 58000000 		.4byte	.LFE11-.LFB11
 1428 0271 01       		.uleb128 0x1
 1429 0272 9C       		.byte	0x9c
 1430 0273 87020000 		.4byte	0x287
 1431 0277 0F       		.uleb128 0xf
 1432 0278 58030000 		.4byte	.LASF32
 1433 027c 01       		.byte	0x1
 1434 027d 0702     		.2byte	0x207
 1435 027f 6B000000 		.4byte	0x6b
 1436 0283 02       		.uleb128 0x2
 1437 0284 91       		.byte	0x91
 1438 0285 77       		.sleb128 -9
 1439 0286 00       		.byte	0
 1440 0287 0E       		.uleb128 0xe
 1441 0288 4C020000 		.4byte	.LASF39
 1442 028c 01       		.byte	0x1
 1443 028d 2F02     		.2byte	0x22f
 1444 028f 00000000 		.4byte	.LFB12
 1445 0293 3C000000 		.4byte	.LFE12-.LFB12
 1446 0297 01       		.uleb128 0x1
 1447 0298 9C       		.byte	0x9c
 1448 0299 BF020000 		.4byte	0x2bf
 1449 029d 0F       		.uleb128 0xf
 1450 029e 52000000 		.4byte	.LASF36
 1451 02a2 01       		.byte	0x1
 1452 02a3 2F02     		.2byte	0x22f
 1453 02a5 6B000000 		.4byte	0x6b
 1454 02a9 02       		.uleb128 0x2
 1455 02aa 91       		.byte	0x91
 1456 02ab 77       		.sleb128 -9
 1457 02ac 10       		.uleb128 0x10
 1458 02ad DC020000 		.4byte	.LASF40
 1459 02b1 01       		.byte	0x1
 1460 02b2 3102     		.2byte	0x231
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 39


 1461 02b4 CF020000 		.4byte	0x2cf
 1462 02b8 05       		.uleb128 0x5
 1463 02b9 03       		.byte	0x3
 1464 02ba 00000000 		.4byte	LCD_Char_hex.4766
 1465 02be 00       		.byte	0
 1466 02bf 12       		.uleb128 0x12
 1467 02c0 9A000000 		.4byte	0x9a
 1468 02c4 CF020000 		.4byte	0x2cf
 1469 02c8 13       		.uleb128 0x13
 1470 02c9 BD000000 		.4byte	0xbd
 1471 02cd 0F       		.byte	0xf
 1472 02ce 00       		.byte	0
 1473 02cf 0D       		.uleb128 0xd
 1474 02d0 BF020000 		.4byte	0x2bf
 1475 02d4 0E       		.uleb128 0xe
 1476 02d5 1F030000 		.4byte	.LASF41
 1477 02d9 01       		.byte	0x1
 1478 02da 4602     		.2byte	0x246
 1479 02dc 00000000 		.4byte	.LFB13
 1480 02e0 2E000000 		.4byte	.LFE13-.LFB13
 1481 02e4 01       		.uleb128 0x1
 1482 02e5 9C       		.byte	0x9c
 1483 02e6 FA020000 		.4byte	0x2fa
 1484 02ea 0F       		.uleb128 0xf
 1485 02eb 52000000 		.4byte	.LASF36
 1486 02ef 01       		.byte	0x1
 1487 02f0 4602     		.2byte	0x246
 1488 02f2 76000000 		.4byte	0x76
 1489 02f6 02       		.uleb128 0x2
 1490 02f7 91       		.byte	0x91
 1491 02f8 76       		.sleb128 -10
 1492 02f9 00       		.byte	0
 1493 02fa 0E       		.uleb128 0xe
 1494 02fb 44030000 		.4byte	.LASF42
 1495 02ff 01       		.byte	0x1
 1496 0300 5B02     		.2byte	0x25b
 1497 0302 00000000 		.4byte	.LFB14
 1498 0306 46000000 		.4byte	.LFE14-.LFB14
 1499 030a 01       		.uleb128 0x1
 1500 030b 9C       		.byte	0x9c
 1501 030c 2F030000 		.4byte	0x32f
 1502 0310 0F       		.uleb128 0xf
 1503 0311 52000000 		.4byte	.LASF36
 1504 0315 01       		.byte	0x1
 1505 0316 5B02     		.2byte	0x25b
 1506 0318 81000000 		.4byte	0x81
 1507 031c 02       		.uleb128 0x2
 1508 031d 91       		.byte	0x91
 1509 031e 6C       		.sleb128 -20
 1510 031f 10       		.uleb128 0x10
 1511 0320 0E000000 		.4byte	.LASF43
 1512 0324 01       		.byte	0x1
 1513 0325 5D02     		.2byte	0x25d
 1514 0327 6B000000 		.4byte	0x6b
 1515 032b 02       		.uleb128 0x2
 1516 032c 91       		.byte	0x91
 1517 032d 77       		.sleb128 -9
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 40


 1518 032e 00       		.byte	0
 1519 032f 0E       		.uleb128 0xe
 1520 0330 6F010000 		.4byte	.LASF44
 1521 0334 01       		.byte	0x1
 1522 0335 8D02     		.2byte	0x28d
 1523 0337 00000000 		.4byte	.LFB15
 1524 033b B8000000 		.4byte	.LFE15-.LFB15
 1525 033f 01       		.uleb128 0x1
 1526 0340 9C       		.byte	0x9c
 1527 0341 82030000 		.4byte	0x382
 1528 0345 0F       		.uleb128 0xf
 1529 0346 52000000 		.4byte	.LASF36
 1530 034a 01       		.byte	0x1
 1531 034b 8D02     		.2byte	0x28d
 1532 034d 81000000 		.4byte	0x81
 1533 0351 02       		.uleb128 0x2
 1534 0352 91       		.byte	0x91
 1535 0353 64       		.sleb128 -28
 1536 0354 10       		.uleb128 0x10
 1537 0355 A4020000 		.4byte	.LASF45
 1538 0359 01       		.byte	0x1
 1539 035a 8F02     		.2byte	0x28f
 1540 035c 6B000000 		.4byte	0x6b
 1541 0360 02       		.uleb128 0x2
 1542 0361 91       		.byte	0x91
 1543 0362 76       		.sleb128 -10
 1544 0363 10       		.uleb128 0x10
 1545 0364 36020000 		.4byte	.LASF46
 1546 0368 01       		.byte	0x1
 1547 0369 9002     		.2byte	0x290
 1548 036b 82030000 		.4byte	0x382
 1549 036f 02       		.uleb128 0x2
 1550 0370 91       		.byte	0x91
 1551 0371 68       		.sleb128 -24
 1552 0372 10       		.uleb128 0x10
 1553 0373 F7010000 		.4byte	.LASF47
 1554 0377 01       		.byte	0x1
 1555 0378 9102     		.2byte	0x291
 1556 037a 6B000000 		.4byte	0x6b
 1557 037e 02       		.uleb128 0x2
 1558 037f 91       		.byte	0x91
 1559 0380 77       		.sleb128 -9
 1560 0381 00       		.byte	0
 1561 0382 12       		.uleb128 0x12
 1562 0383 9A000000 		.4byte	0x9a
 1563 0387 92030000 		.4byte	0x392
 1564 038b 13       		.uleb128 0x13
 1565 038c BD000000 		.4byte	0xbd
 1566 0390 0A       		.byte	0xa
 1567 0391 00       		.byte	0
 1568 0392 14       		.uleb128 0x14
 1569 0393 26000000 		.4byte	.LASF48
 1570 0397 01       		.byte	0x1
 1571 0398 1D       		.byte	0x1d
 1572 0399 6B000000 		.4byte	0x6b
 1573 039d 05       		.uleb128 0x5
 1574 039e 03       		.byte	0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 41


 1575 039f 00000000 		.4byte	LCD_Char_initVar
 1576 03a3 14       		.uleb128 0x14
 1577 03a4 5F020000 		.4byte	.LASF49
 1578 03a8 01       		.byte	0x1
 1579 03a9 1B       		.byte	0x1b
 1580 03aa 6B000000 		.4byte	0x6b
 1581 03ae 05       		.uleb128 0x5
 1582 03af 03       		.byte	0x3
 1583 03b0 00000000 		.4byte	LCD_Char_enableState
 1584 03b4 12       		.uleb128 0x12
 1585 03b5 6B000000 		.4byte	0x6b
 1586 03b9 C4030000 		.4byte	0x3c4
 1587 03bd 13       		.uleb128 0x13
 1588 03be BD000000 		.4byte	0xbd
 1589 03c2 3F       		.byte	0x3f
 1590 03c3 00       		.byte	0
 1591 03c4 15       		.uleb128 0x15
 1592 03c5 9D000000 		.4byte	.LASF50
 1593 03c9 03       		.byte	0x3
 1594 03ca 77       		.byte	0x77
 1595 03cb CF030000 		.4byte	0x3cf
 1596 03cf 0D       		.uleb128 0xd
 1597 03d0 B4030000 		.4byte	0x3b4
 1598 03d4 00       		.byte	0
 1599              		.section	.debug_abbrev,"",%progbits
 1600              	.Ldebug_abbrev0:
 1601 0000 01       		.uleb128 0x1
 1602 0001 11       		.uleb128 0x11
 1603 0002 01       		.byte	0x1
 1604 0003 25       		.uleb128 0x25
 1605 0004 0E       		.uleb128 0xe
 1606 0005 13       		.uleb128 0x13
 1607 0006 0B       		.uleb128 0xb
 1608 0007 03       		.uleb128 0x3
 1609 0008 0E       		.uleb128 0xe
 1610 0009 1B       		.uleb128 0x1b
 1611 000a 0E       		.uleb128 0xe
 1612 000b 55       		.uleb128 0x55
 1613 000c 17       		.uleb128 0x17
 1614 000d 11       		.uleb128 0x11
 1615 000e 01       		.uleb128 0x1
 1616 000f 10       		.uleb128 0x10
 1617 0010 17       		.uleb128 0x17
 1618 0011 00       		.byte	0
 1619 0012 00       		.byte	0
 1620 0013 02       		.uleb128 0x2
 1621 0014 24       		.uleb128 0x24
 1622 0015 00       		.byte	0
 1623 0016 0B       		.uleb128 0xb
 1624 0017 0B       		.uleb128 0xb
 1625 0018 3E       		.uleb128 0x3e
 1626 0019 0B       		.uleb128 0xb
 1627 001a 03       		.uleb128 0x3
 1628 001b 0E       		.uleb128 0xe
 1629 001c 00       		.byte	0
 1630 001d 00       		.byte	0
 1631 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 42


 1632 001f 24       		.uleb128 0x24
 1633 0020 00       		.byte	0
 1634 0021 0B       		.uleb128 0xb
 1635 0022 0B       		.uleb128 0xb
 1636 0023 3E       		.uleb128 0x3e
 1637 0024 0B       		.uleb128 0xb
 1638 0025 03       		.uleb128 0x3
 1639 0026 08       		.uleb128 0x8
 1640 0027 00       		.byte	0
 1641 0028 00       		.byte	0
 1642 0029 04       		.uleb128 0x4
 1643 002a 16       		.uleb128 0x16
 1644 002b 00       		.byte	0
 1645 002c 03       		.uleb128 0x3
 1646 002d 0E       		.uleb128 0xe
 1647 002e 3A       		.uleb128 0x3a
 1648 002f 0B       		.uleb128 0xb
 1649 0030 3B       		.uleb128 0x3b
 1650 0031 0B       		.uleb128 0xb
 1651 0032 49       		.uleb128 0x49
 1652 0033 13       		.uleb128 0x13
 1653 0034 00       		.byte	0
 1654 0035 00       		.byte	0
 1655 0036 05       		.uleb128 0x5
 1656 0037 16       		.uleb128 0x16
 1657 0038 00       		.byte	0
 1658 0039 03       		.uleb128 0x3
 1659 003a 0E       		.uleb128 0xe
 1660 003b 3A       		.uleb128 0x3a
 1661 003c 0B       		.uleb128 0xb
 1662 003d 3B       		.uleb128 0x3b
 1663 003e 05       		.uleb128 0x5
 1664 003f 49       		.uleb128 0x49
 1665 0040 13       		.uleb128 0x13
 1666 0041 00       		.byte	0
 1667 0042 00       		.byte	0
 1668 0043 06       		.uleb128 0x6
 1669 0044 35       		.uleb128 0x35
 1670 0045 00       		.byte	0
 1671 0046 49       		.uleb128 0x49
 1672 0047 13       		.uleb128 0x13
 1673 0048 00       		.byte	0
 1674 0049 00       		.byte	0
 1675 004a 07       		.uleb128 0x7
 1676 004b 2E       		.uleb128 0x2e
 1677 004c 00       		.byte	0
 1678 004d 3F       		.uleb128 0x3f
 1679 004e 19       		.uleb128 0x19
 1680 004f 03       		.uleb128 0x3
 1681 0050 0E       		.uleb128 0xe
 1682 0051 3A       		.uleb128 0x3a
 1683 0052 0B       		.uleb128 0xb
 1684 0053 3B       		.uleb128 0x3b
 1685 0054 0B       		.uleb128 0xb
 1686 0055 27       		.uleb128 0x27
 1687 0056 19       		.uleb128 0x19
 1688 0057 11       		.uleb128 0x11
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 43


 1689 0058 01       		.uleb128 0x1
 1690 0059 12       		.uleb128 0x12
 1691 005a 06       		.uleb128 0x6
 1692 005b 40       		.uleb128 0x40
 1693 005c 18       		.uleb128 0x18
 1694 005d 9642     		.uleb128 0x2116
 1695 005f 19       		.uleb128 0x19
 1696 0060 00       		.byte	0
 1697 0061 00       		.byte	0
 1698 0062 08       		.uleb128 0x8
 1699 0063 2E       		.uleb128 0x2e
 1700 0064 01       		.byte	0x1
 1701 0065 3F       		.uleb128 0x3f
 1702 0066 19       		.uleb128 0x19
 1703 0067 03       		.uleb128 0x3
 1704 0068 0E       		.uleb128 0xe
 1705 0069 3A       		.uleb128 0x3a
 1706 006a 0B       		.uleb128 0xb
 1707 006b 3B       		.uleb128 0x3b
 1708 006c 0B       		.uleb128 0xb
 1709 006d 27       		.uleb128 0x27
 1710 006e 19       		.uleb128 0x19
 1711 006f 11       		.uleb128 0x11
 1712 0070 01       		.uleb128 0x1
 1713 0071 12       		.uleb128 0x12
 1714 0072 06       		.uleb128 0x6
 1715 0073 40       		.uleb128 0x40
 1716 0074 18       		.uleb128 0x18
 1717 0075 9642     		.uleb128 0x2116
 1718 0077 19       		.uleb128 0x19
 1719 0078 01       		.uleb128 0x1
 1720 0079 13       		.uleb128 0x13
 1721 007a 00       		.byte	0
 1722 007b 00       		.byte	0
 1723 007c 09       		.uleb128 0x9
 1724 007d 05       		.uleb128 0x5
 1725 007e 00       		.byte	0
 1726 007f 03       		.uleb128 0x3
 1727 0080 08       		.uleb128 0x8
 1728 0081 3A       		.uleb128 0x3a
 1729 0082 0B       		.uleb128 0xb
 1730 0083 3B       		.uleb128 0x3b
 1731 0084 0B       		.uleb128 0xb
 1732 0085 49       		.uleb128 0x49
 1733 0086 13       		.uleb128 0x13
 1734 0087 02       		.uleb128 0x2
 1735 0088 18       		.uleb128 0x18
 1736 0089 00       		.byte	0
 1737 008a 00       		.byte	0
 1738 008b 0A       		.uleb128 0xa
 1739 008c 05       		.uleb128 0x5
 1740 008d 00       		.byte	0
 1741 008e 03       		.uleb128 0x3
 1742 008f 0E       		.uleb128 0xe
 1743 0090 3A       		.uleb128 0x3a
 1744 0091 0B       		.uleb128 0xb
 1745 0092 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 44


 1746 0093 0B       		.uleb128 0xb
 1747 0094 49       		.uleb128 0x49
 1748 0095 13       		.uleb128 0x13
 1749 0096 02       		.uleb128 0x2
 1750 0097 18       		.uleb128 0x18
 1751 0098 00       		.byte	0
 1752 0099 00       		.byte	0
 1753 009a 0B       		.uleb128 0xb
 1754 009b 34       		.uleb128 0x34
 1755 009c 00       		.byte	0
 1756 009d 03       		.uleb128 0x3
 1757 009e 0E       		.uleb128 0xe
 1758 009f 3A       		.uleb128 0x3a
 1759 00a0 0B       		.uleb128 0xb
 1760 00a1 3B       		.uleb128 0x3b
 1761 00a2 0B       		.uleb128 0xb
 1762 00a3 49       		.uleb128 0x49
 1763 00a4 13       		.uleb128 0x13
 1764 00a5 02       		.uleb128 0x2
 1765 00a6 18       		.uleb128 0x18
 1766 00a7 00       		.byte	0
 1767 00a8 00       		.byte	0
 1768 00a9 0C       		.uleb128 0xc
 1769 00aa 0F       		.uleb128 0xf
 1770 00ab 00       		.byte	0
 1771 00ac 0B       		.uleb128 0xb
 1772 00ad 0B       		.uleb128 0xb
 1773 00ae 49       		.uleb128 0x49
 1774 00af 13       		.uleb128 0x13
 1775 00b0 00       		.byte	0
 1776 00b1 00       		.byte	0
 1777 00b2 0D       		.uleb128 0xd
 1778 00b3 26       		.uleb128 0x26
 1779 00b4 00       		.byte	0
 1780 00b5 49       		.uleb128 0x49
 1781 00b6 13       		.uleb128 0x13
 1782 00b7 00       		.byte	0
 1783 00b8 00       		.byte	0
 1784 00b9 0E       		.uleb128 0xe
 1785 00ba 2E       		.uleb128 0x2e
 1786 00bb 01       		.byte	0x1
 1787 00bc 3F       		.uleb128 0x3f
 1788 00bd 19       		.uleb128 0x19
 1789 00be 03       		.uleb128 0x3
 1790 00bf 0E       		.uleb128 0xe
 1791 00c0 3A       		.uleb128 0x3a
 1792 00c1 0B       		.uleb128 0xb
 1793 00c2 3B       		.uleb128 0x3b
 1794 00c3 05       		.uleb128 0x5
 1795 00c4 27       		.uleb128 0x27
 1796 00c5 19       		.uleb128 0x19
 1797 00c6 11       		.uleb128 0x11
 1798 00c7 01       		.uleb128 0x1
 1799 00c8 12       		.uleb128 0x12
 1800 00c9 06       		.uleb128 0x6
 1801 00ca 40       		.uleb128 0x40
 1802 00cb 18       		.uleb128 0x18
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 45


 1803 00cc 9642     		.uleb128 0x2116
 1804 00ce 19       		.uleb128 0x19
 1805 00cf 01       		.uleb128 0x1
 1806 00d0 13       		.uleb128 0x13
 1807 00d1 00       		.byte	0
 1808 00d2 00       		.byte	0
 1809 00d3 0F       		.uleb128 0xf
 1810 00d4 05       		.uleb128 0x5
 1811 00d5 00       		.byte	0
 1812 00d6 03       		.uleb128 0x3
 1813 00d7 0E       		.uleb128 0xe
 1814 00d8 3A       		.uleb128 0x3a
 1815 00d9 0B       		.uleb128 0xb
 1816 00da 3B       		.uleb128 0x3b
 1817 00db 05       		.uleb128 0x5
 1818 00dc 49       		.uleb128 0x49
 1819 00dd 13       		.uleb128 0x13
 1820 00de 02       		.uleb128 0x2
 1821 00df 18       		.uleb128 0x18
 1822 00e0 00       		.byte	0
 1823 00e1 00       		.byte	0
 1824 00e2 10       		.uleb128 0x10
 1825 00e3 34       		.uleb128 0x34
 1826 00e4 00       		.byte	0
 1827 00e5 03       		.uleb128 0x3
 1828 00e6 0E       		.uleb128 0xe
 1829 00e7 3A       		.uleb128 0x3a
 1830 00e8 0B       		.uleb128 0xb
 1831 00e9 3B       		.uleb128 0x3b
 1832 00ea 05       		.uleb128 0x5
 1833 00eb 49       		.uleb128 0x49
 1834 00ec 13       		.uleb128 0x13
 1835 00ed 02       		.uleb128 0x2
 1836 00ee 18       		.uleb128 0x18
 1837 00ef 00       		.byte	0
 1838 00f0 00       		.byte	0
 1839 00f1 11       		.uleb128 0x11
 1840 00f2 2E       		.uleb128 0x2e
 1841 00f3 01       		.byte	0x1
 1842 00f4 03       		.uleb128 0x3
 1843 00f5 0E       		.uleb128 0xe
 1844 00f6 3A       		.uleb128 0x3a
 1845 00f7 0B       		.uleb128 0xb
 1846 00f8 3B       		.uleb128 0x3b
 1847 00f9 05       		.uleb128 0x5
 1848 00fa 27       		.uleb128 0x27
 1849 00fb 19       		.uleb128 0x19
 1850 00fc 11       		.uleb128 0x11
 1851 00fd 01       		.uleb128 0x1
 1852 00fe 12       		.uleb128 0x12
 1853 00ff 06       		.uleb128 0x6
 1854 0100 40       		.uleb128 0x40
 1855 0101 18       		.uleb128 0x18
 1856 0102 9642     		.uleb128 0x2116
 1857 0104 19       		.uleb128 0x19
 1858 0105 01       		.uleb128 0x1
 1859 0106 13       		.uleb128 0x13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 46


 1860 0107 00       		.byte	0
 1861 0108 00       		.byte	0
 1862 0109 12       		.uleb128 0x12
 1863 010a 01       		.uleb128 0x1
 1864 010b 01       		.byte	0x1
 1865 010c 49       		.uleb128 0x49
 1866 010d 13       		.uleb128 0x13
 1867 010e 01       		.uleb128 0x1
 1868 010f 13       		.uleb128 0x13
 1869 0110 00       		.byte	0
 1870 0111 00       		.byte	0
 1871 0112 13       		.uleb128 0x13
 1872 0113 21       		.uleb128 0x21
 1873 0114 00       		.byte	0
 1874 0115 49       		.uleb128 0x49
 1875 0116 13       		.uleb128 0x13
 1876 0117 2F       		.uleb128 0x2f
 1877 0118 0B       		.uleb128 0xb
 1878 0119 00       		.byte	0
 1879 011a 00       		.byte	0
 1880 011b 14       		.uleb128 0x14
 1881 011c 34       		.uleb128 0x34
 1882 011d 00       		.byte	0
 1883 011e 03       		.uleb128 0x3
 1884 011f 0E       		.uleb128 0xe
 1885 0120 3A       		.uleb128 0x3a
 1886 0121 0B       		.uleb128 0xb
 1887 0122 3B       		.uleb128 0x3b
 1888 0123 0B       		.uleb128 0xb
 1889 0124 49       		.uleb128 0x49
 1890 0125 13       		.uleb128 0x13
 1891 0126 3F       		.uleb128 0x3f
 1892 0127 19       		.uleb128 0x19
 1893 0128 02       		.uleb128 0x2
 1894 0129 18       		.uleb128 0x18
 1895 012a 00       		.byte	0
 1896 012b 00       		.byte	0
 1897 012c 15       		.uleb128 0x15
 1898 012d 34       		.uleb128 0x34
 1899 012e 00       		.byte	0
 1900 012f 03       		.uleb128 0x3
 1901 0130 0E       		.uleb128 0xe
 1902 0131 3A       		.uleb128 0x3a
 1903 0132 0B       		.uleb128 0xb
 1904 0133 3B       		.uleb128 0x3b
 1905 0134 0B       		.uleb128 0xb
 1906 0135 49       		.uleb128 0x49
 1907 0136 13       		.uleb128 0x13
 1908 0137 3F       		.uleb128 0x3f
 1909 0138 19       		.uleb128 0x19
 1910 0139 3C       		.uleb128 0x3c
 1911 013a 19       		.uleb128 0x19
 1912 013b 00       		.byte	0
 1913 013c 00       		.byte	0
 1914 013d 00       		.byte	0
 1915              		.section	.debug_aranges,"",%progbits
 1916 0000 94000000 		.4byte	0x94
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 47


 1917 0004 0200     		.2byte	0x2
 1918 0006 00000000 		.4byte	.Ldebug_info0
 1919 000a 04       		.byte	0x4
 1920 000b 00       		.byte	0
 1921 000c 0000     		.2byte	0
 1922 000e 0000     		.2byte	0
 1923 0010 00000000 		.4byte	.LFB0
 1924 0014 7C000000 		.4byte	.LFE0-.LFB0
 1925 0018 00000000 		.4byte	.LFB1
 1926 001c 18000000 		.4byte	.LFE1-.LFB1
 1927 0020 00000000 		.4byte	.LFB2
 1928 0024 24000000 		.4byte	.LFE2-.LFB2
 1929 0028 00000000 		.4byte	.LFB3
 1930 002c 18000000 		.4byte	.LFE3-.LFB3
 1931 0030 00000000 		.4byte	.LFB4
 1932 0034 72000000 		.4byte	.LFE4-.LFB4
 1933 0038 00000000 		.4byte	.LFB5
 1934 003c 58000000 		.4byte	.LFE5-.LFB5
 1935 0040 00000000 		.4byte	.LFB6
 1936 0044 1C000000 		.4byte	.LFE6-.LFB6
 1937 0048 00000000 		.4byte	.LFB7
 1938 004c 48000000 		.4byte	.LFE7-.LFB7
 1939 0050 00000000 		.4byte	.LFB8
 1940 0054 48000000 		.4byte	.LFE8-.LFB8
 1941 0058 00000000 		.4byte	.LFB9
 1942 005c E4000000 		.4byte	.LFE9-.LFB9
 1943 0060 00000000 		.4byte	.LFB10
 1944 0064 6C000000 		.4byte	.LFE10-.LFB10
 1945 0068 00000000 		.4byte	.LFB11
 1946 006c 58000000 		.4byte	.LFE11-.LFB11
 1947 0070 00000000 		.4byte	.LFB12
 1948 0074 3C000000 		.4byte	.LFE12-.LFB12
 1949 0078 00000000 		.4byte	.LFB13
 1950 007c 2E000000 		.4byte	.LFE13-.LFB13
 1951 0080 00000000 		.4byte	.LFB14
 1952 0084 46000000 		.4byte	.LFE14-.LFB14
 1953 0088 00000000 		.4byte	.LFB15
 1954 008c B8000000 		.4byte	.LFE15-.LFB15
 1955 0090 00000000 		.4byte	0
 1956 0094 00000000 		.4byte	0
 1957              		.section	.debug_ranges,"",%progbits
 1958              	.Ldebug_ranges0:
 1959 0000 00000000 		.4byte	.LFB0
 1960 0004 7C000000 		.4byte	.LFE0
 1961 0008 00000000 		.4byte	.LFB1
 1962 000c 18000000 		.4byte	.LFE1
 1963 0010 00000000 		.4byte	.LFB2
 1964 0014 24000000 		.4byte	.LFE2
 1965 0018 00000000 		.4byte	.LFB3
 1966 001c 18000000 		.4byte	.LFE3
 1967 0020 00000000 		.4byte	.LFB4
 1968 0024 72000000 		.4byte	.LFE4
 1969 0028 00000000 		.4byte	.LFB5
 1970 002c 58000000 		.4byte	.LFE5
 1971 0030 00000000 		.4byte	.LFB6
 1972 0034 1C000000 		.4byte	.LFE6
 1973 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 48


 1974 003c 48000000 		.4byte	.LFE7
 1975 0040 00000000 		.4byte	.LFB8
 1976 0044 48000000 		.4byte	.LFE8
 1977 0048 00000000 		.4byte	.LFB9
 1978 004c E4000000 		.4byte	.LFE9
 1979 0050 00000000 		.4byte	.LFB10
 1980 0054 6C000000 		.4byte	.LFE10
 1981 0058 00000000 		.4byte	.LFB11
 1982 005c 58000000 		.4byte	.LFE11
 1983 0060 00000000 		.4byte	.LFB12
 1984 0064 3C000000 		.4byte	.LFE12
 1985 0068 00000000 		.4byte	.LFB13
 1986 006c 2E000000 		.4byte	.LFE13
 1987 0070 00000000 		.4byte	.LFB14
 1988 0074 46000000 		.4byte	.LFE14
 1989 0078 00000000 		.4byte	.LFB15
 1990 007c B8000000 		.4byte	.LFE15
 1991 0080 00000000 		.4byte	0
 1992 0084 00000000 		.4byte	0
 1993              		.section	.debug_line,"",%progbits
 1994              	.Ldebug_line0:
 1995 0000 27020000 		.section	.debug_str,"MS",%progbits,1
 1995      02005500 
 1995      00000201 
 1995      FB0E0D00 
 1995      01010101 
 1996              	.LASF6:
 1997 0000 6C6F6E67 		.ascii	"long long int\000"
 1997      206C6F6E 
 1997      6720696E 
 1997      7400
 1998              	.LASF43:
 1999 000e 73686966 		.ascii	"shift\000"
 1999      7400
 2000              	.LASF23:
 2001 0014 4C43445F 		.ascii	"LCD_Char_Position\000"
 2001      43686172 
 2001      5F506F73 
 2001      6974696F 
 2001      6E00
 2002              	.LASF48:
 2003 0026 4C43445F 		.ascii	"LCD_Char_initVar\000"
 2003      43686172 
 2003      5F696E69 
 2003      74566172 
 2003      00
 2004              	.LASF28:
 2005 0037 4C43445F 		.ascii	"LCD_Char_PutChar\000"
 2005      43686172 
 2005      5F507574 
 2005      43686172 
 2005      00
 2006              	.LASF29:
 2007 0048 63686172 		.ascii	"character\000"
 2007      61637465 
 2007      7200
 2008              	.LASF36:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 49


 2009 0052 76616C75 		.ascii	"value\000"
 2009      6500
 2010              	.LASF53:
 2011 0058 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\IR LCD\\IR_LCD\\IR_LCD.c"
 2011      73657273 
 2011      5C41646D 
 2011      696E5C44 
 2011      65736B74 
 2012 0085 7964736E 		.ascii	"ydsn\000"
 2012      00
 2013              	.LASF3:
 2014 008a 73686F72 		.ascii	"short unsigned int\000"
 2014      7420756E 
 2014      7369676E 
 2014      65642069 
 2014      6E7400
 2015              	.LASF50:
 2016 009d 4C43445F 		.ascii	"LCD_Char_customFonts\000"
 2016      43686172 
 2016      5F637573 
 2016      746F6D46 
 2016      6F6E7473 
 2017              	.LASF26:
 2018 00b2 696E6465 		.ascii	"indexU8\000"
 2018      78553800 
 2019              	.LASF19:
 2020 00ba 4C43445F 		.ascii	"LCD_Char_Enable\000"
 2020      43686172 
 2020      5F456E61 
 2020      626C6500 
 2021              	.LASF25:
 2022 00ca 73747269 		.ascii	"string\000"
 2022      6E6700
 2023              	.LASF22:
 2024 00d1 636F6C75 		.ascii	"column\000"
 2024      6D6E00
 2025              	.LASF12:
 2026 00d8 666C6F61 		.ascii	"float\000"
 2026      7400
 2027              	.LASF51:
 2028 00de 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2028      4320342E 
 2028      382E3420 
 2028      32303134 
 2028      30353236 
 2029 0111 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2029      20726576 
 2029      6973696F 
 2029      6E203231 
 2029      31333538 
 2030 0144 30202D66 		.ascii	"0 -ffunction-sections\000"
 2030      66756E63 
 2030      74696F6E 
 2030      2D736563 
 2030      74696F6E 
 2031              	.LASF20:
 2032 015a 4C43445F 		.ascii	"LCD_Char_Start\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 50


 2032      43686172 
 2032      5F537461 
 2032      727400
 2033              	.LASF14:
 2034 0169 63686172 		.ascii	"char8\000"
 2034      3800
 2035              	.LASF44:
 2036 016f 4C43445F 		.ascii	"LCD_Char_PrintU32Number\000"
 2036      43686172 
 2036      5F507269 
 2036      6E745533 
 2036      324E756D 
 2037              	.LASF5:
 2038 0187 6C6F6E67 		.ascii	"long unsigned int\000"
 2038      20756E73 
 2038      69676E65 
 2038      6420696E 
 2038      7400
 2039              	.LASF9:
 2040 0199 75696E74 		.ascii	"uint8\000"
 2040      3800
 2041              	.LASF30:
 2042 019f 4C43445F 		.ascii	"LCD_Char_WriteData\000"
 2042      43686172 
 2042      5F577269 
 2042      74654461 
 2042      746100
 2043              	.LASF1:
 2044 01b2 756E7369 		.ascii	"unsigned char\000"
 2044      676E6564 
 2044      20636861 
 2044      7200
 2045              	.LASF13:
 2046 01c0 646F7562 		.ascii	"double\000"
 2046      6C6500
 2047              	.LASF10:
 2048 01c7 75696E74 		.ascii	"uint16\000"
 2048      313600
 2049              	.LASF38:
 2050 01ce 4C43445F 		.ascii	"LCD_Char_WrCntrlNib\000"
 2050      43686172 
 2050      5F577243 
 2050      6E74726C 
 2050      4E696200 
 2051              	.LASF18:
 2052 01e2 4C43445F 		.ascii	"LCD_Char_Init\000"
 2052      43686172 
 2052      5F496E69 
 2052      7400
 2053              	.LASF11:
 2054 01f0 75696E74 		.ascii	"uint32\000"
 2054      333200
 2055              	.LASF47:
 2056 01f7 64696749 		.ascii	"digIndex\000"
 2056      6E646578 
 2056      00
 2057              	.LASF8:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 51


 2058 0200 756E7369 		.ascii	"unsigned int\000"
 2058      676E6564 
 2058      20696E74 
 2058      00
 2059              	.LASF7:
 2060 020d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2060      206C6F6E 
 2060      6720756E 
 2060      7369676E 
 2060      65642069 
 2061              	.LASF37:
 2062 0224 4C43445F 		.ascii	"LCD_Char_WrDatNib\000"
 2062      43686172 
 2062      5F577244 
 2062      61744E69 
 2062      6200
 2063              	.LASF46:
 2064 0236 6E756D62 		.ascii	"number\000"
 2064      657200
 2065              	.LASF17:
 2066 023d 73697A65 		.ascii	"sizetype\000"
 2066      74797065 
 2066      00
 2067              	.LASF34:
 2068 0246 63427974 		.ascii	"cByte\000"
 2068      6500
 2069              	.LASF39:
 2070 024c 4C43445F 		.ascii	"LCD_Char_PrintInt8\000"
 2070      43686172 
 2070      5F507269 
 2070      6E74496E 
 2070      743800
 2071              	.LASF49:
 2072 025f 4C43445F 		.ascii	"LCD_Char_enableState\000"
 2072      43686172 
 2072      5F656E61 
 2072      626C6553 
 2072      74617465 
 2073              	.LASF15:
 2074 0274 63686172 		.ascii	"char\000"
 2074      00
 2075              	.LASF33:
 2076 0279 4C43445F 		.ascii	"LCD_Char_WriteControl\000"
 2076      43686172 
 2076      5F577269 
 2076      7465436F 
 2076      6E74726F 
 2077              	.LASF24:
 2078 028f 4C43445F 		.ascii	"LCD_Char_PrintString\000"
 2078      43686172 
 2078      5F507269 
 2078      6E745374 
 2078      72696E67 
 2079              	.LASF45:
 2080 02a4 746D7044 		.ascii	"tmpDigit\000"
 2080      69676974 
 2080      00
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 52


 2081              	.LASF2:
 2082 02ad 73686F72 		.ascii	"short int\000"
 2082      7420696E 
 2082      7400
 2083              	.LASF27:
 2084 02b7 63757272 		.ascii	"current\000"
 2084      656E7400 
 2085              	.LASF21:
 2086 02bf 4C43445F 		.ascii	"LCD_Char_Stop\000"
 2086      43686172 
 2086      5F53746F 
 2086      7000
 2087              	.LASF4:
 2088 02cd 6C6F6E67 		.ascii	"long int\000"
 2088      20696E74 
 2088      00
 2089              	.LASF16:
 2090 02d6 72656733 		.ascii	"reg32\000"
 2090      3200
 2091              	.LASF40:
 2092 02dc 4C43445F 		.ascii	"LCD_Char_hex\000"
 2092      43686172 
 2092      5F686578 
 2092      00
 2093              	.LASF52:
 2094 02e9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\LCD_Char.c\000"
 2094      6E657261 
 2094      7465645F 
 2094      536F7572 
 2094      63655C50 
 2095              	.LASF0:
 2096 030d 7369676E 		.ascii	"signed char\000"
 2096      65642063 
 2096      68617200 
 2097              	.LASF31:
 2098 0319 64427974 		.ascii	"dByte\000"
 2098      6500
 2099              	.LASF41:
 2100 031f 4C43445F 		.ascii	"LCD_Char_PrintInt16\000"
 2100      43686172 
 2100      5F507269 
 2100      6E74496E 
 2100      74313600 
 2101              	.LASF35:
 2102 0333 4C43445F 		.ascii	"LCD_Char_IsReady\000"
 2102      43686172 
 2102      5F497352 
 2102      65616479 
 2102      00
 2103              	.LASF42:
 2104 0344 4C43445F 		.ascii	"LCD_Char_PrintInt32\000"
 2104      43686172 
 2104      5F507269 
 2104      6E74496E 
 2104      74333200 
 2105              	.LASF32:
 2106 0358 6E696262 		.ascii	"nibble\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccLlGRbk.s 			page 53


 2106      6C6500
 2107              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

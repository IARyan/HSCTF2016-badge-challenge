ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TCPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	TCPWM_initVar
  18              		.bss
  19              		.type	TCPWM_initVar, %object
  20              		.size	TCPWM_initVar, 1
  21              	TCPWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.TCPWM_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TCPWM_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	TCPWM_Init, %function
  29              	TCPWM_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\TCPWM.c"
   1:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/TCPWM.c **** * File Name: TCPWM.c
   3:.\Generated_Source\PSoC4/TCPWM.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/TCPWM.c **** *
   5:.\Generated_Source\PSoC4/TCPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/TCPWM.c **** *  This file provides the source code to the API for the TCPWM
   7:.\Generated_Source\PSoC4/TCPWM.c **** *  component
   8:.\Generated_Source\PSoC4/TCPWM.c **** *
   9:.\Generated_Source\PSoC4/TCPWM.c **** * Note:
  10:.\Generated_Source\PSoC4/TCPWM.c **** *  None
  11:.\Generated_Source\PSoC4/TCPWM.c **** *
  12:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/TCPWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/TCPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/TCPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/TCPWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/TCPWM.c **** 
  19:.\Generated_Source\PSoC4/TCPWM.c **** #include "TCPWM.h"
  20:.\Generated_Source\PSoC4/TCPWM.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/TCPWM.c **** 
  22:.\Generated_Source\PSoC4/TCPWM.c **** uint8 TCPWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/TCPWM.c **** 
  24:.\Generated_Source\PSoC4/TCPWM.c **** 
  25:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Init
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 2


  27:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/TCPWM.c **** *
  29:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/TCPWM.c **** *  Initialize/Restore default TCPWM configuration.
  31:.\Generated_Source\PSoC4/TCPWM.c **** *
  32:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
  33:.\Generated_Source\PSoC4/TCPWM.c **** *  None
  34:.\Generated_Source\PSoC4/TCPWM.c **** *
  35:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
  36:.\Generated_Source\PSoC4/TCPWM.c **** *  None
  37:.\Generated_Source\PSoC4/TCPWM.c **** *
  38:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Init(void)
  40:.\Generated_Source\PSoC4/TCPWM.c **** {
  32              		.loc 1 40 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/TCPWM.c **** 
  42:.\Generated_Source\PSoC4/TCPWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__QUAD == TCPWM_CONFIG)
  44:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/TCPWM.c ****         (((uint32)(TCPWM_QUAD_ENCODING_MODES     << TCPWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_CONFIG                  << TCPWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__QUAD == TCPWM_CONFIG) */
  48:.\Generated_Source\PSoC4/TCPWM.c **** 
  49:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__PWM_SEL == TCPWM_CONFIG)
  50:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_CONTROL_REG =
  51:.\Generated_Source\PSoC4/TCPWM.c ****         (((uint32)(TCPWM_PWM_STOP_EVENT          << TCPWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_PWM_OUT_INVERT          << TCPWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_PWM_OUT_N_INVERT        << TCPWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_PWM_MODE                << TCPWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/TCPWM.c **** 
  56:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM_PR == TCPWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/TCPWM.c ****             ((uint32)(TCPWM_PWM_RUN_MODE         << TCPWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/TCPWM.c **** 
  60:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCounter(TCPWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/TCPWM.c ****         #else
  62:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |=
  63:.\Generated_Source\PSoC4/TCPWM.c ****             (((uint32)(TCPWM_PWM_ALIGN           << TCPWM_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/TCPWM.c ****              ((uint32)(TCPWM_PWM_KILL_EVENT      << TCPWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM_PR == TCPWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/TCPWM.c **** 
  67:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM_DT == TCPWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/TCPWM.c ****             ((uint32)(TCPWM_PWM_DEAD_TIME_CYCLE  << TCPWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM_DT == TCPWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/TCPWM.c **** 
  72:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM == TCPWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_CONTROL_REG |=
  74:.\Generated_Source\PSoC4/TCPWM.c ****             ((uint32)TCPWM_PWM_PRESCALER         << TCPWM_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM == TCPWM_PWM_MODE) */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 3


  76:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__PWM_SEL == TCPWM_CONFIG) */
  77:.\Generated_Source\PSoC4/TCPWM.c **** 
  78:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__TIMER == TCPWM_CONFIG)
  79:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_CONTROL_REG =
  40              		.loc 1 79 0
  41 0004 0B4B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 5202     		lsl	r2, r2, #9
  44 000a 1A60     		str	r2, [r3]
  80:.\Generated_Source\PSoC4/TCPWM.c ****         (((uint32)(TCPWM_TC_PRESCALER            << TCPWM_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_TC_COUNTER_MODE         << TCPWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_TC_RUN_MODE             << TCPWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_TC_COMP_CAP_MODE        << TCPWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__TIMER == TCPWM_CONFIG) */
  85:.\Generated_Source\PSoC4/TCPWM.c **** 
  86:.\Generated_Source\PSoC4/TCPWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__QUAD == TCPWM_CONFIG)
  88:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/TCPWM.c ****         (((uint32)(TCPWM_QUAD_PHIA_SIGNAL_MODE   << TCPWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_QUAD_INDEX_SIGNAL_MODE  << TCPWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_QUAD_STOP_SIGNAL_MODE   << TCPWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_QUAD_PHIB_SIGNAL_MODE   << TCPWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__QUAD == TCPWM_CONFIG) */
  94:.\Generated_Source\PSoC4/TCPWM.c **** 
  95:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__PWM_SEL == TCPWM_CONFIG)
  96:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_TRIG_CONTROL1_REG  =
  97:.\Generated_Source\PSoC4/TCPWM.c ****         (((uint32)(TCPWM_PWM_SWITCH_SIGNAL_MODE  << TCPWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_PWM_COUNT_SIGNAL_MODE   << TCPWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_PWM_RELOAD_SIGNAL_MODE  << TCPWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_PWM_STOP_SIGNAL_MODE    << TCPWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_PWM_START_SIGNAL_MODE   << TCPWM_START_SHIFT)));
 102:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__PWM_SEL == TCPWM_CONFIG) */
 103:.\Generated_Source\PSoC4/TCPWM.c **** 
 104:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__TIMER == TCPWM_CONFIG)
 105:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_TRIG_CONTROL1_REG  =
  45              		.loc 1 105 0
  46 000c 0A4B     		ldr	r3, .L2+4
  47 000e 0C22     		mov	r2, #12
  48 0010 1A60     		str	r2, [r3]
 106:.\Generated_Source\PSoC4/TCPWM.c ****         (((uint32)(TCPWM_TC_CAPTURE_SIGNAL_MODE  << TCPWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_TC_COUNT_SIGNAL_MODE    << TCPWM_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_TC_RELOAD_SIGNAL_MODE   << TCPWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_TC_STOP_SIGNAL_MODE     << TCPWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/TCPWM.c ****          ((uint32)(TCPWM_TC_START_SIGNAL_MODE    << TCPWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__TIMER == TCPWM_CONFIG) */
 112:.\Generated_Source\PSoC4/TCPWM.c **** 
 113:.\Generated_Source\PSoC4/TCPWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__QUAD == TCPWM_CONFIG)
 115:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_SetInterruptMode(TCPWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__QUAD == TCPWM_CONFIG) */
 117:.\Generated_Source\PSoC4/TCPWM.c **** 
 118:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__PWM_SEL == TCPWM_CONFIG)
 119:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_SetInterruptMode(TCPWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__PWM_SEL == TCPWM_CONFIG) */
 121:.\Generated_Source\PSoC4/TCPWM.c **** 
 122:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__TIMER == TCPWM_CONFIG)
 123:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_SetInterruptMode(TCPWM_TC_INTERRUPT_MASK);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 4


  49              		.loc 1 123 0
  50 0012 0120     		mov	r0, #1
  51 0014 FFF7FEFF 		bl	TCPWM_SetInterruptMode
 124:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__TIMER == TCPWM_CONFIG) */
 125:.\Generated_Source\PSoC4/TCPWM.c **** 
 126:.\Generated_Source\PSoC4/TCPWM.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__TIMER == TCPWM_CONFIG)
 128:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WritePeriod(TCPWM_TC_PERIOD_VALUE );
  52              		.loc 1 128 0
  53 0018 084B     		ldr	r3, .L2+8
  54 001a 181C     		mov	r0, r3
  55 001c FFF7FEFF 		bl	TCPWM_WritePeriod
 129:.\Generated_Source\PSoC4/TCPWM.c **** 
 130:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__COUNT_DOWN == TCPWM_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCounter(TCPWM_TC_PERIOD_VALUE );
  56              		.loc 1 131 0
  57 0020 064B     		ldr	r3, .L2+8
  58 0022 181C     		mov	r0, r3
  59 0024 FFF7FEFF 		bl	TCPWM_WriteCounter
 132:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__COUNT_DOWN == TCPWM_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/TCPWM.c **** 
 134:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__COMPARE == TCPWM_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCompare(TCPWM_TC_COMPARE_VALUE);
  60              		.loc 1 135 0
  61 0028 7820     		mov	r0, #120
  62 002a FFF7FEFF 		bl	TCPWM_WriteCompare
 136:.\Generated_Source\PSoC4/TCPWM.c **** 
 137:.\Generated_Source\PSoC4/TCPWM.c ****             #if (1u == TCPWM_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_WriteCompareBuf(TCPWM_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* (1u == TCPWM_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__COMPARE == TCPWM_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__TIMER == TCPWM_CONFIG) */
 143:.\Generated_Source\PSoC4/TCPWM.c **** 
 144:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__PWM_SEL == TCPWM_CONFIG)
 145:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WritePeriod(TCPWM_PWM_PERIOD_VALUE );
 146:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_WriteCompare(TCPWM_PWM_COMPARE_VALUE);
 147:.\Generated_Source\PSoC4/TCPWM.c **** 
 148:.\Generated_Source\PSoC4/TCPWM.c ****         #if (1u == TCPWM_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WriteCompareBuf(TCPWM_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (1u == TCPWM_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/TCPWM.c **** 
 153:.\Generated_Source\PSoC4/TCPWM.c ****         #if (1u == TCPWM_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_WritePeriodBuf(TCPWM_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (1u == TCPWM_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/TCPWM.c **** 
 158:.\Generated_Source\PSoC4/TCPWM.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/TCPWM.c ****         #if (TCPWM__PWM_PR == TCPWM_PWM_MODE)
 160:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/TCPWM.c ****                     (TCPWM_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/TCPWM.c ****                     TCPWM_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/TCPWM.c ****                     TCPWM_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/TCPWM.c ****         #else
 165:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__LEFT == TCPWM_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_LEFT;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 5


 167:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* ( TCPWM_PWM_LEFT == TCPWM_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/TCPWM.c **** 
 169:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__RIGHT == TCPWM_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_WriteCounter(TCPWM_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* ( TCPWM_PWM_RIGHT == TCPWM_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/TCPWM.c **** 
 174:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__CENTER == TCPWM_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* ( TCPWM_PWM_CENTER == TCPWM_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/TCPWM.c **** 
 178:.\Generated_Source\PSoC4/TCPWM.c ****             #if (TCPWM__ASYMMETRIC == TCPWM_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/TCPWM.c ****                 TCPWM_TRIG_CONTROL2_REG = TCPWM_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/TCPWM.c ****             #endif  /* (TCPWM__ASYMMETRIC == TCPWM_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/TCPWM.c ****         #endif  /* (TCPWM__PWM_PR == TCPWM_PWM_MODE) */
 182:.\Generated_Source\PSoC4/TCPWM.c ****     #endif  /* (TCPWM__PWM_SEL == TCPWM_CONFIG) */
 183:.\Generated_Source\PSoC4/TCPWM.c **** }
  63              		.loc 1 183 0
  64 002e BD46     		mov	sp, r7
  65              		@ sp needed
  66 0030 80BD     		pop	{r7, pc}
  67              	.L3:
  68 0032 C046     		.align	2
  69              	.L2:
  70 0034 00010540 		.word	1074069760
  71 0038 24010540 		.word	1074069796
  72 003c 88130000 		.word	5000
  73              		.cfi_endproc
  74              	.LFE0:
  75              		.size	TCPWM_Init, .-TCPWM_Init
  76              		.section	.text.TCPWM_Enable,"ax",%progbits
  77              		.align	2
  78              		.global	TCPWM_Enable
  79              		.code	16
  80              		.thumb_func
  81              		.type	TCPWM_Enable, %function
  82              	TCPWM_Enable:
  83              	.LFB1:
 184:.\Generated_Source\PSoC4/TCPWM.c **** 
 185:.\Generated_Source\PSoC4/TCPWM.c **** 
 186:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Enable
 188:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/TCPWM.c **** *
 190:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 191:.\Generated_Source\PSoC4/TCPWM.c **** *  Enables the TCPWM.
 192:.\Generated_Source\PSoC4/TCPWM.c **** *
 193:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 194:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 195:.\Generated_Source\PSoC4/TCPWM.c **** *
 196:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 197:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 198:.\Generated_Source\PSoC4/TCPWM.c **** *
 199:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Enable(void)
 201:.\Generated_Source\PSoC4/TCPWM.c **** {
  84              		.loc 1 201 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 6


  85              		.cfi_startproc
  86 0000 90B5     		push	{r4, r7, lr}
  87              		.cfi_def_cfa_offset 12
  88              		.cfi_offset 4, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 83B0     		sub	sp, sp, #12
  92              		.cfi_def_cfa_offset 24
  93 0004 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/TCPWM.c **** 
 204:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
  95              		.loc 1 204 0
  96 0006 FC1D     		add	r4, r7, #7
  97 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  98 000c 031C     		mov	r3, r0
  99 000e 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_BLOCK_CONTROL_REG |= TCPWM_MASK;
 100              		.loc 1 205 0
 101 0010 084B     		ldr	r3, .L5
 102 0012 084A     		ldr	r2, .L5
 103 0014 1268     		ldr	r2, [r2]
 104 0016 0121     		mov	r1, #1
 105 0018 0A43     		orr	r2, r1
 106 001a 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 107              		.loc 1 206 0
 108 001c FB1D     		add	r3, r7, #7
 109 001e 1B78     		ldrb	r3, [r3]
 110 0020 181C     		mov	r0, r3
 111 0022 FFF7FEFF 		bl	CyExitCriticalSection
 207:.\Generated_Source\PSoC4/TCPWM.c **** 
 208:.\Generated_Source\PSoC4/TCPWM.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__PWM_SEL == TCPWM_CONFIG)
 210:.\Generated_Source\PSoC4/TCPWM.c ****         #if (0u == TCPWM_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_TriggerCommand(TCPWM_MASK, TCPWM_CMD_START);
 212:.\Generated_Source\PSoC4/TCPWM.c ****         #endif /* (0u == TCPWM_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM__PWM_SEL == TCPWM_CONFIG) */
 214:.\Generated_Source\PSoC4/TCPWM.c **** 
 215:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM__TIMER == TCPWM_CONFIG)
 216:.\Generated_Source\PSoC4/TCPWM.c ****         #if (0u == TCPWM_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_TriggerCommand(TCPWM_MASK, TCPWM_CMD_START);
 112              		.loc 1 217 0
 113 0026 0120     		mov	r0, #1
 114 0028 1821     		mov	r1, #24
 115 002a FFF7FEFF 		bl	TCPWM_TriggerCommand
 218:.\Generated_Source\PSoC4/TCPWM.c ****         #endif /* (0u == TCPWM_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM__TIMER == TCPWM_CONFIG) */
 220:.\Generated_Source\PSoC4/TCPWM.c **** }
 116              		.loc 1 220 0
 117 002e BD46     		mov	sp, r7
 118 0030 03B0     		add	sp, sp, #12
 119              		@ sp needed
 120 0032 90BD     		pop	{r4, r7, pc}
 121              	.L6:
 122              		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 7


 123              	.L5:
 124 0034 00000540 		.word	1074069504
 125              		.cfi_endproc
 126              	.LFE1:
 127              		.size	TCPWM_Enable, .-TCPWM_Enable
 128              		.section	.text.TCPWM_Start,"ax",%progbits
 129              		.align	2
 130              		.global	TCPWM_Start
 131              		.code	16
 132              		.thumb_func
 133              		.type	TCPWM_Start, %function
 134              	TCPWM_Start:
 135              	.LFB2:
 221:.\Generated_Source\PSoC4/TCPWM.c **** 
 222:.\Generated_Source\PSoC4/TCPWM.c **** 
 223:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Start
 225:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/TCPWM.c **** *
 227:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 228:.\Generated_Source\PSoC4/TCPWM.c **** *  Initializes the TCPWM with default customizer
 229:.\Generated_Source\PSoC4/TCPWM.c **** *  values when called the first time and enables the TCPWM.
 230:.\Generated_Source\PSoC4/TCPWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/TCPWM.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/TCPWM.c **** *
 233:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 234:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 235:.\Generated_Source\PSoC4/TCPWM.c **** *
 236:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 237:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 238:.\Generated_Source\PSoC4/TCPWM.c **** *
 239:.\Generated_Source\PSoC4/TCPWM.c **** * Global variables:
 240:.\Generated_Source\PSoC4/TCPWM.c **** *  TCPWM_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/TCPWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/TCPWM.c **** *  to 1 the first time TCPWM_Start() is called. This allows
 243:.\Generated_Source\PSoC4/TCPWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/TCPWM.c **** *  calls to the TCPWM_Start() routine.
 245:.\Generated_Source\PSoC4/TCPWM.c **** *
 246:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Start(void)
 248:.\Generated_Source\PSoC4/TCPWM.c **** {
 136              		.loc 1 248 0
 137              		.cfi_startproc
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/TCPWM.c ****     if (0u == TCPWM_initVar)
 144              		.loc 1 249 0
 145 0004 064B     		ldr	r3, .L9
 146 0006 1B78     		ldrb	r3, [r3]
 147 0008 002B     		cmp	r3, #0
 148 000a 04D1     		bne	.L8
 250:.\Generated_Source\PSoC4/TCPWM.c ****     {
 251:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_Init();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 8


 149              		.loc 1 251 0
 150 000c FFF7FEFF 		bl	TCPWM_Init
 252:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_initVar = 1u;
 151              		.loc 1 252 0
 152 0010 034B     		ldr	r3, .L9
 153 0012 0122     		mov	r2, #1
 154 0014 1A70     		strb	r2, [r3]
 155              	.L8:
 253:.\Generated_Source\PSoC4/TCPWM.c ****     }
 254:.\Generated_Source\PSoC4/TCPWM.c **** 
 255:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_Enable();
 156              		.loc 1 255 0
 157 0016 FFF7FEFF 		bl	TCPWM_Enable
 256:.\Generated_Source\PSoC4/TCPWM.c **** }
 158              		.loc 1 256 0
 159 001a BD46     		mov	sp, r7
 160              		@ sp needed
 161 001c 80BD     		pop	{r7, pc}
 162              	.L10:
 163 001e C046     		.align	2
 164              	.L9:
 165 0020 00000000 		.word	TCPWM_initVar
 166              		.cfi_endproc
 167              	.LFE2:
 168              		.size	TCPWM_Start, .-TCPWM_Start
 169              		.section	.text.TCPWM_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	TCPWM_Stop
 172              		.code	16
 173              		.thumb_func
 174              		.type	TCPWM_Stop, %function
 175              	TCPWM_Stop:
 176              	.LFB3:
 257:.\Generated_Source\PSoC4/TCPWM.c **** 
 258:.\Generated_Source\PSoC4/TCPWM.c **** 
 259:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_Stop
 261:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/TCPWM.c **** *
 263:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 264:.\Generated_Source\PSoC4/TCPWM.c **** *  Disables the TCPWM.
 265:.\Generated_Source\PSoC4/TCPWM.c **** *
 266:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 267:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 268:.\Generated_Source\PSoC4/TCPWM.c **** *
 269:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 270:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 271:.\Generated_Source\PSoC4/TCPWM.c **** *
 272:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_Stop(void)
 274:.\Generated_Source\PSoC4/TCPWM.c **** {
 177              		.loc 1 274 0
 178              		.cfi_startproc
 179 0000 90B5     		push	{r4, r7, lr}
 180              		.cfi_def_cfa_offset 12
 181              		.cfi_offset 4, -12
 182              		.cfi_offset 7, -8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 9


 183              		.cfi_offset 14, -4
 184 0002 83B0     		sub	sp, sp, #12
 185              		.cfi_def_cfa_offset 24
 186 0004 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
 275:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/TCPWM.c **** 
 277:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 188              		.loc 1 277 0
 189 0006 FC1D     		add	r4, r7, #7
 190 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 191 000c 031C     		mov	r3, r0
 192 000e 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC4/TCPWM.c **** 
 279:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_BLOCK_CONTROL_REG &= (uint32)~TCPWM_MASK;
 193              		.loc 1 279 0
 194 0010 064B     		ldr	r3, .L12
 195 0012 064A     		ldr	r2, .L12
 196 0014 1268     		ldr	r2, [r2]
 197 0016 0121     		mov	r1, #1
 198 0018 8A43     		bic	r2, r1
 199 001a 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/TCPWM.c **** 
 281:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 200              		.loc 1 281 0
 201 001c FB1D     		add	r3, r7, #7
 202 001e 1B78     		ldrb	r3, [r3]
 203 0020 181C     		mov	r0, r3
 204 0022 FFF7FEFF 		bl	CyExitCriticalSection
 282:.\Generated_Source\PSoC4/TCPWM.c **** }
 205              		.loc 1 282 0
 206 0026 BD46     		mov	sp, r7
 207 0028 03B0     		add	sp, sp, #12
 208              		@ sp needed
 209 002a 90BD     		pop	{r4, r7, pc}
 210              	.L13:
 211              		.align	2
 212              	.L12:
 213 002c 00000540 		.word	1074069504
 214              		.cfi_endproc
 215              	.LFE3:
 216              		.size	TCPWM_Stop, .-TCPWM_Stop
 217              		.section	.text.TCPWM_SetMode,"ax",%progbits
 218              		.align	2
 219              		.global	TCPWM_SetMode
 220              		.code	16
 221              		.thumb_func
 222              		.type	TCPWM_SetMode, %function
 223              	TCPWM_SetMode:
 224              	.LFB4:
 283:.\Generated_Source\PSoC4/TCPWM.c **** 
 284:.\Generated_Source\PSoC4/TCPWM.c **** 
 285:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetMode
 287:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/TCPWM.c **** *
 289:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 10


 290:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the operation mode of the TCPWM. This function is used when
 291:.\Generated_Source\PSoC4/TCPWM.c **** *  configured as a generic TCPWM and the actual mode of operation is
 292:.\Generated_Source\PSoC4/TCPWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/TCPWM.c **** *
 294:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 295:.\Generated_Source\PSoC4/TCPWM.c **** *  mode: Mode for the TCPWM to operate in
 296:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 297:.\Generated_Source\PSoC4/TCPWM.c **** *   - TCPWM_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/TCPWM.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/TCPWM.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/TCPWM.c **** *
 306:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 307:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 308:.\Generated_Source\PSoC4/TCPWM.c **** *
 309:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/TCPWM.c **** {
 225              		.loc 1 311 0
 226              		.cfi_startproc
 227 0000 90B5     		push	{r4, r7, lr}
 228              		.cfi_def_cfa_offset 12
 229              		.cfi_offset 4, -12
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 85B0     		sub	sp, sp, #20
 233              		.cfi_def_cfa_offset 32
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 236 0006 7860     		str	r0, [r7, #4]
 312:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/TCPWM.c **** 
 314:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 237              		.loc 1 314 0
 238 0008 3C1C     		mov	r4, r7
 239 000a 0F34     		add	r4, r4, #15
 240 000c FFF7FEFF 		bl	CyEnterCriticalSection
 241 0010 031C     		mov	r3, r0
 242 0012 2370     		strb	r3, [r4]
 315:.\Generated_Source\PSoC4/TCPWM.c **** 
 316:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_MODE_MASK;
 243              		.loc 1 316 0
 244 0014 0A4B     		ldr	r3, .L15
 245 0016 0A4A     		ldr	r2, .L15
 246 0018 1168     		ldr	r1, [r2]
 247 001a 0A4A     		ldr	r2, .L15+4
 248 001c 0A40     		and	r2, r1
 249 001e 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= mode;
 250              		.loc 1 317 0
 251 0020 074B     		ldr	r3, .L15
 252 0022 074A     		ldr	r2, .L15
 253 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 11


 254 0026 7A68     		ldr	r2, [r7, #4]
 255 0028 0A43     		orr	r2, r1
 256 002a 1A60     		str	r2, [r3]
 318:.\Generated_Source\PSoC4/TCPWM.c **** 
 319:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 257              		.loc 1 319 0
 258 002c 3B1C     		mov	r3, r7
 259 002e 0F33     		add	r3, r3, #15
 260 0030 1B78     		ldrb	r3, [r3]
 261 0032 181C     		mov	r0, r3
 262 0034 FFF7FEFF 		bl	CyExitCriticalSection
 320:.\Generated_Source\PSoC4/TCPWM.c **** }
 263              		.loc 1 320 0
 264 0038 BD46     		mov	sp, r7
 265 003a 05B0     		add	sp, sp, #20
 266              		@ sp needed
 267 003c 90BD     		pop	{r4, r7, pc}
 268              	.L16:
 269 003e C046     		.align	2
 270              	.L15:
 271 0040 00010540 		.word	1074069760
 272 0044 FFFFFFF8 		.word	-117440513
 273              		.cfi_endproc
 274              	.LFE4:
 275              		.size	TCPWM_SetMode, .-TCPWM_SetMode
 276              		.section	.text.TCPWM_SetQDMode,"ax",%progbits
 277              		.align	2
 278              		.global	TCPWM_SetQDMode
 279              		.code	16
 280              		.thumb_func
 281              		.type	TCPWM_SetQDMode, %function
 282              	TCPWM_SetQDMode:
 283              	.LFB5:
 321:.\Generated_Source\PSoC4/TCPWM.c **** 
 322:.\Generated_Source\PSoC4/TCPWM.c **** 
 323:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetQDMode
 325:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/TCPWM.c **** *
 327:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 328:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/TCPWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/TCPWM.c **** *
 331:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 332:.\Generated_Source\PSoC4/TCPWM.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 334:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/TCPWM.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/TCPWM.c **** *
 339:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 340:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 341:.\Generated_Source\PSoC4/TCPWM.c **** *
 342:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/TCPWM.c **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 12


 284              		.loc 1 344 0
 285              		.cfi_startproc
 286 0000 90B5     		push	{r4, r7, lr}
 287              		.cfi_def_cfa_offset 12
 288              		.cfi_offset 4, -12
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 85B0     		sub	sp, sp, #20
 292              		.cfi_def_cfa_offset 32
 293 0004 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
 345:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/TCPWM.c **** 
 347:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 296              		.loc 1 347 0
 297 0008 3C1C     		mov	r4, r7
 298 000a 0F34     		add	r4, r4, #15
 299 000c FFF7FEFF 		bl	CyEnterCriticalSection
 300 0010 031C     		mov	r3, r0
 301 0012 2370     		strb	r3, [r4]
 348:.\Generated_Source\PSoC4/TCPWM.c **** 
 349:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_QUAD_MODE_MASK;
 302              		.loc 1 349 0
 303 0014 0A4B     		ldr	r3, .L18
 304 0016 0A4A     		ldr	r2, .L18
 305 0018 1168     		ldr	r1, [r2]
 306 001a 0A4A     		ldr	r2, .L18+4
 307 001c 0A40     		and	r2, r1
 308 001e 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= qdMode;
 309              		.loc 1 350 0
 310 0020 074B     		ldr	r3, .L18
 311 0022 074A     		ldr	r2, .L18
 312 0024 1168     		ldr	r1, [r2]
 313 0026 7A68     		ldr	r2, [r7, #4]
 314 0028 0A43     		orr	r2, r1
 315 002a 1A60     		str	r2, [r3]
 351:.\Generated_Source\PSoC4/TCPWM.c **** 
 352:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 316              		.loc 1 352 0
 317 002c 3B1C     		mov	r3, r7
 318 002e 0F33     		add	r3, r3, #15
 319 0030 1B78     		ldrb	r3, [r3]
 320 0032 181C     		mov	r0, r3
 321 0034 FFF7FEFF 		bl	CyExitCriticalSection
 353:.\Generated_Source\PSoC4/TCPWM.c **** }
 322              		.loc 1 353 0
 323 0038 BD46     		mov	sp, r7
 324 003a 05B0     		add	sp, sp, #20
 325              		@ sp needed
 326 003c 90BD     		pop	{r4, r7, pc}
 327              	.L19:
 328 003e C046     		.align	2
 329              	.L18:
 330 0040 00010540 		.word	1074069760
 331 0044 FFFF8FFF 		.word	-7340033
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 13


 332              		.cfi_endproc
 333              	.LFE5:
 334              		.size	TCPWM_SetQDMode, .-TCPWM_SetQDMode
 335              		.section	.text.TCPWM_SetPrescaler,"ax",%progbits
 336              		.align	2
 337              		.global	TCPWM_SetPrescaler
 338              		.code	16
 339              		.thumb_func
 340              		.type	TCPWM_SetPrescaler, %function
 341              	TCPWM_SetPrescaler:
 342              	.LFB6:
 354:.\Generated_Source\PSoC4/TCPWM.c **** 
 355:.\Generated_Source\PSoC4/TCPWM.c **** 
 356:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPrescaler
 358:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/TCPWM.c **** *
 360:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 361:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/TCPWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/TCPWM.c **** *
 364:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 365:.\Generated_Source\PSoC4/TCPWM.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 367:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/TCPWM.c **** *
 376:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 377:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 378:.\Generated_Source\PSoC4/TCPWM.c **** *
 379:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/TCPWM.c **** {
 343              		.loc 1 381 0
 344              		.cfi_startproc
 345 0000 90B5     		push	{r4, r7, lr}
 346              		.cfi_def_cfa_offset 12
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 85B0     		sub	sp, sp, #20
 351              		.cfi_def_cfa_offset 32
 352 0004 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 354 0006 7860     		str	r0, [r7, #4]
 382:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/TCPWM.c **** 
 384:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 355              		.loc 1 384 0
 356 0008 3C1C     		mov	r4, r7
 357 000a 0F34     		add	r4, r4, #15
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 14


 358 000c FFF7FEFF 		bl	CyEnterCriticalSection
 359 0010 031C     		mov	r3, r0
 360 0012 2370     		strb	r3, [r4]
 385:.\Generated_Source\PSoC4/TCPWM.c **** 
 386:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PRESCALER_MASK;
 361              		.loc 1 386 0
 362 0014 0A4B     		ldr	r3, .L21
 363 0016 0A4A     		ldr	r2, .L21
 364 0018 1168     		ldr	r1, [r2]
 365 001a 0A4A     		ldr	r2, .L21+4
 366 001c 0A40     		and	r2, r1
 367 001e 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= prescaler;
 368              		.loc 1 387 0
 369 0020 074B     		ldr	r3, .L21
 370 0022 074A     		ldr	r2, .L21
 371 0024 1168     		ldr	r1, [r2]
 372 0026 7A68     		ldr	r2, [r7, #4]
 373 0028 0A43     		orr	r2, r1
 374 002a 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/TCPWM.c **** 
 389:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 375              		.loc 1 389 0
 376 002c 3B1C     		mov	r3, r7
 377 002e 0F33     		add	r3, r3, #15
 378 0030 1B78     		ldrb	r3, [r3]
 379 0032 181C     		mov	r0, r3
 380 0034 FFF7FEFF 		bl	CyExitCriticalSection
 390:.\Generated_Source\PSoC4/TCPWM.c **** }
 381              		.loc 1 390 0
 382 0038 BD46     		mov	sp, r7
 383 003a 05B0     		add	sp, sp, #20
 384              		@ sp needed
 385 003c 90BD     		pop	{r4, r7, pc}
 386              	.L22:
 387 003e C046     		.align	2
 388              	.L21:
 389 0040 00010540 		.word	1074069760
 390 0044 FF00FFFF 		.word	-65281
 391              		.cfi_endproc
 392              	.LFE6:
 393              		.size	TCPWM_SetPrescaler, .-TCPWM_SetPrescaler
 394              		.section	.text.TCPWM_SetOneShot,"ax",%progbits
 395              		.align	2
 396              		.global	TCPWM_SetOneShot
 397              		.code	16
 398              		.thumb_func
 399              		.type	TCPWM_SetOneShot, %function
 400              	TCPWM_SetOneShot:
 401              	.LFB7:
 391:.\Generated_Source\PSoC4/TCPWM.c **** 
 392:.\Generated_Source\PSoC4/TCPWM.c **** 
 393:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetOneShot
 395:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/TCPWM.c **** *
 397:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 15


 398:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the TCPWM runs
 399:.\Generated_Source\PSoC4/TCPWM.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/TCPWM.c **** *  TCPWM operates in the continuous mode.
 401:.\Generated_Source\PSoC4/TCPWM.c **** *
 402:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 403:.\Generated_Source\PSoC4/TCPWM.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 405:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/TCPWM.c **** *
 408:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 409:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 410:.\Generated_Source\PSoC4/TCPWM.c **** *
 411:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/TCPWM.c **** {
 402              		.loc 1 413 0
 403              		.cfi_startproc
 404 0000 90B5     		push	{r4, r7, lr}
 405              		.cfi_def_cfa_offset 12
 406              		.cfi_offset 4, -12
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 85B0     		sub	sp, sp, #20
 410              		.cfi_def_cfa_offset 32
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 413 0006 7860     		str	r0, [r7, #4]
 414:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/TCPWM.c **** 
 416:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 416 0
 415 0008 3C1C     		mov	r4, r7
 416 000a 0F34     		add	r4, r4, #15
 417 000c FFF7FEFF 		bl	CyEnterCriticalSection
 418 0010 031C     		mov	r3, r0
 419 0012 2370     		strb	r3, [r4]
 417:.\Generated_Source\PSoC4/TCPWM.c **** 
 418:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_ONESHOT_MASK;
 420              		.loc 1 418 0
 421 0014 0B4B     		ldr	r3, .L24
 422 0016 0B4A     		ldr	r2, .L24
 423 0018 1168     		ldr	r1, [r2]
 424 001a 0B4A     		ldr	r2, .L24+4
 425 001c 0A40     		and	r2, r1
 426 001e 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1BIT_MASK) <<
 427              		.loc 1 419 0
 428 0020 084B     		ldr	r3, .L24
 429 0022 084A     		ldr	r2, .L24
 430 0024 1168     		ldr	r1, [r2]
 431 0026 7868     		ldr	r0, [r7, #4]
 432 0028 0122     		mov	r2, #1
 433 002a 0240     		and	r2, r0
 434 002c 9204     		lsl	r2, r2, #18
 435 002e 0A43     		orr	r2, r1
 436 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 16


 420:.\Generated_Source\PSoC4/TCPWM.c ****                                                                TCPWM_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/TCPWM.c **** 
 422:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 437              		.loc 1 422 0
 438 0032 3B1C     		mov	r3, r7
 439 0034 0F33     		add	r3, r3, #15
 440 0036 1B78     		ldrb	r3, [r3]
 441 0038 181C     		mov	r0, r3
 442 003a FFF7FEFF 		bl	CyExitCriticalSection
 423:.\Generated_Source\PSoC4/TCPWM.c **** }
 443              		.loc 1 423 0
 444 003e BD46     		mov	sp, r7
 445 0040 05B0     		add	sp, sp, #20
 446              		@ sp needed
 447 0042 90BD     		pop	{r4, r7, pc}
 448              	.L25:
 449              		.align	2
 450              	.L24:
 451 0044 00010540 		.word	1074069760
 452 0048 FFFFFBFF 		.word	-262145
 453              		.cfi_endproc
 454              	.LFE7:
 455              		.size	TCPWM_SetOneShot, .-TCPWM_SetOneShot
 456              		.section	.text.TCPWM_SetPWMMode,"ax",%progbits
 457              		.align	2
 458              		.global	TCPWM_SetPWMMode
 459              		.code	16
 460              		.thumb_func
 461              		.type	TCPWM_SetPWMMode, %function
 462              	TCPWM_SetPWMMode:
 463              	.LFB8:
 424:.\Generated_Source\PSoC4/TCPWM.c **** 
 425:.\Generated_Source\PSoC4/TCPWM.c **** 
 426:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMMode
 428:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/TCPWM.c **** *
 430:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 431:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/TCPWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/TCPWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/TCPWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/TCPWM.c **** *  the mode.
 436:.\Generated_Source\PSoC4/TCPWM.c **** *
 437:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 438:.\Generated_Source\PSoC4/TCPWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/TCPWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 441:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/TCPWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/TCPWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_SET       - Set on underflow
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 17


 450:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/TCPWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/TCPWM.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/TCPWM.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/TCPWM.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/TCPWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/TCPWM.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/TCPWM.c **** *
 462:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 463:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 464:.\Generated_Source\PSoC4/TCPWM.c **** *
 465:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/TCPWM.c **** {
 464              		.loc 1 467 0
 465              		.cfi_startproc
 466 0000 80B5     		push	{r7, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 7, -8
 469              		.cfi_offset 14, -4
 470 0002 82B0     		sub	sp, sp, #8
 471              		.cfi_def_cfa_offset 16
 472 0004 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 474 0006 7860     		str	r0, [r7, #4]
 468:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL2_REG = (modeMask & TCPWM_6BIT_MASK);
 475              		.loc 1 468 0
 476 0008 034B     		ldr	r3, .L27
 477 000a 7968     		ldr	r1, [r7, #4]
 478 000c 3F22     		mov	r2, #63
 479 000e 0A40     		and	r2, r1
 480 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/TCPWM.c **** }
 481              		.loc 1 469 0
 482 0012 BD46     		mov	sp, r7
 483 0014 02B0     		add	sp, sp, #8
 484              		@ sp needed
 485 0016 80BD     		pop	{r7, pc}
 486              	.L28:
 487              		.align	2
 488              	.L27:
 489 0018 28010540 		.word	1074069800
 490              		.cfi_endproc
 491              	.LFE8:
 492              		.size	TCPWM_SetPWMMode, .-TCPWM_SetPWMMode
 493              		.section	.text.TCPWM_SetPWMSyncKill,"ax",%progbits
 494              		.align	2
 495              		.global	TCPWM_SetPWMSyncKill
 496              		.code	16
 497              		.thumb_func
 498              		.type	TCPWM_SetPWMSyncKill, %function
 499              	TCPWM_SetPWMSyncKill:
 500              	.LFB9:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 18


 470:.\Generated_Source\PSoC4/TCPWM.c **** 
 471:.\Generated_Source\PSoC4/TCPWM.c **** 
 472:.\Generated_Source\PSoC4/TCPWM.c **** 
 473:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/TCPWM.c **** *
 477:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 478:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/TCPWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/TCPWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/TCPWM.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/TCPWM.c **** *
 483:.\Generated_Source\PSoC4/TCPWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/TCPWM.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/TCPWM.c **** *
 486:.\Generated_Source\PSoC4/TCPWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/TCPWM.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/TCPWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/TCPWM.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/TCPWM.c **** 
 491:.\Generated_Source\PSoC4/TCPWM.c **** *
 492:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 493:.\Generated_Source\PSoC4/TCPWM.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 495:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/TCPWM.c **** *
 498:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 499:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 500:.\Generated_Source\PSoC4/TCPWM.c **** *
 501:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/TCPWM.c **** {
 501              		.loc 1 503 0
 502              		.cfi_startproc
 503 0000 90B5     		push	{r4, r7, lr}
 504              		.cfi_def_cfa_offset 12
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 85B0     		sub	sp, sp, #20
 509              		.cfi_def_cfa_offset 32
 510 0004 00AF     		add	r7, sp, #0
 511              		.cfi_def_cfa_register 7
 512 0006 7860     		str	r0, [r7, #4]
 504:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/TCPWM.c **** 
 506:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 513              		.loc 1 506 0
 514 0008 3C1C     		mov	r4, r7
 515 000a 0F34     		add	r4, r4, #15
 516 000c FFF7FEFF 		bl	CyEnterCriticalSection
 517 0010 031C     		mov	r3, r0
 518 0012 2370     		strb	r3, [r4]
 507:.\Generated_Source\PSoC4/TCPWM.c **** 
 508:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PWM_SYNC_KILL_MASK;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 19


 519              		.loc 1 508 0
 520 0014 0B4B     		ldr	r3, .L30
 521 0016 0B4A     		ldr	r2, .L30
 522 0018 1268     		ldr	r2, [r2]
 523 001a 0421     		mov	r1, #4
 524 001c 8A43     		bic	r2, r1
 525 001e 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1BIT_MASK)  <<
 526              		.loc 1 509 0
 527 0020 084B     		ldr	r3, .L30
 528 0022 084A     		ldr	r2, .L30
 529 0024 1168     		ldr	r1, [r2]
 530 0026 7868     		ldr	r0, [r7, #4]
 531 0028 0122     		mov	r2, #1
 532 002a 0240     		and	r2, r0
 533 002c 9200     		lsl	r2, r2, #2
 534 002e 0A43     		orr	r2, r1
 535 0030 1A60     		str	r2, [r3]
 510:.\Generated_Source\PSoC4/TCPWM.c ****                                                TCPWM_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/TCPWM.c **** 
 512:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 536              		.loc 1 512 0
 537 0032 3B1C     		mov	r3, r7
 538 0034 0F33     		add	r3, r3, #15
 539 0036 1B78     		ldrb	r3, [r3]
 540 0038 181C     		mov	r0, r3
 541 003a FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/TCPWM.c **** }
 542              		.loc 1 513 0
 543 003e BD46     		mov	sp, r7
 544 0040 05B0     		add	sp, sp, #20
 545              		@ sp needed
 546 0042 90BD     		pop	{r4, r7, pc}
 547              	.L31:
 548              		.align	2
 549              	.L30:
 550 0044 00010540 		.word	1074069760
 551              		.cfi_endproc
 552              	.LFE9:
 553              		.size	TCPWM_SetPWMSyncKill, .-TCPWM_SetPWMSyncKill
 554              		.section	.text.TCPWM_SetPWMStopOnKill,"ax",%progbits
 555              		.align	2
 556              		.global	TCPWM_SetPWMStopOnKill
 557              		.code	16
 558              		.thumb_func
 559              		.type	TCPWM_SetPWMStopOnKill, %function
 560              	TCPWM_SetPWMStopOnKill:
 561              	.LFB10:
 514:.\Generated_Source\PSoC4/TCPWM.c **** 
 515:.\Generated_Source\PSoC4/TCPWM.c **** 
 516:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/TCPWM.c **** *
 520:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 521:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/TCPWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 20


 523:.\Generated_Source\PSoC4/TCPWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/TCPWM.c **** *
 525:.\Generated_Source\PSoC4/TCPWM.c **** *
 526:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 527:.\Generated_Source\PSoC4/TCPWM.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 529:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/TCPWM.c **** *
 532:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 533:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 534:.\Generated_Source\PSoC4/TCPWM.c **** *
 535:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/TCPWM.c **** {
 562              		.loc 1 537 0
 563              		.cfi_startproc
 564 0000 90B5     		push	{r4, r7, lr}
 565              		.cfi_def_cfa_offset 12
 566              		.cfi_offset 4, -12
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 85B0     		sub	sp, sp, #20
 570              		.cfi_def_cfa_offset 32
 571 0004 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 538:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/TCPWM.c **** 
 540:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 574              		.loc 1 540 0
 575 0008 3C1C     		mov	r4, r7
 576 000a 0F34     		add	r4, r4, #15
 577 000c FFF7FEFF 		bl	CyEnterCriticalSection
 578 0010 031C     		mov	r3, r0
 579 0012 2370     		strb	r3, [r4]
 541:.\Generated_Source\PSoC4/TCPWM.c **** 
 542:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PWM_STOP_KILL_MASK;
 580              		.loc 1 542 0
 581 0014 0B4B     		ldr	r3, .L33
 582 0016 0B4A     		ldr	r2, .L33
 583 0018 1268     		ldr	r2, [r2]
 584 001a 0821     		mov	r1, #8
 585 001c 8A43     		bic	r2, r1
 586 001e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1BIT_MASK)  <<
 587              		.loc 1 543 0
 588 0020 084B     		ldr	r3, .L33
 589 0022 084A     		ldr	r2, .L33
 590 0024 1168     		ldr	r1, [r2]
 591 0026 7868     		ldr	r0, [r7, #4]
 592 0028 0122     		mov	r2, #1
 593 002a 0240     		and	r2, r0
 594 002c D200     		lsl	r2, r2, #3
 595 002e 0A43     		orr	r2, r1
 596 0030 1A60     		str	r2, [r3]
 544:.\Generated_Source\PSoC4/TCPWM.c ****                                                          TCPWM_PWM_STOP_KILL_SHIFT));
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 21


 545:.\Generated_Source\PSoC4/TCPWM.c **** 
 546:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 597              		.loc 1 546 0
 598 0032 3B1C     		mov	r3, r7
 599 0034 0F33     		add	r3, r3, #15
 600 0036 1B78     		ldrb	r3, [r3]
 601 0038 181C     		mov	r0, r3
 602 003a FFF7FEFF 		bl	CyExitCriticalSection
 547:.\Generated_Source\PSoC4/TCPWM.c **** }
 603              		.loc 1 547 0
 604 003e BD46     		mov	sp, r7
 605 0040 05B0     		add	sp, sp, #20
 606              		@ sp needed
 607 0042 90BD     		pop	{r4, r7, pc}
 608              	.L34:
 609              		.align	2
 610              	.L33:
 611 0044 00010540 		.word	1074069760
 612              		.cfi_endproc
 613              	.LFE10:
 614              		.size	TCPWM_SetPWMStopOnKill, .-TCPWM_SetPWMStopOnKill
 615              		.section	.text.TCPWM_SetPWMDeadTime,"ax",%progbits
 616              		.align	2
 617              		.global	TCPWM_SetPWMDeadTime
 618              		.code	16
 619              		.thumb_func
 620              		.type	TCPWM_SetPWMDeadTime, %function
 621              	TCPWM_SetPWMDeadTime:
 622              	.LFB11:
 548:.\Generated_Source\PSoC4/TCPWM.c **** 
 549:.\Generated_Source\PSoC4/TCPWM.c **** 
 550:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/TCPWM.c **** *
 554:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 555:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/TCPWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/TCPWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/TCPWM.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/TCPWM.c **** 
 560:.\Generated_Source\PSoC4/TCPWM.c **** *
 561:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 562:.\Generated_Source\PSoC4/TCPWM.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/TCPWM.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/TCPWM.c **** *
 565:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 566:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 567:.\Generated_Source\PSoC4/TCPWM.c **** *
 568:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/TCPWM.c **** {
 623              		.loc 1 570 0
 624              		.cfi_startproc
 625 0000 90B5     		push	{r4, r7, lr}
 626              		.cfi_def_cfa_offset 12
 627              		.cfi_offset 4, -12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 22


 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 85B0     		sub	sp, sp, #20
 631              		.cfi_def_cfa_offset 32
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 571:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/TCPWM.c **** 
 573:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 635              		.loc 1 573 0
 636 0008 3C1C     		mov	r4, r7
 637 000a 0F34     		add	r4, r4, #15
 638 000c FFF7FEFF 		bl	CyEnterCriticalSection
 639 0010 031C     		mov	r3, r0
 640 0012 2370     		strb	r3, [r4]
 574:.\Generated_Source\PSoC4/TCPWM.c **** 
 575:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_PRESCALER_MASK;
 641              		.loc 1 575 0
 642 0014 0B4B     		ldr	r3, .L36
 643 0016 0B4A     		ldr	r2, .L36
 644 0018 1168     		ldr	r1, [r2]
 645 001a 0B4A     		ldr	r2, .L36+4
 646 001c 0A40     		and	r2, r1
 647 001e 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((deadTime & TCPWM_8BIT_MASK) <<
 648              		.loc 1 576 0
 649 0020 084B     		ldr	r3, .L36
 650 0022 084A     		ldr	r2, .L36
 651 0024 1168     		ldr	r1, [r2]
 652 0026 7A68     		ldr	r2, [r7, #4]
 653 0028 1202     		lsl	r2, r2, #8
 654 002a 1204     		lsl	r2, r2, #16
 655 002c 120C     		lsr	r2, r2, #16
 656 002e 0A43     		orr	r2, r1
 657 0030 1A60     		str	r2, [r3]
 577:.\Generated_Source\PSoC4/TCPWM.c ****                                                           TCPWM_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/TCPWM.c **** 
 579:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 658              		.loc 1 579 0
 659 0032 3B1C     		mov	r3, r7
 660 0034 0F33     		add	r3, r3, #15
 661 0036 1B78     		ldrb	r3, [r3]
 662 0038 181C     		mov	r0, r3
 663 003a FFF7FEFF 		bl	CyExitCriticalSection
 580:.\Generated_Source\PSoC4/TCPWM.c **** }
 664              		.loc 1 580 0
 665 003e BD46     		mov	sp, r7
 666 0040 05B0     		add	sp, sp, #20
 667              		@ sp needed
 668 0042 90BD     		pop	{r4, r7, pc}
 669              	.L37:
 670              		.align	2
 671              	.L36:
 672 0044 00010540 		.word	1074069760
 673 0048 FF00FFFF 		.word	-65281
 674              		.cfi_endproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 23


 675              	.LFE11:
 676              		.size	TCPWM_SetPWMDeadTime, .-TCPWM_SetPWMDeadTime
 677              		.section	.text.TCPWM_SetPWMInvert,"ax",%progbits
 678              		.align	2
 679              		.global	TCPWM_SetPWMInvert
 680              		.code	16
 681              		.thumb_func
 682              		.type	TCPWM_SetPWMInvert, %function
 683              	TCPWM_SetPWMInvert:
 684              	.LFB12:
 581:.\Generated_Source\PSoC4/TCPWM.c **** 
 582:.\Generated_Source\PSoC4/TCPWM.c **** 
 583:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPWMInvert
 585:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/TCPWM.c **** *
 587:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 588:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/TCPWM.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/TCPWM.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/TCPWM.c **** *
 592:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 593:.\Generated_Source\PSoC4/TCPWM.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 595:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/TCPWM.c **** *         - TCPWM_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/TCPWM.c **** *
 598:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 599:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 600:.\Generated_Source\PSoC4/TCPWM.c **** *
 601:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/TCPWM.c **** {
 685              		.loc 1 603 0
 686              		.cfi_startproc
 687 0000 90B5     		push	{r4, r7, lr}
 688              		.cfi_def_cfa_offset 12
 689              		.cfi_offset 4, -12
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 85B0     		sub	sp, sp, #20
 693              		.cfi_def_cfa_offset 32
 694 0004 00AF     		add	r7, sp, #0
 695              		.cfi_def_cfa_register 7
 696 0006 7860     		str	r0, [r7, #4]
 604:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/TCPWM.c **** 
 606:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 697              		.loc 1 606 0
 698 0008 3C1C     		mov	r4, r7
 699 000a 0F34     		add	r4, r4, #15
 700 000c FFF7FEFF 		bl	CyEnterCriticalSection
 701 0010 031C     		mov	r3, r0
 702 0012 2370     		strb	r3, [r4]
 607:.\Generated_Source\PSoC4/TCPWM.c **** 
 608:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_INV_OUT_MASK;
 703              		.loc 1 608 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 24


 704 0014 0A4B     		ldr	r3, .L39
 705 0016 0A4A     		ldr	r2, .L39
 706 0018 1168     		ldr	r1, [r2]
 707 001a 0A4A     		ldr	r2, .L39+4
 708 001c 0A40     		and	r2, r1
 709 001e 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= mask;
 710              		.loc 1 609 0
 711 0020 074B     		ldr	r3, .L39
 712 0022 074A     		ldr	r2, .L39
 713 0024 1168     		ldr	r1, [r2]
 714 0026 7A68     		ldr	r2, [r7, #4]
 715 0028 0A43     		orr	r2, r1
 716 002a 1A60     		str	r2, [r3]
 610:.\Generated_Source\PSoC4/TCPWM.c **** 
 611:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 717              		.loc 1 611 0
 718 002c 3B1C     		mov	r3, r7
 719 002e 0F33     		add	r3, r3, #15
 720 0030 1B78     		ldrb	r3, [r3]
 721 0032 181C     		mov	r0, r3
 722 0034 FFF7FEFF 		bl	CyExitCriticalSection
 612:.\Generated_Source\PSoC4/TCPWM.c **** }
 723              		.loc 1 612 0
 724 0038 BD46     		mov	sp, r7
 725 003a 05B0     		add	sp, sp, #20
 726              		@ sp needed
 727 003c 90BD     		pop	{r4, r7, pc}
 728              	.L40:
 729 003e C046     		.align	2
 730              	.L39:
 731 0040 00010540 		.word	1074069760
 732 0044 FFFFCFFF 		.word	-3145729
 733              		.cfi_endproc
 734              	.LFE12:
 735              		.size	TCPWM_SetPWMInvert, .-TCPWM_SetPWMInvert
 736              		.section	.text.TCPWM_WriteCounter,"ax",%progbits
 737              		.align	2
 738              		.global	TCPWM_WriteCounter
 739              		.code	16
 740              		.thumb_func
 741              		.type	TCPWM_WriteCounter, %function
 742              	TCPWM_WriteCounter:
 743              	.LFB13:
 613:.\Generated_Source\PSoC4/TCPWM.c **** 
 614:.\Generated_Source\PSoC4/TCPWM.c **** 
 615:.\Generated_Source\PSoC4/TCPWM.c **** 
 616:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WriteCounter
 618:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/TCPWM.c **** *
 620:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 621:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/TCPWM.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/TCPWM.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/TCPWM.c **** *
 625:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 25


 626:.\Generated_Source\PSoC4/TCPWM.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/TCPWM.c **** *
 628:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 629:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 630:.\Generated_Source\PSoC4/TCPWM.c **** *
 631:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/TCPWM.c **** {
 744              		.loc 1 633 0
 745              		.cfi_startproc
 746 0000 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 82B0     		sub	sp, sp, #8
 751              		.cfi_def_cfa_offset 16
 752 0004 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 634:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_COUNTER_REG = (count & TCPWM_16BIT_MASK);
 755              		.loc 1 634 0
 756 0008 034B     		ldr	r3, .L42
 757 000a 7A68     		ldr	r2, [r7, #4]
 758 000c 1204     		lsl	r2, r2, #16
 759 000e 120C     		lsr	r2, r2, #16
 760 0010 1A60     		str	r2, [r3]
 635:.\Generated_Source\PSoC4/TCPWM.c **** }
 761              		.loc 1 635 0
 762 0012 BD46     		mov	sp, r7
 763 0014 02B0     		add	sp, sp, #8
 764              		@ sp needed
 765 0016 80BD     		pop	{r7, pc}
 766              	.L43:
 767              		.align	2
 768              	.L42:
 769 0018 08010540 		.word	1074069768
 770              		.cfi_endproc
 771              	.LFE13:
 772              		.size	TCPWM_WriteCounter, .-TCPWM_WriteCounter
 773              		.section	.text.TCPWM_ReadCounter,"ax",%progbits
 774              		.align	2
 775              		.global	TCPWM_ReadCounter
 776              		.code	16
 777              		.thumb_func
 778              		.type	TCPWM_ReadCounter, %function
 779              	TCPWM_ReadCounter:
 780              	.LFB14:
 636:.\Generated_Source\PSoC4/TCPWM.c **** 
 637:.\Generated_Source\PSoC4/TCPWM.c **** 
 638:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCounter
 640:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/TCPWM.c **** *
 642:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 643:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/TCPWM.c **** *
 645:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 26


 646:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 647:.\Generated_Source\PSoC4/TCPWM.c **** *
 648:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 649:.\Generated_Source\PSoC4/TCPWM.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/TCPWM.c **** *
 651:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCounter(void)
 653:.\Generated_Source\PSoC4/TCPWM.c **** {
 781              		.loc 1 653 0
 782              		.cfi_startproc
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 654:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_COUNTER_REG & TCPWM_16BIT_MASK);
 789              		.loc 1 654 0
 790 0004 034B     		ldr	r3, .L46
 791 0006 1B68     		ldr	r3, [r3]
 792 0008 1B04     		lsl	r3, r3, #16
 793 000a 1B0C     		lsr	r3, r3, #16
 655:.\Generated_Source\PSoC4/TCPWM.c **** }
 794              		.loc 1 655 0
 795 000c 181C     		mov	r0, r3
 796 000e BD46     		mov	sp, r7
 797              		@ sp needed
 798 0010 80BD     		pop	{r7, pc}
 799              	.L47:
 800 0012 C046     		.align	2
 801              	.L46:
 802 0014 08010540 		.word	1074069768
 803              		.cfi_endproc
 804              	.LFE14:
 805              		.size	TCPWM_ReadCounter, .-TCPWM_ReadCounter
 806              		.section	.text.TCPWM_SetCounterMode,"ax",%progbits
 807              		.align	2
 808              		.global	TCPWM_SetCounterMode
 809              		.code	16
 810              		.thumb_func
 811              		.type	TCPWM_SetCounterMode, %function
 812              	TCPWM_SetCounterMode:
 813              	.LFB15:
 656:.\Generated_Source\PSoC4/TCPWM.c **** 
 657:.\Generated_Source\PSoC4/TCPWM.c **** 
 658:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCounterMode
 660:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/TCPWM.c **** *
 662:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 663:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/TCPWM.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/TCPWM.c **** *
 666:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 667:.\Generated_Source\PSoC4/TCPWM.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 669:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_UP       - Counts up
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 27


 670:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/TCPWM.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/TCPWM.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/TCPWM.c **** *                                         and period
 676:.\Generated_Source\PSoC4/TCPWM.c **** *
 677:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 678:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 679:.\Generated_Source\PSoC4/TCPWM.c **** *
 680:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/TCPWM.c **** {
 814              		.loc 1 682 0
 815              		.cfi_startproc
 816 0000 90B5     		push	{r4, r7, lr}
 817              		.cfi_def_cfa_offset 12
 818              		.cfi_offset 4, -12
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 85B0     		sub	sp, sp, #20
 822              		.cfi_def_cfa_offset 32
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 683:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/TCPWM.c **** 
 685:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 826              		.loc 1 685 0
 827 0008 3C1C     		mov	r4, r7
 828 000a 0F34     		add	r4, r4, #15
 829 000c FFF7FEFF 		bl	CyEnterCriticalSection
 830 0010 031C     		mov	r3, r0
 831 0012 2370     		strb	r3, [r4]
 686:.\Generated_Source\PSoC4/TCPWM.c **** 
 687:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_UPDOWN_MASK;
 832              		.loc 1 687 0
 833 0014 0A4B     		ldr	r3, .L49
 834 0016 0A4A     		ldr	r2, .L49
 835 0018 1168     		ldr	r1, [r2]
 836 001a 0A4A     		ldr	r2, .L49+4
 837 001c 0A40     		and	r2, r1
 838 001e 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= counterMode;
 839              		.loc 1 688 0
 840 0020 074B     		ldr	r3, .L49
 841 0022 074A     		ldr	r2, .L49
 842 0024 1168     		ldr	r1, [r2]
 843 0026 7A68     		ldr	r2, [r7, #4]
 844 0028 0A43     		orr	r2, r1
 845 002a 1A60     		str	r2, [r3]
 689:.\Generated_Source\PSoC4/TCPWM.c **** 
 690:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 846              		.loc 1 690 0
 847 002c 3B1C     		mov	r3, r7
 848 002e 0F33     		add	r3, r3, #15
 849 0030 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 28


 850 0032 181C     		mov	r0, r3
 851 0034 FFF7FEFF 		bl	CyExitCriticalSection
 691:.\Generated_Source\PSoC4/TCPWM.c **** }
 852              		.loc 1 691 0
 853 0038 BD46     		mov	sp, r7
 854 003a 05B0     		add	sp, sp, #20
 855              		@ sp needed
 856 003c 90BD     		pop	{r4, r7, pc}
 857              	.L50:
 858 003e C046     		.align	2
 859              	.L49:
 860 0040 00010540 		.word	1074069760
 861 0044 FFFFFCFF 		.word	-196609
 862              		.cfi_endproc
 863              	.LFE15:
 864              		.size	TCPWM_SetCounterMode, .-TCPWM_SetCounterMode
 865              		.section	.text.TCPWM_WritePeriod,"ax",%progbits
 866              		.align	2
 867              		.global	TCPWM_WritePeriod
 868              		.code	16
 869              		.thumb_func
 870              		.type	TCPWM_WritePeriod, %function
 871              	TCPWM_WritePeriod:
 872              	.LFB16:
 692:.\Generated_Source\PSoC4/TCPWM.c **** 
 693:.\Generated_Source\PSoC4/TCPWM.c **** 
 694:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WritePeriod
 696:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/TCPWM.c **** *
 698:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 699:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/TCPWM.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/TCPWM.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/TCPWM.c **** *
 703:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 704:.\Generated_Source\PSoC4/TCPWM.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/TCPWM.c **** *
 706:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 707:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 708:.\Generated_Source\PSoC4/TCPWM.c **** *
 709:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/TCPWM.c **** {
 873              		.loc 1 711 0
 874              		.cfi_startproc
 875 0000 80B5     		push	{r7, lr}
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 7, -8
 878              		.cfi_offset 14, -4
 879 0002 82B0     		sub	sp, sp, #8
 880              		.cfi_def_cfa_offset 16
 881 0004 00AF     		add	r7, sp, #0
 882              		.cfi_def_cfa_register 7
 883 0006 7860     		str	r0, [r7, #4]
 712:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_PERIOD_REG = (period & TCPWM_16BIT_MASK);
 884              		.loc 1 712 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 29


 885 0008 034B     		ldr	r3, .L52
 886 000a 7A68     		ldr	r2, [r7, #4]
 887 000c 1204     		lsl	r2, r2, #16
 888 000e 120C     		lsr	r2, r2, #16
 889 0010 1A60     		str	r2, [r3]
 713:.\Generated_Source\PSoC4/TCPWM.c **** }
 890              		.loc 1 713 0
 891 0012 BD46     		mov	sp, r7
 892 0014 02B0     		add	sp, sp, #8
 893              		@ sp needed
 894 0016 80BD     		pop	{r7, pc}
 895              	.L53:
 896              		.align	2
 897              	.L52:
 898 0018 14010540 		.word	1074069780
 899              		.cfi_endproc
 900              	.LFE16:
 901              		.size	TCPWM_WritePeriod, .-TCPWM_WritePeriod
 902              		.section	.text.TCPWM_ReadPeriod,"ax",%progbits
 903              		.align	2
 904              		.global	TCPWM_ReadPeriod
 905              		.code	16
 906              		.thumb_func
 907              		.type	TCPWM_ReadPeriod, %function
 908              	TCPWM_ReadPeriod:
 909              	.LFB17:
 714:.\Generated_Source\PSoC4/TCPWM.c **** 
 715:.\Generated_Source\PSoC4/TCPWM.c **** 
 716:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadPeriod
 718:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/TCPWM.c **** *
 720:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 721:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/TCPWM.c **** *
 723:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 725:.\Generated_Source\PSoC4/TCPWM.c **** *
 726:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 727:.\Generated_Source\PSoC4/TCPWM.c **** *  Period value
 728:.\Generated_Source\PSoC4/TCPWM.c **** *
 729:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/TCPWM.c **** {
 910              		.loc 1 731 0
 911              		.cfi_startproc
 912 0000 80B5     		push	{r7, lr}
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
 732:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_PERIOD_REG & TCPWM_16BIT_MASK);
 918              		.loc 1 732 0
 919 0004 034B     		ldr	r3, .L56
 920 0006 1B68     		ldr	r3, [r3]
 921 0008 1B04     		lsl	r3, r3, #16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 30


 922 000a 1B0C     		lsr	r3, r3, #16
 733:.\Generated_Source\PSoC4/TCPWM.c **** }
 923              		.loc 1 733 0
 924 000c 181C     		mov	r0, r3
 925 000e BD46     		mov	sp, r7
 926              		@ sp needed
 927 0010 80BD     		pop	{r7, pc}
 928              	.L57:
 929 0012 C046     		.align	2
 930              	.L56:
 931 0014 14010540 		.word	1074069780
 932              		.cfi_endproc
 933              	.LFE17:
 934              		.size	TCPWM_ReadPeriod, .-TCPWM_ReadPeriod
 935              		.section	.text.TCPWM_SetCompareSwap,"ax",%progbits
 936              		.align	2
 937              		.global	TCPWM_SetCompareSwap
 938              		.code	16
 939              		.thumb_func
 940              		.type	TCPWM_SetCompareSwap, %function
 941              	TCPWM_SetCompareSwap:
 942              	.LFB18:
 734:.\Generated_Source\PSoC4/TCPWM.c **** 
 735:.\Generated_Source\PSoC4/TCPWM.c **** 
 736:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCompareSwap
 738:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/TCPWM.c **** *
 740:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 741:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/TCPWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/TCPWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/TCPWM.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/TCPWM.c **** *
 746:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 747:.\Generated_Source\PSoC4/TCPWM.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 749:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/TCPWM.c **** *
 752:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 753:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 754:.\Generated_Source\PSoC4/TCPWM.c **** *
 755:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/TCPWM.c **** {
 943              		.loc 1 757 0
 944              		.cfi_startproc
 945 0000 90B5     		push	{r4, r7, lr}
 946              		.cfi_def_cfa_offset 12
 947              		.cfi_offset 4, -12
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 0002 85B0     		sub	sp, sp, #20
 951              		.cfi_def_cfa_offset 32
 952 0004 00AF     		add	r7, sp, #0
 953              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 31


 954 0006 7860     		str	r0, [r7, #4]
 758:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/TCPWM.c **** 
 760:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 955              		.loc 1 760 0
 956 0008 3C1C     		mov	r4, r7
 957 000a 0F34     		add	r4, r4, #15
 958 000c FFF7FEFF 		bl	CyEnterCriticalSection
 959 0010 031C     		mov	r3, r0
 960 0012 2370     		strb	r3, [r4]
 761:.\Generated_Source\PSoC4/TCPWM.c **** 
 762:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_RELOAD_CC_MASK;
 961              		.loc 1 762 0
 962 0014 0B4B     		ldr	r3, .L59
 963 0016 0B4A     		ldr	r2, .L59
 964 0018 1268     		ldr	r2, [r2]
 965 001a 0121     		mov	r1, #1
 966 001c 8A43     		bic	r2, r1
 967 001e 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= (swapEnable & TCPWM_1BIT_MASK);
 968              		.loc 1 763 0
 969 0020 084B     		ldr	r3, .L59
 970 0022 084A     		ldr	r2, .L59
 971 0024 1168     		ldr	r1, [r2]
 972 0026 7868     		ldr	r0, [r7, #4]
 973 0028 0122     		mov	r2, #1
 974 002a 0240     		and	r2, r0
 975 002c 0A43     		orr	r2, r1
 976 002e 1A60     		str	r2, [r3]
 764:.\Generated_Source\PSoC4/TCPWM.c **** 
 765:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 977              		.loc 1 765 0
 978 0030 3B1C     		mov	r3, r7
 979 0032 0F33     		add	r3, r3, #15
 980 0034 1B78     		ldrb	r3, [r3]
 981 0036 181C     		mov	r0, r3
 982 0038 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC4/TCPWM.c **** }
 983              		.loc 1 766 0
 984 003c BD46     		mov	sp, r7
 985 003e 05B0     		add	sp, sp, #20
 986              		@ sp needed
 987 0040 90BD     		pop	{r4, r7, pc}
 988              	.L60:
 989 0042 C046     		.align	2
 990              	.L59:
 991 0044 00010540 		.word	1074069760
 992              		.cfi_endproc
 993              	.LFE18:
 994              		.size	TCPWM_SetCompareSwap, .-TCPWM_SetCompareSwap
 995              		.section	.text.TCPWM_WritePeriodBuf,"ax",%progbits
 996              		.align	2
 997              		.global	TCPWM_WritePeriodBuf
 998              		.code	16
 999              		.thumb_func
 1000              		.type	TCPWM_WritePeriodBuf, %function
 1001              	TCPWM_WritePeriodBuf:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 32


 1002              	.LFB19:
 767:.\Generated_Source\PSoC4/TCPWM.c **** 
 768:.\Generated_Source\PSoC4/TCPWM.c **** 
 769:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WritePeriodBuf
 771:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/TCPWM.c **** *
 773:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 774:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/TCPWM.c **** *
 776:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 777:.\Generated_Source\PSoC4/TCPWM.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/TCPWM.c **** *
 779:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 780:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 781:.\Generated_Source\PSoC4/TCPWM.c **** *
 782:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/TCPWM.c **** {
 1003              		.loc 1 784 0
 1004              		.cfi_startproc
 1005 0000 80B5     		push	{r7, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 82B0     		sub	sp, sp, #8
 1010              		.cfi_def_cfa_offset 16
 1011 0004 00AF     		add	r7, sp, #0
 1012              		.cfi_def_cfa_register 7
 1013 0006 7860     		str	r0, [r7, #4]
 785:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_PERIOD_BUF_REG = (periodBuf & TCPWM_16BIT_MASK);
 1014              		.loc 1 785 0
 1015 0008 034B     		ldr	r3, .L62
 1016 000a 7A68     		ldr	r2, [r7, #4]
 1017 000c 1204     		lsl	r2, r2, #16
 1018 000e 120C     		lsr	r2, r2, #16
 1019 0010 1A60     		str	r2, [r3]
 786:.\Generated_Source\PSoC4/TCPWM.c **** }
 1020              		.loc 1 786 0
 1021 0012 BD46     		mov	sp, r7
 1022 0014 02B0     		add	sp, sp, #8
 1023              		@ sp needed
 1024 0016 80BD     		pop	{r7, pc}
 1025              	.L63:
 1026              		.align	2
 1027              	.L62:
 1028 0018 18010540 		.word	1074069784
 1029              		.cfi_endproc
 1030              	.LFE19:
 1031              		.size	TCPWM_WritePeriodBuf, .-TCPWM_WritePeriodBuf
 1032              		.section	.text.TCPWM_ReadPeriodBuf,"ax",%progbits
 1033              		.align	2
 1034              		.global	TCPWM_ReadPeriodBuf
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	TCPWM_ReadPeriodBuf, %function
 1038              	TCPWM_ReadPeriodBuf:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 33


 1039              	.LFB20:
 787:.\Generated_Source\PSoC4/TCPWM.c **** 
 788:.\Generated_Source\PSoC4/TCPWM.c **** 
 789:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/TCPWM.c **** *
 793:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 794:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/TCPWM.c **** *
 796:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 798:.\Generated_Source\PSoC4/TCPWM.c **** *
 799:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 800:.\Generated_Source\PSoC4/TCPWM.c **** *  Period value
 801:.\Generated_Source\PSoC4/TCPWM.c **** *
 802:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/TCPWM.c **** {
 1040              		.loc 1 804 0
 1041              		.cfi_startproc
 1042 0000 80B5     		push	{r7, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 1046 0002 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 805:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_PERIOD_BUF_REG & TCPWM_16BIT_MASK);
 1048              		.loc 1 805 0
 1049 0004 034B     		ldr	r3, .L66
 1050 0006 1B68     		ldr	r3, [r3]
 1051 0008 1B04     		lsl	r3, r3, #16
 1052 000a 1B0C     		lsr	r3, r3, #16
 806:.\Generated_Source\PSoC4/TCPWM.c **** }
 1053              		.loc 1 806 0
 1054 000c 181C     		mov	r0, r3
 1055 000e BD46     		mov	sp, r7
 1056              		@ sp needed
 1057 0010 80BD     		pop	{r7, pc}
 1058              	.L67:
 1059 0012 C046     		.align	2
 1060              	.L66:
 1061 0014 18010540 		.word	1074069784
 1062              		.cfi_endproc
 1063              	.LFE20:
 1064              		.size	TCPWM_ReadPeriodBuf, .-TCPWM_ReadPeriodBuf
 1065              		.section	.text.TCPWM_SetPeriodSwap,"ax",%progbits
 1066              		.align	2
 1067              		.global	TCPWM_SetPeriodSwap
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	TCPWM_SetPeriodSwap, %function
 1071              	TCPWM_SetPeriodSwap:
 1072              	.LFB21:
 807:.\Generated_Source\PSoC4/TCPWM.c **** 
 808:.\Generated_Source\PSoC4/TCPWM.c **** 
 809:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 34


 810:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetPeriodSwap
 811:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/TCPWM.c **** *
 813:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 814:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/TCPWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/TCPWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/TCPWM.c **** *  switch event.
 818:.\Generated_Source\PSoC4/TCPWM.c **** *
 819:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 820:.\Generated_Source\PSoC4/TCPWM.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
 822:.\Generated_Source\PSoC4/TCPWM.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/TCPWM.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/TCPWM.c **** *
 825:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 826:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 827:.\Generated_Source\PSoC4/TCPWM.c **** *
 828:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/TCPWM.c **** {
 1073              		.loc 1 830 0
 1074              		.cfi_startproc
 1075 0000 90B5     		push	{r4, r7, lr}
 1076              		.cfi_def_cfa_offset 12
 1077              		.cfi_offset 4, -12
 1078              		.cfi_offset 7, -8
 1079              		.cfi_offset 14, -4
 1080 0002 85B0     		sub	sp, sp, #20
 1081              		.cfi_def_cfa_offset 32
 1082 0004 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
 1084 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/TCPWM.c **** 
 833:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1085              		.loc 1 833 0
 1086 0008 3C1C     		mov	r4, r7
 1087 000a 0F34     		add	r4, r4, #15
 1088 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1089 0010 031C     		mov	r3, r0
 1090 0012 2370     		strb	r3, [r4]
 834:.\Generated_Source\PSoC4/TCPWM.c **** 
 835:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG &= (uint32)~TCPWM_RELOAD_PERIOD_MASK;
 1091              		.loc 1 835 0
 1092 0014 0B4B     		ldr	r3, .L69
 1093 0016 0B4A     		ldr	r2, .L69
 1094 0018 1268     		ldr	r2, [r2]
 1095 001a 0221     		mov	r1, #2
 1096 001c 8A43     		bic	r2, r1
 1097 001e 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1BIT_MASK) <<
 1098              		.loc 1 836 0
 1099 0020 084B     		ldr	r3, .L69
 1100 0022 084A     		ldr	r2, .L69
 1101 0024 1168     		ldr	r1, [r2]
 1102 0026 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 35


 1103 0028 0122     		mov	r2, #1
 1104 002a 0240     		and	r2, r0
 1105 002c 5200     		lsl	r2, r2, #1
 1106 002e 0A43     		orr	r2, r1
 1107 0030 1A60     		str	r2, [r3]
 837:.\Generated_Source\PSoC4/TCPWM.c ****                                                             TCPWM_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/TCPWM.c **** 
 839:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1108              		.loc 1 839 0
 1109 0032 3B1C     		mov	r3, r7
 1110 0034 0F33     		add	r3, r3, #15
 1111 0036 1B78     		ldrb	r3, [r3]
 1112 0038 181C     		mov	r0, r3
 1113 003a FFF7FEFF 		bl	CyExitCriticalSection
 840:.\Generated_Source\PSoC4/TCPWM.c **** }
 1114              		.loc 1 840 0
 1115 003e BD46     		mov	sp, r7
 1116 0040 05B0     		add	sp, sp, #20
 1117              		@ sp needed
 1118 0042 90BD     		pop	{r4, r7, pc}
 1119              	.L70:
 1120              		.align	2
 1121              	.L69:
 1122 0044 00010540 		.word	1074069760
 1123              		.cfi_endproc
 1124              	.LFE21:
 1125              		.size	TCPWM_SetPeriodSwap, .-TCPWM_SetPeriodSwap
 1126              		.section	.text.TCPWM_WriteCompare,"ax",%progbits
 1127              		.align	2
 1128              		.global	TCPWM_WriteCompare
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	TCPWM_WriteCompare, %function
 1132              	TCPWM_WriteCompare:
 1133              	.LFB22:
 841:.\Generated_Source\PSoC4/TCPWM.c **** 
 842:.\Generated_Source\PSoC4/TCPWM.c **** 
 843:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WriteCompare
 845:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/TCPWM.c **** *
 847:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 848:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/TCPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/TCPWM.c **** *
 851:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 852:.\Generated_Source\PSoC4/TCPWM.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/TCPWM.c **** *
 854:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 855:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 856:.\Generated_Source\PSoC4/TCPWM.c **** *
 857:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/TCPWM.c **** {
 1134              		.loc 1 859 0
 1135              		.cfi_startproc
 1136 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 36


 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 1140 0002 82B0     		sub	sp, sp, #8
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
 860:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/TCPWM.c **** 
 864:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/TCPWM.c **** 
 867:.\Generated_Source\PSoC4/TCPWM.c ****         if (TCPWM__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/TCPWM.c ****         {
 869:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_COMP_CAP_REG = ((compare + 1u) & TCPWM_16BIT_MASK);
 870:.\Generated_Source\PSoC4/TCPWM.c ****         }
 871:.\Generated_Source\PSoC4/TCPWM.c ****         else if (TCPWM__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/TCPWM.c ****         {
 873:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_COMP_CAP_REG = ((compare - 1u) & TCPWM_16BIT_MASK);
 874:.\Generated_Source\PSoC4/TCPWM.c ****         }
 875:.\Generated_Source\PSoC4/TCPWM.c ****         else
 876:.\Generated_Source\PSoC4/TCPWM.c ****         {
 877:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_COMP_CAP_REG = (compare & TCPWM_16BIT_MASK);
 878:.\Generated_Source\PSoC4/TCPWM.c ****         }
 879:.\Generated_Source\PSoC4/TCPWM.c ****     #else
 880:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_COMP_CAP_REG = (compare & TCPWM_16BIT_MASK);
 1145              		.loc 1 880 0
 1146 0008 034B     		ldr	r3, .L72
 1147 000a 7A68     		ldr	r2, [r7, #4]
 1148 000c 1204     		lsl	r2, r2, #16
 1149 000e 120C     		lsr	r2, r2, #16
 1150 0010 1A60     		str	r2, [r3]
 881:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/TCPWM.c **** }
 1151              		.loc 1 882 0
 1152 0012 BD46     		mov	sp, r7
 1153 0014 02B0     		add	sp, sp, #8
 1154              		@ sp needed
 1155 0016 80BD     		pop	{r7, pc}
 1156              	.L73:
 1157              		.align	2
 1158              	.L72:
 1159 0018 0C010540 		.word	1074069772
 1160              		.cfi_endproc
 1161              	.LFE22:
 1162              		.size	TCPWM_WriteCompare, .-TCPWM_WriteCompare
 1163              		.section	.text.TCPWM_ReadCompare,"ax",%progbits
 1164              		.align	2
 1165              		.global	TCPWM_ReadCompare
 1166              		.code	16
 1167              		.thumb_func
 1168              		.type	TCPWM_ReadCompare, %function
 1169              	TCPWM_ReadCompare:
 1170              	.LFB23:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 37


 883:.\Generated_Source\PSoC4/TCPWM.c **** 
 884:.\Generated_Source\PSoC4/TCPWM.c **** 
 885:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCompare
 887:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/TCPWM.c **** *
 889:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 890:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/TCPWM.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/TCPWM.c **** *
 893:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 894:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 895:.\Generated_Source\PSoC4/TCPWM.c **** *
 896:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 897:.\Generated_Source\PSoC4/TCPWM.c **** *  Compare value
 898:.\Generated_Source\PSoC4/TCPWM.c **** *
 899:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/TCPWM.c **** {
 1171              		.loc 1 901 0
 1172              		.cfi_startproc
 1173 0000 80B5     		push	{r7, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/TCPWM.c **** 
 907:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/TCPWM.c **** 
 910:.\Generated_Source\PSoC4/TCPWM.c ****         if (TCPWM__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/TCPWM.c ****         {
 912:.\Generated_Source\PSoC4/TCPWM.c ****             regVal = ((TCPWM_COMP_CAP_REG - 1u) & TCPWM_16BIT_MASK);
 913:.\Generated_Source\PSoC4/TCPWM.c ****         }
 914:.\Generated_Source\PSoC4/TCPWM.c ****         else if (TCPWM__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/TCPWM.c ****         {
 916:.\Generated_Source\PSoC4/TCPWM.c ****             regVal = ((TCPWM_COMP_CAP_REG + 1u) & TCPWM_16BIT_MASK);
 917:.\Generated_Source\PSoC4/TCPWM.c ****         }
 918:.\Generated_Source\PSoC4/TCPWM.c ****         else
 919:.\Generated_Source\PSoC4/TCPWM.c ****         {
 920:.\Generated_Source\PSoC4/TCPWM.c ****             regVal = (TCPWM_COMP_CAP_REG & TCPWM_16BIT_MASK);
 921:.\Generated_Source\PSoC4/TCPWM.c ****         }
 922:.\Generated_Source\PSoC4/TCPWM.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/TCPWM.c ****     #else
 924:.\Generated_Source\PSoC4/TCPWM.c ****         return (TCPWM_COMP_CAP_REG & TCPWM_16BIT_MASK);
 1179              		.loc 1 924 0
 1180 0004 034B     		ldr	r3, .L76
 1181 0006 1B68     		ldr	r3, [r3]
 1182 0008 1B04     		lsl	r3, r3, #16
 1183 000a 1B0C     		lsr	r3, r3, #16
 925:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/TCPWM.c **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 38


 1184              		.loc 1 926 0
 1185 000c 181C     		mov	r0, r3
 1186 000e BD46     		mov	sp, r7
 1187              		@ sp needed
 1188 0010 80BD     		pop	{r7, pc}
 1189              	.L77:
 1190 0012 C046     		.align	2
 1191              	.L76:
 1192 0014 0C010540 		.word	1074069772
 1193              		.cfi_endproc
 1194              	.LFE23:
 1195              		.size	TCPWM_ReadCompare, .-TCPWM_ReadCompare
 1196              		.section	.text.TCPWM_WriteCompareBuf,"ax",%progbits
 1197              		.align	2
 1198              		.global	TCPWM_WriteCompareBuf
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	TCPWM_WriteCompareBuf, %function
 1202              	TCPWM_WriteCompareBuf:
 1203              	.LFB24:
 927:.\Generated_Source\PSoC4/TCPWM.c **** 
 928:.\Generated_Source\PSoC4/TCPWM.c **** 
 929:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_WriteCompareBuf
 931:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/TCPWM.c **** *
 933:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 934:.\Generated_Source\PSoC4/TCPWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/TCPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/TCPWM.c **** *
 937:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 938:.\Generated_Source\PSoC4/TCPWM.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/TCPWM.c **** *
 940:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 941:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 942:.\Generated_Source\PSoC4/TCPWM.c **** *
 943:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/TCPWM.c **** {
 1204              		.loc 1 945 0
 1205              		.cfi_startproc
 1206 0000 80B5     		push	{r7, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 7, -8
 1209              		.cfi_offset 14, -4
 1210 0002 82B0     		sub	sp, sp, #8
 1211              		.cfi_def_cfa_offset 16
 1212 0004 00AF     		add	r7, sp, #0
 1213              		.cfi_def_cfa_register 7
 1214 0006 7860     		str	r0, [r7, #4]
 946:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/TCPWM.c **** 
 950:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/TCPWM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 39


 953:.\Generated_Source\PSoC4/TCPWM.c ****         if (TCPWM__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/TCPWM.c ****         {
 955:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_COMP_CAP_BUF_REG = ((compareBuf + 1u) & TCPWM_16BIT_MASK);
 956:.\Generated_Source\PSoC4/TCPWM.c ****         }
 957:.\Generated_Source\PSoC4/TCPWM.c ****         else if (TCPWM__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/TCPWM.c ****         {
 959:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_COMP_CAP_BUF_REG = ((compareBuf - 1u) & TCPWM_16BIT_MASK);
 960:.\Generated_Source\PSoC4/TCPWM.c ****         }
 961:.\Generated_Source\PSoC4/TCPWM.c ****         else
 962:.\Generated_Source\PSoC4/TCPWM.c ****         {
 963:.\Generated_Source\PSoC4/TCPWM.c ****             TCPWM_COMP_CAP_BUF_REG = (compareBuf & TCPWM_16BIT_MASK);
 964:.\Generated_Source\PSoC4/TCPWM.c ****         }
 965:.\Generated_Source\PSoC4/TCPWM.c ****     #else
 966:.\Generated_Source\PSoC4/TCPWM.c ****         TCPWM_COMP_CAP_BUF_REG = (compareBuf & TCPWM_16BIT_MASK);
 1215              		.loc 1 966 0
 1216 0008 034B     		ldr	r3, .L79
 1217 000a 7A68     		ldr	r2, [r7, #4]
 1218 000c 1204     		lsl	r2, r2, #16
 1219 000e 120C     		lsr	r2, r2, #16
 1220 0010 1A60     		str	r2, [r3]
 967:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/TCPWM.c **** }
 1221              		.loc 1 968 0
 1222 0012 BD46     		mov	sp, r7
 1223 0014 02B0     		add	sp, sp, #8
 1224              		@ sp needed
 1225 0016 80BD     		pop	{r7, pc}
 1226              	.L80:
 1227              		.align	2
 1228              	.L79:
 1229 0018 10010540 		.word	1074069776
 1230              		.cfi_endproc
 1231              	.LFE24:
 1232              		.size	TCPWM_WriteCompareBuf, .-TCPWM_WriteCompareBuf
 1233              		.section	.text.TCPWM_ReadCompareBuf,"ax",%progbits
 1234              		.align	2
 1235              		.global	TCPWM_ReadCompareBuf
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	TCPWM_ReadCompareBuf, %function
 1239              	TCPWM_ReadCompareBuf:
 1240              	.LFB25:
 969:.\Generated_Source\PSoC4/TCPWM.c **** 
 970:.\Generated_Source\PSoC4/TCPWM.c **** 
 971:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCompareBuf
 973:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/TCPWM.c **** *
 975:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
 976:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/TCPWM.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/TCPWM.c **** *
 979:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
 980:.\Generated_Source\PSoC4/TCPWM.c **** *  None
 981:.\Generated_Source\PSoC4/TCPWM.c **** *
 982:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
 983:.\Generated_Source\PSoC4/TCPWM.c **** *  Compare buffer value
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 40


 984:.\Generated_Source\PSoC4/TCPWM.c **** *
 985:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/TCPWM.c **** {
 1241              		.loc 1 987 0
 1242              		.cfi_startproc
 1243 0000 80B5     		push	{r7, lr}
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 988:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/TCPWM.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/TCPWM.c **** 
 993:.\Generated_Source\PSoC4/TCPWM.c ****     #if (TCPWM_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/TCPWM.c ****         currentMode = ((TCPWM_CONTROL_REG & TCPWM_UPDOWN_MASK) >> TCPWM_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/TCPWM.c **** 
 996:.\Generated_Source\PSoC4/TCPWM.c ****         if (TCPWM__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/TCPWM.c ****         {
 998:.\Generated_Source\PSoC4/TCPWM.c ****             regVal = ((TCPWM_COMP_CAP_BUF_REG - 1u) & TCPWM_16BIT_MASK);
 999:.\Generated_Source\PSoC4/TCPWM.c ****         }
1000:.\Generated_Source\PSoC4/TCPWM.c ****         else if (TCPWM__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/TCPWM.c ****         {
1002:.\Generated_Source\PSoC4/TCPWM.c ****             regVal = ((TCPWM_COMP_CAP_BUF_REG + 1u) & TCPWM_16BIT_MASK);
1003:.\Generated_Source\PSoC4/TCPWM.c ****         }
1004:.\Generated_Source\PSoC4/TCPWM.c ****         else
1005:.\Generated_Source\PSoC4/TCPWM.c ****         {
1006:.\Generated_Source\PSoC4/TCPWM.c ****             regVal = (TCPWM_COMP_CAP_BUF_REG & TCPWM_16BIT_MASK);
1007:.\Generated_Source\PSoC4/TCPWM.c ****         }
1008:.\Generated_Source\PSoC4/TCPWM.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/TCPWM.c ****     #else
1010:.\Generated_Source\PSoC4/TCPWM.c ****         return (TCPWM_COMP_CAP_BUF_REG & TCPWM_16BIT_MASK);
 1249              		.loc 1 1010 0
 1250 0004 034B     		ldr	r3, .L83
 1251 0006 1B68     		ldr	r3, [r3]
 1252 0008 1B04     		lsl	r3, r3, #16
 1253 000a 1B0C     		lsr	r3, r3, #16
1011:.\Generated_Source\PSoC4/TCPWM.c ****     #endif /* (TCPWM_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/TCPWM.c **** }
 1254              		.loc 1 1012 0
 1255 000c 181C     		mov	r0, r3
 1256 000e BD46     		mov	sp, r7
 1257              		@ sp needed
 1258 0010 80BD     		pop	{r7, pc}
 1259              	.L84:
 1260 0012 C046     		.align	2
 1261              	.L83:
 1262 0014 10010540 		.word	1074069776
 1263              		.cfi_endproc
 1264              	.LFE25:
 1265              		.size	TCPWM_ReadCompareBuf, .-TCPWM_ReadCompareBuf
 1266              		.section	.text.TCPWM_ReadCapture,"ax",%progbits
 1267              		.align	2
 1268              		.global	TCPWM_ReadCapture
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 41


 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	TCPWM_ReadCapture, %function
 1272              	TCPWM_ReadCapture:
 1273              	.LFB26:
1013:.\Generated_Source\PSoC4/TCPWM.c **** 
1014:.\Generated_Source\PSoC4/TCPWM.c **** 
1015:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCapture
1017:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/TCPWM.c **** *
1019:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1020:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/TCPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/TCPWM.c **** *
1023:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1024:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1025:.\Generated_Source\PSoC4/TCPWM.c **** *
1026:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1027:.\Generated_Source\PSoC4/TCPWM.c **** *  Capture value
1028:.\Generated_Source\PSoC4/TCPWM.c **** *
1029:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCapture(void)
1031:.\Generated_Source\PSoC4/TCPWM.c **** {
 1274              		.loc 1 1031 0
 1275              		.cfi_startproc
 1276 0000 80B5     		push	{r7, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
1032:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_COMP_CAP_REG & TCPWM_16BIT_MASK);
 1282              		.loc 1 1032 0
 1283 0004 034B     		ldr	r3, .L87
 1284 0006 1B68     		ldr	r3, [r3]
 1285 0008 1B04     		lsl	r3, r3, #16
 1286 000a 1B0C     		lsr	r3, r3, #16
1033:.\Generated_Source\PSoC4/TCPWM.c **** }
 1287              		.loc 1 1033 0
 1288 000c 181C     		mov	r0, r3
 1289 000e BD46     		mov	sp, r7
 1290              		@ sp needed
 1291 0010 80BD     		pop	{r7, pc}
 1292              	.L88:
 1293 0012 C046     		.align	2
 1294              	.L87:
 1295 0014 0C010540 		.word	1074069772
 1296              		.cfi_endproc
 1297              	.LFE26:
 1298              		.size	TCPWM_ReadCapture, .-TCPWM_ReadCapture
 1299              		.section	.text.TCPWM_ReadCaptureBuf,"ax",%progbits
 1300              		.align	2
 1301              		.global	TCPWM_ReadCaptureBuf
 1302              		.code	16
 1303              		.thumb_func
 1304              		.type	TCPWM_ReadCaptureBuf, %function
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 42


 1305              	TCPWM_ReadCaptureBuf:
 1306              	.LFB27:
1034:.\Generated_Source\PSoC4/TCPWM.c **** 
1035:.\Generated_Source\PSoC4/TCPWM.c **** 
1036:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/TCPWM.c **** *
1040:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1041:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/TCPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/TCPWM.c **** *
1044:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1045:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1046:.\Generated_Source\PSoC4/TCPWM.c **** *
1047:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1048:.\Generated_Source\PSoC4/TCPWM.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/TCPWM.c **** *
1050:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/TCPWM.c **** {
 1307              		.loc 1 1052 0
 1308              		.cfi_startproc
 1309 0000 80B5     		push	{r7, lr}
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
1053:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_COMP_CAP_BUF_REG & TCPWM_16BIT_MASK);
 1315              		.loc 1 1053 0
 1316 0004 034B     		ldr	r3, .L91
 1317 0006 1B68     		ldr	r3, [r3]
 1318 0008 1B04     		lsl	r3, r3, #16
 1319 000a 1B0C     		lsr	r3, r3, #16
1054:.\Generated_Source\PSoC4/TCPWM.c **** }
 1320              		.loc 1 1054 0
 1321 000c 181C     		mov	r0, r3
 1322 000e BD46     		mov	sp, r7
 1323              		@ sp needed
 1324 0010 80BD     		pop	{r7, pc}
 1325              	.L92:
 1326 0012 C046     		.align	2
 1327              	.L91:
 1328 0014 10010540 		.word	1074069776
 1329              		.cfi_endproc
 1330              	.LFE27:
 1331              		.size	TCPWM_ReadCaptureBuf, .-TCPWM_ReadCaptureBuf
 1332              		.section	.text.TCPWM_SetCaptureMode,"ax",%progbits
 1333              		.align	2
 1334              		.global	TCPWM_SetCaptureMode
 1335              		.code	16
 1336              		.thumb_func
 1337              		.type	TCPWM_SetCaptureMode, %function
 1338              	TCPWM_SetCaptureMode:
 1339              	.LFB28:
1055:.\Generated_Source\PSoC4/TCPWM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 43


1056:.\Generated_Source\PSoC4/TCPWM.c **** 
1057:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCaptureMode
1059:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/TCPWM.c **** *
1061:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1062:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/TCPWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/TCPWM.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/TCPWM.c **** *
1066:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1067:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1069:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/TCPWM.c **** *
1074:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1075:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1076:.\Generated_Source\PSoC4/TCPWM.c **** *
1077:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/TCPWM.c **** {
 1340              		.loc 1 1079 0
 1341              		.cfi_startproc
 1342 0000 90B5     		push	{r4, r7, lr}
 1343              		.cfi_def_cfa_offset 12
 1344              		.cfi_offset 4, -12
 1345              		.cfi_offset 7, -8
 1346              		.cfi_offset 14, -4
 1347 0002 85B0     		sub	sp, sp, #20
 1348              		.cfi_def_cfa_offset 32
 1349 0004 00AF     		add	r7, sp, #0
 1350              		.cfi_def_cfa_register 7
 1351 0006 7860     		str	r0, [r7, #4]
1080:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/TCPWM.c **** 
1082:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1352              		.loc 1 1082 0
 1353 0008 3C1C     		mov	r4, r7
 1354 000a 0F34     		add	r4, r4, #15
 1355 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1356 0010 031C     		mov	r3, r0
 1357 0012 2370     		strb	r3, [r4]
1083:.\Generated_Source\PSoC4/TCPWM.c **** 
1084:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_CAPTURE_MASK;
 1358              		.loc 1 1084 0
 1359 0014 0A4B     		ldr	r3, .L94
 1360 0016 0A4A     		ldr	r2, .L94
 1361 0018 1268     		ldr	r2, [r2]
 1362 001a 0321     		mov	r1, #3
 1363 001c 8A43     		bic	r2, r1
 1364 001e 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= triggerMode;
 1365              		.loc 1 1085 0
 1366 0020 074B     		ldr	r3, .L94
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 44


 1367 0022 074A     		ldr	r2, .L94
 1368 0024 1168     		ldr	r1, [r2]
 1369 0026 7A68     		ldr	r2, [r7, #4]
 1370 0028 0A43     		orr	r2, r1
 1371 002a 1A60     		str	r2, [r3]
1086:.\Generated_Source\PSoC4/TCPWM.c **** 
1087:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1372              		.loc 1 1087 0
 1373 002c 3B1C     		mov	r3, r7
 1374 002e 0F33     		add	r3, r3, #15
 1375 0030 1B78     		ldrb	r3, [r3]
 1376 0032 181C     		mov	r0, r3
 1377 0034 FFF7FEFF 		bl	CyExitCriticalSection
1088:.\Generated_Source\PSoC4/TCPWM.c **** }
 1378              		.loc 1 1088 0
 1379 0038 BD46     		mov	sp, r7
 1380 003a 05B0     		add	sp, sp, #20
 1381              		@ sp needed
 1382 003c 90BD     		pop	{r4, r7, pc}
 1383              	.L95:
 1384 003e C046     		.align	2
 1385              	.L94:
 1386 0040 24010540 		.word	1074069796
 1387              		.cfi_endproc
 1388              	.LFE28:
 1389              		.size	TCPWM_SetCaptureMode, .-TCPWM_SetCaptureMode
 1390              		.section	.text.TCPWM_SetReloadMode,"ax",%progbits
 1391              		.align	2
 1392              		.global	TCPWM_SetReloadMode
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	TCPWM_SetReloadMode, %function
 1396              	TCPWM_SetReloadMode:
 1397              	.LFB29:
1089:.\Generated_Source\PSoC4/TCPWM.c **** 
1090:.\Generated_Source\PSoC4/TCPWM.c **** 
1091:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetReloadMode
1093:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/TCPWM.c **** *
1095:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1096:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/TCPWM.c **** *  input.
1098:.\Generated_Source\PSoC4/TCPWM.c **** *
1099:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1100:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1102:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/TCPWM.c **** *
1107:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1108:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1109:.\Generated_Source\PSoC4/TCPWM.c **** *
1110:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetReloadMode(uint32 triggerMode)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 45


1112:.\Generated_Source\PSoC4/TCPWM.c **** {
 1398              		.loc 1 1112 0
 1399              		.cfi_startproc
 1400 0000 90B5     		push	{r4, r7, lr}
 1401              		.cfi_def_cfa_offset 12
 1402              		.cfi_offset 4, -12
 1403              		.cfi_offset 7, -8
 1404              		.cfi_offset 14, -4
 1405 0002 85B0     		sub	sp, sp, #20
 1406              		.cfi_def_cfa_offset 32
 1407 0004 00AF     		add	r7, sp, #0
 1408              		.cfi_def_cfa_register 7
 1409 0006 7860     		str	r0, [r7, #4]
1113:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/TCPWM.c **** 
1115:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1410              		.loc 1 1115 0
 1411 0008 3C1C     		mov	r4, r7
 1412 000a 0F34     		add	r4, r4, #15
 1413 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1414 0010 031C     		mov	r3, r0
 1415 0012 2370     		strb	r3, [r4]
1116:.\Generated_Source\PSoC4/TCPWM.c **** 
1117:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_RELOAD_MASK;
 1416              		.loc 1 1117 0
 1417 0014 0A4B     		ldr	r3, .L97
 1418 0016 0A4A     		ldr	r2, .L97
 1419 0018 1268     		ldr	r2, [r2]
 1420 001a 3021     		mov	r1, #48
 1421 001c 8A43     		bic	r2, r1
 1422 001e 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_RELOAD_SHIFT));
 1423              		.loc 1 1118 0
 1424 0020 074B     		ldr	r3, .L97
 1425 0022 074A     		ldr	r2, .L97
 1426 0024 1168     		ldr	r1, [r2]
 1427 0026 7A68     		ldr	r2, [r7, #4]
 1428 0028 1201     		lsl	r2, r2, #4
 1429 002a 0A43     		orr	r2, r1
 1430 002c 1A60     		str	r2, [r3]
1119:.\Generated_Source\PSoC4/TCPWM.c **** 
1120:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1431              		.loc 1 1120 0
 1432 002e 3B1C     		mov	r3, r7
 1433 0030 0F33     		add	r3, r3, #15
 1434 0032 1B78     		ldrb	r3, [r3]
 1435 0034 181C     		mov	r0, r3
 1436 0036 FFF7FEFF 		bl	CyExitCriticalSection
1121:.\Generated_Source\PSoC4/TCPWM.c **** }
 1437              		.loc 1 1121 0
 1438 003a BD46     		mov	sp, r7
 1439 003c 05B0     		add	sp, sp, #20
 1440              		@ sp needed
 1441 003e 90BD     		pop	{r4, r7, pc}
 1442              	.L98:
 1443              		.align	2
 1444              	.L97:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 46


 1445 0040 24010540 		.word	1074069796
 1446              		.cfi_endproc
 1447              	.LFE29:
 1448              		.size	TCPWM_SetReloadMode, .-TCPWM_SetReloadMode
 1449              		.section	.text.TCPWM_SetStartMode,"ax",%progbits
 1450              		.align	2
 1451              		.global	TCPWM_SetStartMode
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	TCPWM_SetStartMode, %function
 1455              	TCPWM_SetStartMode:
 1456              	.LFB30:
1122:.\Generated_Source\PSoC4/TCPWM.c **** 
1123:.\Generated_Source\PSoC4/TCPWM.c **** 
1124:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetStartMode
1126:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/TCPWM.c **** *
1128:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1129:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/TCPWM.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/TCPWM.c **** *
1132:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1133:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1135:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/TCPWM.c **** *
1140:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1141:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1142:.\Generated_Source\PSoC4/TCPWM.c **** *
1143:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/TCPWM.c **** {
 1457              		.loc 1 1145 0
 1458              		.cfi_startproc
 1459 0000 90B5     		push	{r4, r7, lr}
 1460              		.cfi_def_cfa_offset 12
 1461              		.cfi_offset 4, -12
 1462              		.cfi_offset 7, -8
 1463              		.cfi_offset 14, -4
 1464 0002 85B0     		sub	sp, sp, #20
 1465              		.cfi_def_cfa_offset 32
 1466 0004 00AF     		add	r7, sp, #0
 1467              		.cfi_def_cfa_register 7
 1468 0006 7860     		str	r0, [r7, #4]
1146:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/TCPWM.c **** 
1148:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1469              		.loc 1 1148 0
 1470 0008 3C1C     		mov	r4, r7
 1471 000a 0F34     		add	r4, r4, #15
 1472 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1473 0010 031C     		mov	r3, r0
 1474 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 47


1149:.\Generated_Source\PSoC4/TCPWM.c **** 
1150:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_START_MASK;
 1475              		.loc 1 1150 0
 1476 0014 0A4B     		ldr	r3, .L100
 1477 0016 0A4A     		ldr	r2, .L100
 1478 0018 1168     		ldr	r1, [r2]
 1479 001a 0A4A     		ldr	r2, .L100+4
 1480 001c 0A40     		and	r2, r1
 1481 001e 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_START_SHIFT));
 1482              		.loc 1 1151 0
 1483 0020 074B     		ldr	r3, .L100
 1484 0022 074A     		ldr	r2, .L100
 1485 0024 1168     		ldr	r1, [r2]
 1486 0026 7A68     		ldr	r2, [r7, #4]
 1487 0028 1202     		lsl	r2, r2, #8
 1488 002a 0A43     		orr	r2, r1
 1489 002c 1A60     		str	r2, [r3]
1152:.\Generated_Source\PSoC4/TCPWM.c **** 
1153:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1490              		.loc 1 1153 0
 1491 002e 3B1C     		mov	r3, r7
 1492 0030 0F33     		add	r3, r3, #15
 1493 0032 1B78     		ldrb	r3, [r3]
 1494 0034 181C     		mov	r0, r3
 1495 0036 FFF7FEFF 		bl	CyExitCriticalSection
1154:.\Generated_Source\PSoC4/TCPWM.c **** }
 1496              		.loc 1 1154 0
 1497 003a BD46     		mov	sp, r7
 1498 003c 05B0     		add	sp, sp, #20
 1499              		@ sp needed
 1500 003e 90BD     		pop	{r4, r7, pc}
 1501              	.L101:
 1502              		.align	2
 1503              	.L100:
 1504 0040 24010540 		.word	1074069796
 1505 0044 FFFCFFFF 		.word	-769
 1506              		.cfi_endproc
 1507              	.LFE30:
 1508              		.size	TCPWM_SetStartMode, .-TCPWM_SetStartMode
 1509              		.section	.text.TCPWM_SetStopMode,"ax",%progbits
 1510              		.align	2
 1511              		.global	TCPWM_SetStopMode
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	TCPWM_SetStopMode, %function
 1515              	TCPWM_SetStopMode:
 1516              	.LFB31:
1155:.\Generated_Source\PSoC4/TCPWM.c **** 
1156:.\Generated_Source\PSoC4/TCPWM.c **** 
1157:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetStopMode
1159:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/TCPWM.c **** *
1161:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1162:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/TCPWM.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 48


1164:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1165:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1167:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/TCPWM.c **** *
1172:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1173:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1174:.\Generated_Source\PSoC4/TCPWM.c **** *
1175:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/TCPWM.c **** {
 1517              		.loc 1 1177 0
 1518              		.cfi_startproc
 1519 0000 90B5     		push	{r4, r7, lr}
 1520              		.cfi_def_cfa_offset 12
 1521              		.cfi_offset 4, -12
 1522              		.cfi_offset 7, -8
 1523              		.cfi_offset 14, -4
 1524 0002 85B0     		sub	sp, sp, #20
 1525              		.cfi_def_cfa_offset 32
 1526 0004 00AF     		add	r7, sp, #0
 1527              		.cfi_def_cfa_register 7
 1528 0006 7860     		str	r0, [r7, #4]
1178:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/TCPWM.c **** 
1180:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1529              		.loc 1 1180 0
 1530 0008 3C1C     		mov	r4, r7
 1531 000a 0F34     		add	r4, r4, #15
 1532 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1533 0010 031C     		mov	r3, r0
 1534 0012 2370     		strb	r3, [r4]
1181:.\Generated_Source\PSoC4/TCPWM.c **** 
1182:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_STOP_MASK;
 1535              		.loc 1 1182 0
 1536 0014 0A4B     		ldr	r3, .L103
 1537 0016 0A4A     		ldr	r2, .L103
 1538 0018 1268     		ldr	r2, [r2]
 1539 001a C021     		mov	r1, #192
 1540 001c 8A43     		bic	r2, r1
 1541 001e 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_STOP_SHIFT));
 1542              		.loc 1 1183 0
 1543 0020 074B     		ldr	r3, .L103
 1544 0022 074A     		ldr	r2, .L103
 1545 0024 1168     		ldr	r1, [r2]
 1546 0026 7A68     		ldr	r2, [r7, #4]
 1547 0028 9201     		lsl	r2, r2, #6
 1548 002a 0A43     		orr	r2, r1
 1549 002c 1A60     		str	r2, [r3]
1184:.\Generated_Source\PSoC4/TCPWM.c **** 
1185:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1550              		.loc 1 1185 0
 1551 002e 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 49


 1552 0030 0F33     		add	r3, r3, #15
 1553 0032 1B78     		ldrb	r3, [r3]
 1554 0034 181C     		mov	r0, r3
 1555 0036 FFF7FEFF 		bl	CyExitCriticalSection
1186:.\Generated_Source\PSoC4/TCPWM.c **** }
 1556              		.loc 1 1186 0
 1557 003a BD46     		mov	sp, r7
 1558 003c 05B0     		add	sp, sp, #20
 1559              		@ sp needed
 1560 003e 90BD     		pop	{r4, r7, pc}
 1561              	.L104:
 1562              		.align	2
 1563              	.L103:
 1564 0040 24010540 		.word	1074069796
 1565              		.cfi_endproc
 1566              	.LFE31:
 1567              		.size	TCPWM_SetStopMode, .-TCPWM_SetStopMode
 1568              		.section	.text.TCPWM_SetCountMode,"ax",%progbits
 1569              		.align	2
 1570              		.global	TCPWM_SetCountMode
 1571              		.code	16
 1572              		.thumb_func
 1573              		.type	TCPWM_SetCountMode, %function
 1574              	TCPWM_SetCountMode:
 1575              	.LFB32:
1187:.\Generated_Source\PSoC4/TCPWM.c **** 
1188:.\Generated_Source\PSoC4/TCPWM.c **** 
1189:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetCountMode
1191:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/TCPWM.c **** *
1193:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1194:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/TCPWM.c **** *  input.
1196:.\Generated_Source\PSoC4/TCPWM.c **** *
1197:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1198:.\Generated_Source\PSoC4/TCPWM.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1200:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/TCPWM.c **** *
1205:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1206:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1207:.\Generated_Source\PSoC4/TCPWM.c **** *
1208:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/TCPWM.c **** {
 1576              		.loc 1 1210 0
 1577              		.cfi_startproc
 1578 0000 90B5     		push	{r4, r7, lr}
 1579              		.cfi_def_cfa_offset 12
 1580              		.cfi_offset 4, -12
 1581              		.cfi_offset 7, -8
 1582              		.cfi_offset 14, -4
 1583 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 50


 1584              		.cfi_def_cfa_offset 32
 1585 0004 00AF     		add	r7, sp, #0
 1586              		.cfi_def_cfa_register 7
 1587 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/TCPWM.c **** 
1213:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1588              		.loc 1 1213 0
 1589 0008 3C1C     		mov	r4, r7
 1590 000a 0F34     		add	r4, r4, #15
 1591 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1592 0010 031C     		mov	r3, r0
 1593 0012 2370     		strb	r3, [r4]
1214:.\Generated_Source\PSoC4/TCPWM.c **** 
1215:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG &= (uint32)~TCPWM_COUNT_MASK;
 1594              		.loc 1 1215 0
 1595 0014 0A4B     		ldr	r3, .L106
 1596 0016 0A4A     		ldr	r2, .L106
 1597 0018 1268     		ldr	r2, [r2]
 1598 001a 0C21     		mov	r1, #12
 1599 001c 8A43     		bic	r2, r1
 1600 001e 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_COUNT_SHIFT));
 1601              		.loc 1 1216 0
 1602 0020 074B     		ldr	r3, .L106
 1603 0022 074A     		ldr	r2, .L106
 1604 0024 1168     		ldr	r1, [r2]
 1605 0026 7A68     		ldr	r2, [r7, #4]
 1606 0028 9200     		lsl	r2, r2, #2
 1607 002a 0A43     		orr	r2, r1
 1608 002c 1A60     		str	r2, [r3]
1217:.\Generated_Source\PSoC4/TCPWM.c **** 
1218:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1609              		.loc 1 1218 0
 1610 002e 3B1C     		mov	r3, r7
 1611 0030 0F33     		add	r3, r3, #15
 1612 0032 1B78     		ldrb	r3, [r3]
 1613 0034 181C     		mov	r0, r3
 1614 0036 FFF7FEFF 		bl	CyExitCriticalSection
1219:.\Generated_Source\PSoC4/TCPWM.c **** }
 1615              		.loc 1 1219 0
 1616 003a BD46     		mov	sp, r7
 1617 003c 05B0     		add	sp, sp, #20
 1618              		@ sp needed
 1619 003e 90BD     		pop	{r4, r7, pc}
 1620              	.L107:
 1621              		.align	2
 1622              	.L106:
 1623 0040 24010540 		.word	1074069796
 1624              		.cfi_endproc
 1625              	.LFE32:
 1626              		.size	TCPWM_SetCountMode, .-TCPWM_SetCountMode
 1627              		.section	.text.TCPWM_TriggerCommand,"ax",%progbits
 1628              		.align	2
 1629              		.global	TCPWM_TriggerCommand
 1630              		.code	16
 1631              		.thumb_func
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 51


 1632              		.type	TCPWM_TriggerCommand, %function
 1633              	TCPWM_TriggerCommand:
 1634              	.LFB33:
1220:.\Generated_Source\PSoC4/TCPWM.c **** 
1221:.\Generated_Source\PSoC4/TCPWM.c **** 
1222:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_TriggerCommand
1224:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/TCPWM.c **** *
1226:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1227:.\Generated_Source\PSoC4/TCPWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/TCPWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/TCPWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/TCPWM.c **** *
1231:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1232:.\Generated_Source\PSoC4/TCPWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/TCPWM.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/TCPWM.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/TCPWM.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/TCPWM.c **** *        define.
1237:.\Generated_Source\PSoC4/TCPWM.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/TCPWM.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1240:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/TCPWM.c **** *
1245:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1246:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1247:.\Generated_Source\PSoC4/TCPWM.c **** *
1248:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/TCPWM.c **** {
 1635              		.loc 1 1250 0
 1636              		.cfi_startproc
 1637 0000 90B5     		push	{r4, r7, lr}
 1638              		.cfi_def_cfa_offset 12
 1639              		.cfi_offset 4, -12
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
 1642 0002 85B0     		sub	sp, sp, #20
 1643              		.cfi_def_cfa_offset 32
 1644 0004 00AF     		add	r7, sp, #0
 1645              		.cfi_def_cfa_register 7
 1646 0006 7860     		str	r0, [r7, #4]
 1647 0008 3960     		str	r1, [r7]
1251:.\Generated_Source\PSoC4/TCPWM.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/TCPWM.c **** 
1253:.\Generated_Source\PSoC4/TCPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1648              		.loc 1 1253 0
 1649 000a 3C1C     		mov	r4, r7
 1650 000c 0F34     		add	r4, r4, #15
 1651 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1652 0012 031C     		mov	r3, r0
 1653 0014 2370     		strb	r3, [r4]
1254:.\Generated_Source\PSoC4/TCPWM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 52


1255:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_COMMAND_REG = ((uint32)(mask << command));
 1654              		.loc 1 1255 0
 1655 0016 084B     		ldr	r3, .L109
 1656 0018 3A68     		ldr	r2, [r7]
 1657 001a 7968     		ldr	r1, [r7, #4]
 1658 001c 081C     		mov	r0, r1
 1659 001e 9040     		lsl	r0, r0, r2
 1660 0020 021C     		mov	r2, r0
 1661 0022 1A60     		str	r2, [r3]
1256:.\Generated_Source\PSoC4/TCPWM.c **** 
1257:.\Generated_Source\PSoC4/TCPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1662              		.loc 1 1257 0
 1663 0024 3B1C     		mov	r3, r7
 1664 0026 0F33     		add	r3, r3, #15
 1665 0028 1B78     		ldrb	r3, [r3]
 1666 002a 181C     		mov	r0, r3
 1667 002c FFF7FEFF 		bl	CyExitCriticalSection
1258:.\Generated_Source\PSoC4/TCPWM.c **** }
 1668              		.loc 1 1258 0
 1669 0030 BD46     		mov	sp, r7
 1670 0032 05B0     		add	sp, sp, #20
 1671              		@ sp needed
 1672 0034 90BD     		pop	{r4, r7, pc}
 1673              	.L110:
 1674 0036 C046     		.align	2
 1675              	.L109:
 1676 0038 08000540 		.word	1074069512
 1677              		.cfi_endproc
 1678              	.LFE33:
 1679              		.size	TCPWM_TriggerCommand, .-TCPWM_TriggerCommand
 1680              		.section	.text.TCPWM_ReadStatus,"ax",%progbits
 1681              		.align	2
 1682              		.global	TCPWM_ReadStatus
 1683              		.code	16
 1684              		.thumb_func
 1685              		.type	TCPWM_ReadStatus, %function
 1686              	TCPWM_ReadStatus:
 1687              	.LFB34:
1259:.\Generated_Source\PSoC4/TCPWM.c **** 
1260:.\Generated_Source\PSoC4/TCPWM.c **** 
1261:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ReadStatus
1263:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/TCPWM.c **** *
1265:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/TCPWM.c **** *  Reads the status of the TCPWM.
1267:.\Generated_Source\PSoC4/TCPWM.c **** *
1268:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1270:.\Generated_Source\PSoC4/TCPWM.c **** *
1271:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1272:.\Generated_Source\PSoC4/TCPWM.c **** *  Status
1273:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1274:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/TCPWM.c **** *
1277:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 53


1278:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_ReadStatus(void)
1279:.\Generated_Source\PSoC4/TCPWM.c **** {
 1688              		.loc 1 1279 0
 1689              		.cfi_startproc
 1690 0000 80B5     		push	{r7, lr}
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 7, -8
 1693              		.cfi_offset 14, -4
 1694 0002 00AF     		add	r7, sp, #0
 1695              		.cfi_def_cfa_register 7
1280:.\Generated_Source\PSoC4/TCPWM.c ****     return ((TCPWM_STATUS_REG >> TCPWM_RUNNING_STATUS_SHIFT) |
 1696              		.loc 1 1280 0
 1697 0004 054B     		ldr	r3, .L113
 1698 0006 1B68     		ldr	r3, [r3]
 1699 0008 9A0F     		lsr	r2, r3, #30
1281:.\Generated_Source\PSoC4/TCPWM.c ****             (TCPWM_STATUS_REG & TCPWM_STATUS_DOWN));
 1700              		.loc 1 1281 0
 1701 000a 044B     		ldr	r3, .L113
 1702 000c 1968     		ldr	r1, [r3]
 1703 000e 0123     		mov	r3, #1
 1704 0010 0B40     		and	r3, r1
1280:.\Generated_Source\PSoC4/TCPWM.c ****     return ((TCPWM_STATUS_REG >> TCPWM_RUNNING_STATUS_SHIFT) |
 1705              		.loc 1 1280 0
 1706 0012 1343     		orr	r3, r2
1282:.\Generated_Source\PSoC4/TCPWM.c **** }
 1707              		.loc 1 1282 0
 1708 0014 181C     		mov	r0, r3
 1709 0016 BD46     		mov	sp, r7
 1710              		@ sp needed
 1711 0018 80BD     		pop	{r7, pc}
 1712              	.L114:
 1713 001a C046     		.align	2
 1714              	.L113:
 1715 001c 04010540 		.word	1074069764
 1716              		.cfi_endproc
 1717              	.LFE34:
 1718              		.size	TCPWM_ReadStatus, .-TCPWM_ReadStatus
 1719              		.section	.text.TCPWM_SetInterruptMode,"ax",%progbits
 1720              		.align	2
 1721              		.global	TCPWM_SetInterruptMode
 1722              		.code	16
 1723              		.thumb_func
 1724              		.type	TCPWM_SetInterruptMode, %function
 1725              	TCPWM_SetInterruptMode:
 1726              	.LFB35:
1283:.\Generated_Source\PSoC4/TCPWM.c **** 
1284:.\Generated_Source\PSoC4/TCPWM.c **** 
1285:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetInterruptMode
1287:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/TCPWM.c **** *
1289:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1290:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/TCPWM.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/TCPWM.c **** *
1293:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1294:.\Generated_Source\PSoC4/TCPWM.c **** *   interruptMask: Mask of bits to be enabled
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 54


1295:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1296:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/TCPWM.c **** *
1299:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1300:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1301:.\Generated_Source\PSoC4/TCPWM.c **** *
1302:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/TCPWM.c **** {
 1727              		.loc 1 1304 0
 1728              		.cfi_startproc
 1729 0000 80B5     		push	{r7, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 7, -8
 1732              		.cfi_offset 14, -4
 1733 0002 82B0     		sub	sp, sp, #8
 1734              		.cfi_def_cfa_offset 16
 1735 0004 00AF     		add	r7, sp, #0
 1736              		.cfi_def_cfa_register 7
 1737 0006 7860     		str	r0, [r7, #4]
1305:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_INTERRUPT_MASK_REG =  interruptMask;
 1738              		.loc 1 1305 0
 1739 0008 024B     		ldr	r3, .L116
 1740 000a 7A68     		ldr	r2, [r7, #4]
 1741 000c 1A60     		str	r2, [r3]
1306:.\Generated_Source\PSoC4/TCPWM.c **** }
 1742              		.loc 1 1306 0
 1743 000e BD46     		mov	sp, r7
 1744 0010 02B0     		add	sp, sp, #8
 1745              		@ sp needed
 1746 0012 80BD     		pop	{r7, pc}
 1747              	.L117:
 1748              		.align	2
 1749              	.L116:
 1750 0014 38010540 		.word	1074069816
 1751              		.cfi_endproc
 1752              	.LFE35:
 1753              		.size	TCPWM_SetInterruptMode, .-TCPWM_SetInterruptMode
 1754              		.section	.text.TCPWM_GetInterruptSourceMasked,"ax",%progbits
 1755              		.align	2
 1756              		.global	TCPWM_GetInterruptSourceMasked
 1757              		.code	16
 1758              		.thumb_func
 1759              		.type	TCPWM_GetInterruptSourceMasked, %function
 1760              	TCPWM_GetInterruptSourceMasked:
 1761              	.LFB36:
1307:.\Generated_Source\PSoC4/TCPWM.c **** 
1308:.\Generated_Source\PSoC4/TCPWM.c **** 
1309:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/TCPWM.c **** *
1313:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1314:.\Generated_Source\PSoC4/TCPWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/TCPWM.c **** *
1316:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 55


1317:.\Generated_Source\PSoC4/TCPWM.c **** *   None
1318:.\Generated_Source\PSoC4/TCPWM.c **** *
1319:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1320:.\Generated_Source\PSoC4/TCPWM.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1322:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/TCPWM.c **** *
1325:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/TCPWM.c **** {
 1762              		.loc 1 1327 0
 1763              		.cfi_startproc
 1764 0000 80B5     		push	{r7, lr}
 1765              		.cfi_def_cfa_offset 8
 1766              		.cfi_offset 7, -8
 1767              		.cfi_offset 14, -4
 1768 0002 00AF     		add	r7, sp, #0
 1769              		.cfi_def_cfa_register 7
1328:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_INTERRUPT_MASKED_REG);
 1770              		.loc 1 1328 0
 1771 0004 024B     		ldr	r3, .L120
 1772 0006 1B68     		ldr	r3, [r3]
1329:.\Generated_Source\PSoC4/TCPWM.c **** }
 1773              		.loc 1 1329 0
 1774 0008 181C     		mov	r0, r3
 1775 000a BD46     		mov	sp, r7
 1776              		@ sp needed
 1777 000c 80BD     		pop	{r7, pc}
 1778              	.L121:
 1779 000e C046     		.align	2
 1780              	.L120:
 1781 0010 3C010540 		.word	1074069820
 1782              		.cfi_endproc
 1783              	.LFE36:
 1784              		.size	TCPWM_GetInterruptSourceMasked, .-TCPWM_GetInterruptSourceMasked
 1785              		.section	.text.TCPWM_GetInterruptSource,"ax",%progbits
 1786              		.align	2
 1787              		.global	TCPWM_GetInterruptSource
 1788              		.code	16
 1789              		.thumb_func
 1790              		.type	TCPWM_GetInterruptSource, %function
 1791              	TCPWM_GetInterruptSource:
 1792              	.LFB37:
1330:.\Generated_Source\PSoC4/TCPWM.c **** 
1331:.\Generated_Source\PSoC4/TCPWM.c **** 
1332:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_GetInterruptSource
1334:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/TCPWM.c **** *
1336:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1337:.\Generated_Source\PSoC4/TCPWM.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/TCPWM.c **** *
1339:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1340:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1341:.\Generated_Source\PSoC4/TCPWM.c **** *
1342:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 56


1343:.\Generated_Source\PSoC4/TCPWM.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1345:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/TCPWM.c **** *
1348:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/TCPWM.c **** uint32 TCPWM_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/TCPWM.c **** {
 1793              		.loc 1 1350 0
 1794              		.cfi_startproc
 1795 0000 80B5     		push	{r7, lr}
 1796              		.cfi_def_cfa_offset 8
 1797              		.cfi_offset 7, -8
 1798              		.cfi_offset 14, -4
 1799 0002 00AF     		add	r7, sp, #0
 1800              		.cfi_def_cfa_register 7
1351:.\Generated_Source\PSoC4/TCPWM.c ****     return (TCPWM_INTERRUPT_REQ_REG);
 1801              		.loc 1 1351 0
 1802 0004 024B     		ldr	r3, .L124
 1803 0006 1B68     		ldr	r3, [r3]
1352:.\Generated_Source\PSoC4/TCPWM.c **** }
 1804              		.loc 1 1352 0
 1805 0008 181C     		mov	r0, r3
 1806 000a BD46     		mov	sp, r7
 1807              		@ sp needed
 1808 000c 80BD     		pop	{r7, pc}
 1809              	.L125:
 1810 000e C046     		.align	2
 1811              	.L124:
 1812 0010 30010540 		.word	1074069808
 1813              		.cfi_endproc
 1814              	.LFE37:
 1815              		.size	TCPWM_GetInterruptSource, .-TCPWM_GetInterruptSource
 1816              		.section	.text.TCPWM_ClearInterrupt,"ax",%progbits
 1817              		.align	2
 1818              		.global	TCPWM_ClearInterrupt
 1819              		.code	16
 1820              		.thumb_func
 1821              		.type	TCPWM_ClearInterrupt, %function
 1822              	TCPWM_ClearInterrupt:
 1823              	.LFB38:
1353:.\Generated_Source\PSoC4/TCPWM.c **** 
1354:.\Generated_Source\PSoC4/TCPWM.c **** 
1355:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_ClearInterrupt
1357:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/TCPWM.c **** *
1359:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1360:.\Generated_Source\PSoC4/TCPWM.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/TCPWM.c **** *
1362:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1363:.\Generated_Source\PSoC4/TCPWM.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1365:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/TCPWM.c **** *
1368:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 57


1369:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1370:.\Generated_Source\PSoC4/TCPWM.c **** *
1371:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/TCPWM.c **** {
 1824              		.loc 1 1373 0
 1825              		.cfi_startproc
 1826 0000 80B5     		push	{r7, lr}
 1827              		.cfi_def_cfa_offset 8
 1828              		.cfi_offset 7, -8
 1829              		.cfi_offset 14, -4
 1830 0002 82B0     		sub	sp, sp, #8
 1831              		.cfi_def_cfa_offset 16
 1832 0004 00AF     		add	r7, sp, #0
 1833              		.cfi_def_cfa_register 7
 1834 0006 7860     		str	r0, [r7, #4]
1374:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_INTERRUPT_REQ_REG = interruptMask;
 1835              		.loc 1 1374 0
 1836 0008 024B     		ldr	r3, .L127
 1837 000a 7A68     		ldr	r2, [r7, #4]
 1838 000c 1A60     		str	r2, [r3]
1375:.\Generated_Source\PSoC4/TCPWM.c **** }
 1839              		.loc 1 1375 0
 1840 000e BD46     		mov	sp, r7
 1841 0010 02B0     		add	sp, sp, #8
 1842              		@ sp needed
 1843 0012 80BD     		pop	{r7, pc}
 1844              	.L128:
 1845              		.align	2
 1846              	.L127:
 1847 0014 30010540 		.word	1074069808
 1848              		.cfi_endproc
 1849              	.LFE38:
 1850              		.size	TCPWM_ClearInterrupt, .-TCPWM_ClearInterrupt
 1851              		.section	.text.TCPWM_SetInterrupt,"ax",%progbits
 1852              		.align	2
 1853              		.global	TCPWM_SetInterrupt
 1854              		.code	16
 1855              		.thumb_func
 1856              		.type	TCPWM_SetInterrupt, %function
 1857              	TCPWM_SetInterrupt:
 1858              	.LFB39:
1376:.\Generated_Source\PSoC4/TCPWM.c **** 
1377:.\Generated_Source\PSoC4/TCPWM.c **** 
1378:.\Generated_Source\PSoC4/TCPWM.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/TCPWM.c **** * Function Name: TCPWM_SetInterrupt
1380:.\Generated_Source\PSoC4/TCPWM.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/TCPWM.c **** *
1382:.\Generated_Source\PSoC4/TCPWM.c **** * Summary:
1383:.\Generated_Source\PSoC4/TCPWM.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/TCPWM.c **** *
1385:.\Generated_Source\PSoC4/TCPWM.c **** * Parameters:
1386:.\Generated_Source\PSoC4/TCPWM.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/TCPWM.c **** *   Values:
1388:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/TCPWM.c **** *     - TCPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/TCPWM.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 58


1391:.\Generated_Source\PSoC4/TCPWM.c **** * Return:
1392:.\Generated_Source\PSoC4/TCPWM.c **** *  None
1393:.\Generated_Source\PSoC4/TCPWM.c **** *
1394:.\Generated_Source\PSoC4/TCPWM.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/TCPWM.c **** void TCPWM_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/TCPWM.c **** {
 1859              		.loc 1 1396 0
 1860              		.cfi_startproc
 1861 0000 80B5     		push	{r7, lr}
 1862              		.cfi_def_cfa_offset 8
 1863              		.cfi_offset 7, -8
 1864              		.cfi_offset 14, -4
 1865 0002 82B0     		sub	sp, sp, #8
 1866              		.cfi_def_cfa_offset 16
 1867 0004 00AF     		add	r7, sp, #0
 1868              		.cfi_def_cfa_register 7
 1869 0006 7860     		str	r0, [r7, #4]
1397:.\Generated_Source\PSoC4/TCPWM.c ****     TCPWM_INTERRUPT_SET_REG = interruptMask;
 1870              		.loc 1 1397 0
 1871 0008 024B     		ldr	r3, .L130
 1872 000a 7A68     		ldr	r2, [r7, #4]
 1873 000c 1A60     		str	r2, [r3]
1398:.\Generated_Source\PSoC4/TCPWM.c **** }
 1874              		.loc 1 1398 0
 1875 000e BD46     		mov	sp, r7
 1876 0010 02B0     		add	sp, sp, #8
 1877              		@ sp needed
 1878 0012 80BD     		pop	{r7, pc}
 1879              	.L131:
 1880              		.align	2
 1881              	.L130:
 1882 0014 34010540 		.word	1074069812
 1883              		.cfi_endproc
 1884              	.LFE39:
 1885              		.size	TCPWM_SetInterrupt, .-TCPWM_SetInterrupt
 1886              		.text
 1887              	.Letext0:
 1888              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1889              		.section	.debug_info,"",%progbits
 1890              	.Ldebug_info0:
 1891 0000 EE060000 		.4byte	0x6ee
 1892 0004 0400     		.2byte	0x4
 1893 0006 00000000 		.4byte	.Ldebug_abbrev0
 1894 000a 04       		.byte	0x4
 1895 000b 01       		.uleb128 0x1
 1896 000c 7F030000 		.4byte	.LASF76
 1897 0010 01       		.byte	0x1
 1898 0011 2E000000 		.4byte	.LASF77
 1899 0015 57020000 		.4byte	.LASF78
 1900 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1901 001d 00000000 		.4byte	0
 1902 0021 00000000 		.4byte	.Ldebug_line0
 1903 0025 02       		.uleb128 0x2
 1904 0026 01       		.byte	0x1
 1905 0027 06       		.byte	0x6
 1906 0028 B8000000 		.4byte	.LASF0
 1907 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 59


 1908 002d 01       		.byte	0x1
 1909 002e 08       		.byte	0x8
 1910 002f 31040000 		.4byte	.LASF1
 1911 0033 02       		.uleb128 0x2
 1912 0034 02       		.byte	0x2
 1913 0035 05       		.byte	0x5
 1914 0036 50040000 		.4byte	.LASF2
 1915 003a 02       		.uleb128 0x2
 1916 003b 02       		.byte	0x2
 1917 003c 07       		.byte	0x7
 1918 003d 00020000 		.4byte	.LASF3
 1919 0041 02       		.uleb128 0x2
 1920 0042 04       		.byte	0x4
 1921 0043 05       		.byte	0x5
 1922 0044 D9000000 		.4byte	.LASF4
 1923 0048 02       		.uleb128 0x2
 1924 0049 04       		.byte	0x4
 1925 004a 07       		.byte	0x7
 1926 004b E5010000 		.4byte	.LASF5
 1927 004f 02       		.uleb128 0x2
 1928 0050 08       		.byte	0x8
 1929 0051 05       		.byte	0x5
 1930 0052 AA000000 		.4byte	.LASF6
 1931 0056 02       		.uleb128 0x2
 1932 0057 08       		.byte	0x8
 1933 0058 07       		.byte	0x7
 1934 0059 67000000 		.4byte	.LASF7
 1935 005d 03       		.uleb128 0x3
 1936 005e 04       		.byte	0x4
 1937 005f 05       		.byte	0x5
 1938 0060 696E7400 		.ascii	"int\000"
 1939 0064 02       		.uleb128 0x2
 1940 0065 04       		.byte	0x4
 1941 0066 07       		.byte	0x7
 1942 0067 8A010000 		.4byte	.LASF8
 1943 006b 04       		.uleb128 0x4
 1944 006c F0000000 		.4byte	.LASF9
 1945 0070 02       		.byte	0x2
 1946 0071 A1       		.byte	0xa1
 1947 0072 2C000000 		.4byte	0x2c
 1948 0076 04       		.uleb128 0x4
 1949 0077 26010000 		.4byte	.LASF10
 1950 007b 02       		.byte	0x2
 1951 007c A3       		.byte	0xa3
 1952 007d 48000000 		.4byte	0x48
 1953 0081 02       		.uleb128 0x2
 1954 0082 04       		.byte	0x4
 1955 0083 04       		.byte	0x4
 1956 0084 5C030000 		.4byte	.LASF11
 1957 0088 02       		.uleb128 0x2
 1958 0089 08       		.byte	0x8
 1959 008a 04       		.byte	0x4
 1960 008b 0C010000 		.4byte	.LASF12
 1961 008f 02       		.uleb128 0x2
 1962 0090 01       		.byte	0x1
 1963 0091 08       		.byte	0x8
 1964 0092 B4040000 		.4byte	.LASF13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 60


 1965 0096 05       		.uleb128 0x5
 1966 0097 D1020000 		.4byte	.LASF14
 1967 009b 02       		.byte	0x2
 1968 009c 4D01     		.2byte	0x14d
 1969 009e A2000000 		.4byte	0xa2
 1970 00a2 06       		.uleb128 0x6
 1971 00a3 76000000 		.4byte	0x76
 1972 00a7 02       		.uleb128 0x2
 1973 00a8 04       		.byte	0x4
 1974 00a9 07       		.byte	0x7
 1975 00aa FE020000 		.4byte	.LASF15
 1976 00ae 07       		.uleb128 0x7
 1977 00af 5C010000 		.4byte	.LASF16
 1978 00b3 01       		.byte	0x1
 1979 00b4 27       		.byte	0x27
 1980 00b5 00000000 		.4byte	.LFB0
 1981 00b9 40000000 		.4byte	.LFE0-.LFB0
 1982 00bd 01       		.uleb128 0x1
 1983 00be 9C       		.byte	0x9c
 1984 00bf 08       		.uleb128 0x8
 1985 00c0 13020000 		.4byte	.LASF18
 1986 00c4 01       		.byte	0x1
 1987 00c5 C8       		.byte	0xc8
 1988 00c6 00000000 		.4byte	.LFB1
 1989 00ca 38000000 		.4byte	.LFE1-.LFB1
 1990 00ce 01       		.uleb128 0x1
 1991 00cf 9C       		.byte	0x9c
 1992 00d0 E3000000 		.4byte	0xe3
 1993 00d4 09       		.uleb128 0x9
 1994 00d5 FD040000 		.4byte	.LASF20
 1995 00d9 01       		.byte	0x1
 1996 00da CA       		.byte	0xca
 1997 00db 6B000000 		.4byte	0x6b
 1998 00df 02       		.uleb128 0x2
 1999 00e0 91       		.byte	0x91
 2000 00e1 6F       		.sleb128 -17
 2001 00e2 00       		.byte	0
 2002 00e3 07       		.uleb128 0x7
 2003 00e4 68040000 		.4byte	.LASF17
 2004 00e8 01       		.byte	0x1
 2005 00e9 F7       		.byte	0xf7
 2006 00ea 00000000 		.4byte	.LFB2
 2007 00ee 24000000 		.4byte	.LFE2-.LFB2
 2008 00f2 01       		.uleb128 0x1
 2009 00f3 9C       		.byte	0x9c
 2010 00f4 0A       		.uleb128 0xa
 2011 00f5 0E050000 		.4byte	.LASF19
 2012 00f9 01       		.byte	0x1
 2013 00fa 1101     		.2byte	0x111
 2014 00fc 00000000 		.4byte	.LFB3
 2015 0100 30000000 		.4byte	.LFE3-.LFB3
 2016 0104 01       		.uleb128 0x1
 2017 0105 9C       		.byte	0x9c
 2018 0106 1A010000 		.4byte	0x11a
 2019 010a 0B       		.uleb128 0xb
 2020 010b FD040000 		.4byte	.LASF20
 2021 010f 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 61


 2022 0110 1301     		.2byte	0x113
 2023 0112 6B000000 		.4byte	0x6b
 2024 0116 02       		.uleb128 0x2
 2025 0117 91       		.byte	0x91
 2026 0118 6F       		.sleb128 -17
 2027 0119 00       		.byte	0
 2028 011a 0A       		.uleb128 0xa
 2029 011b 0E040000 		.4byte	.LASF21
 2030 011f 01       		.byte	0x1
 2031 0120 3601     		.2byte	0x136
 2032 0122 00000000 		.4byte	.LFB4
 2033 0126 48000000 		.4byte	.LFE4-.LFB4
 2034 012a 01       		.uleb128 0x1
 2035 012b 9C       		.byte	0x9c
 2036 012c 4F010000 		.4byte	0x14f
 2037 0130 0C       		.uleb128 0xc
 2038 0131 CE040000 		.4byte	.LASF23
 2039 0135 01       		.byte	0x1
 2040 0136 3601     		.2byte	0x136
 2041 0138 76000000 		.4byte	0x76
 2042 013c 02       		.uleb128 0x2
 2043 013d 91       		.byte	0x91
 2044 013e 64       		.sleb128 -28
 2045 013f 0B       		.uleb128 0xb
 2046 0140 FD040000 		.4byte	.LASF20
 2047 0144 01       		.byte	0x1
 2048 0145 3801     		.2byte	0x138
 2049 0147 6B000000 		.4byte	0x6b
 2050 014b 02       		.uleb128 0x2
 2051 014c 91       		.byte	0x91
 2052 014d 6F       		.sleb128 -17
 2053 014e 00       		.byte	0
 2054 014f 0A       		.uleb128 0xa
 2055 0150 D7020000 		.4byte	.LASF22
 2056 0154 01       		.byte	0x1
 2057 0155 5701     		.2byte	0x157
 2058 0157 00000000 		.4byte	.LFB5
 2059 015b 48000000 		.4byte	.LFE5-.LFB5
 2060 015f 01       		.uleb128 0x1
 2061 0160 9C       		.byte	0x9c
 2062 0161 84010000 		.4byte	0x184
 2063 0165 0C       		.uleb128 0xc
 2064 0166 7E000000 		.4byte	.LASF24
 2065 016a 01       		.byte	0x1
 2066 016b 5701     		.2byte	0x157
 2067 016d 76000000 		.4byte	0x76
 2068 0171 02       		.uleb128 0x2
 2069 0172 91       		.byte	0x91
 2070 0173 64       		.sleb128 -28
 2071 0174 0B       		.uleb128 0xb
 2072 0175 FD040000 		.4byte	.LASF20
 2073 0179 01       		.byte	0x1
 2074 017a 5901     		.2byte	0x159
 2075 017c 6B000000 		.4byte	0x6b
 2076 0180 02       		.uleb128 0x2
 2077 0181 91       		.byte	0x91
 2078 0182 6F       		.sleb128 -17
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 62


 2079 0183 00       		.byte	0
 2080 0184 0A       		.uleb128 0xa
 2081 0185 D3040000 		.4byte	.LASF25
 2082 0189 01       		.byte	0x1
 2083 018a 7C01     		.2byte	0x17c
 2084 018c 00000000 		.4byte	.LFB6
 2085 0190 48000000 		.4byte	.LFE6-.LFB6
 2086 0194 01       		.uleb128 0x1
 2087 0195 9C       		.byte	0x9c
 2088 0196 B9010000 		.4byte	0x1b9
 2089 019a 0C       		.uleb128 0xc
 2090 019b 62030000 		.4byte	.LASF26
 2091 019f 01       		.byte	0x1
 2092 01a0 7C01     		.2byte	0x17c
 2093 01a2 76000000 		.4byte	0x76
 2094 01a6 02       		.uleb128 0x2
 2095 01a7 91       		.byte	0x91
 2096 01a8 64       		.sleb128 -28
 2097 01a9 0B       		.uleb128 0xb
 2098 01aa FD040000 		.4byte	.LASF20
 2099 01ae 01       		.byte	0x1
 2100 01af 7E01     		.2byte	0x17e
 2101 01b1 6B000000 		.4byte	0x6b
 2102 01b5 02       		.uleb128 0x2
 2103 01b6 91       		.byte	0x91
 2104 01b7 6F       		.sleb128 -17
 2105 01b8 00       		.byte	0
 2106 01b9 0A       		.uleb128 0xa
 2107 01ba 06000000 		.4byte	.LASF27
 2108 01be 01       		.byte	0x1
 2109 01bf 9C01     		.2byte	0x19c
 2110 01c1 00000000 		.4byte	.LFB7
 2111 01c5 4C000000 		.4byte	.LFE7-.LFB7
 2112 01c9 01       		.uleb128 0x1
 2113 01ca 9C       		.byte	0x9c
 2114 01cb EE010000 		.4byte	0x1ee
 2115 01cf 0C       		.uleb128 0xc
 2116 01d0 35020000 		.4byte	.LASF28
 2117 01d4 01       		.byte	0x1
 2118 01d5 9C01     		.2byte	0x19c
 2119 01d7 76000000 		.4byte	0x76
 2120 01db 02       		.uleb128 0x2
 2121 01dc 91       		.byte	0x91
 2122 01dd 64       		.sleb128 -28
 2123 01de 0B       		.uleb128 0xb
 2124 01df FD040000 		.4byte	.LASF20
 2125 01e3 01       		.byte	0x1
 2126 01e4 9E01     		.2byte	0x19e
 2127 01e6 6B000000 		.4byte	0x6b
 2128 01ea 02       		.uleb128 0x2
 2129 01eb 91       		.byte	0x91
 2130 01ec 6F       		.sleb128 -17
 2131 01ed 00       		.byte	0
 2132 01ee 0D       		.uleb128 0xd
 2133 01ef 89020000 		.4byte	.LASF29
 2134 01f3 01       		.byte	0x1
 2135 01f4 D201     		.2byte	0x1d2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 63


 2136 01f6 00000000 		.4byte	.LFB8
 2137 01fa 1C000000 		.4byte	.LFE8-.LFB8
 2138 01fe 01       		.uleb128 0x1
 2139 01ff 9C       		.byte	0x9c
 2140 0200 14020000 		.4byte	0x214
 2141 0204 0C       		.uleb128 0xc
 2142 0205 F7010000 		.4byte	.LASF30
 2143 0209 01       		.byte	0x1
 2144 020a D201     		.2byte	0x1d2
 2145 020c 76000000 		.4byte	0x76
 2146 0210 02       		.uleb128 0x2
 2147 0211 91       		.byte	0x91
 2148 0212 74       		.sleb128 -12
 2149 0213 00       		.byte	0
 2150 0214 0A       		.uleb128 0xa
 2151 0215 1C040000 		.4byte	.LASF31
 2152 0219 01       		.byte	0x1
 2153 021a F601     		.2byte	0x1f6
 2154 021c 00000000 		.4byte	.LFB9
 2155 0220 48000000 		.4byte	.LFE9-.LFB9
 2156 0224 01       		.uleb128 0x1
 2157 0225 9C       		.byte	0x9c
 2158 0226 49020000 		.4byte	0x249
 2159 022a 0C       		.uleb128 0xc
 2160 022b 07030000 		.4byte	.LASF32
 2161 022f 01       		.byte	0x1
 2162 0230 F601     		.2byte	0x1f6
 2163 0232 76000000 		.4byte	0x76
 2164 0236 02       		.uleb128 0x2
 2165 0237 91       		.byte	0x91
 2166 0238 64       		.sleb128 -28
 2167 0239 0B       		.uleb128 0xb
 2168 023a FD040000 		.4byte	.LASF20
 2169 023e 01       		.byte	0x1
 2170 023f F801     		.2byte	0x1f8
 2171 0241 6B000000 		.4byte	0x6b
 2172 0245 02       		.uleb128 0x2
 2173 0246 91       		.byte	0x91
 2174 0247 6F       		.sleb128 -17
 2175 0248 00       		.byte	0
 2176 0249 0A       		.uleb128 0xa
 2177 024a E7020000 		.4byte	.LASF33
 2178 024e 01       		.byte	0x1
 2179 024f 1802     		.2byte	0x218
 2180 0251 00000000 		.4byte	.LFB10
 2181 0255 48000000 		.4byte	.LFE10-.LFB10
 2182 0259 01       		.uleb128 0x1
 2183 025a 9C       		.byte	0x9c
 2184 025b 7E020000 		.4byte	0x27e
 2185 025f 0C       		.uleb128 0xc
 2186 0260 3F040000 		.4byte	.LASF34
 2187 0264 01       		.byte	0x1
 2188 0265 1802     		.2byte	0x218
 2189 0267 76000000 		.4byte	0x76
 2190 026b 02       		.uleb128 0x2
 2191 026c 91       		.byte	0x91
 2192 026d 64       		.sleb128 -28
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 64


 2193 026e 0B       		.uleb128 0xb
 2194 026f FD040000 		.4byte	.LASF20
 2195 0273 01       		.byte	0x1
 2196 0274 1A02     		.2byte	0x21a
 2197 0276 6B000000 		.4byte	0x6b
 2198 027a 02       		.uleb128 0x2
 2199 027b 91       		.byte	0x91
 2200 027c 6F       		.sleb128 -17
 2201 027d 00       		.byte	0
 2202 027e 0A       		.uleb128 0xa
 2203 027f 2E050000 		.4byte	.LASF35
 2204 0283 01       		.byte	0x1
 2205 0284 3902     		.2byte	0x239
 2206 0286 00000000 		.4byte	.LFB11
 2207 028a 4C000000 		.4byte	.LFE11-.LFB11
 2208 028e 01       		.uleb128 0x1
 2209 028f 9C       		.byte	0x9c
 2210 0290 B3020000 		.4byte	0x2b3
 2211 0294 0C       		.uleb128 0xc
 2212 0295 81010000 		.4byte	.LASF36
 2213 0299 01       		.byte	0x1
 2214 029a 3902     		.2byte	0x239
 2215 029c 76000000 		.4byte	0x76
 2216 02a0 02       		.uleb128 0x2
 2217 02a1 91       		.byte	0x91
 2218 02a2 64       		.sleb128 -28
 2219 02a3 0B       		.uleb128 0xb
 2220 02a4 FD040000 		.4byte	.LASF20
 2221 02a8 01       		.byte	0x1
 2222 02a9 3B02     		.2byte	0x23b
 2223 02ab 6B000000 		.4byte	0x6b
 2224 02af 02       		.uleb128 0x2
 2225 02b0 91       		.byte	0x91
 2226 02b1 6F       		.sleb128 -17
 2227 02b2 00       		.byte	0
 2228 02b3 0A       		.uleb128 0xa
 2229 02b4 6C030000 		.4byte	.LASF37
 2230 02b8 01       		.byte	0x1
 2231 02b9 5A02     		.2byte	0x25a
 2232 02bb 00000000 		.4byte	.LFB12
 2233 02bf 48000000 		.4byte	.LFE12-.LFB12
 2234 02c3 01       		.uleb128 0x1
 2235 02c4 9C       		.byte	0x9c
 2236 02c5 E8020000 		.4byte	0x2e8
 2237 02c9 0C       		.uleb128 0xc
 2238 02ca 7C010000 		.4byte	.LASF38
 2239 02ce 01       		.byte	0x1
 2240 02cf 5A02     		.2byte	0x25a
 2241 02d1 76000000 		.4byte	0x76
 2242 02d5 02       		.uleb128 0x2
 2243 02d6 91       		.byte	0x91
 2244 02d7 64       		.sleb128 -28
 2245 02d8 0B       		.uleb128 0xb
 2246 02d9 FD040000 		.4byte	.LASF20
 2247 02dd 01       		.byte	0x1
 2248 02de 5C02     		.2byte	0x25c
 2249 02e0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 65


 2250 02e4 02       		.uleb128 0x2
 2251 02e5 91       		.byte	0x91
 2252 02e6 6F       		.sleb128 -17
 2253 02e7 00       		.byte	0
 2254 02e8 0D       		.uleb128 0xd
 2255 02e9 BE020000 		.4byte	.LASF39
 2256 02ed 01       		.byte	0x1
 2257 02ee 7802     		.2byte	0x278
 2258 02f0 00000000 		.4byte	.LFB13
 2259 02f4 1C000000 		.4byte	.LFE13-.LFB13
 2260 02f8 01       		.uleb128 0x1
 2261 02f9 9C       		.byte	0x9c
 2262 02fa 0E030000 		.4byte	0x30e
 2263 02fe 0C       		.uleb128 0xc
 2264 02ff 00000000 		.4byte	.LASF40
 2265 0303 01       		.byte	0x1
 2266 0304 7802     		.2byte	0x278
 2267 0306 76000000 		.4byte	0x76
 2268 030a 02       		.uleb128 0x2
 2269 030b 91       		.byte	0x91
 2270 030c 74       		.sleb128 -12
 2271 030d 00       		.byte	0
 2272 030e 0E       		.uleb128 0xe
 2273 030f 2D010000 		.4byte	.LASF45
 2274 0313 01       		.byte	0x1
 2275 0314 8C02     		.2byte	0x28c
 2276 0316 76000000 		.4byte	0x76
 2277 031a 00000000 		.4byte	.LFB14
 2278 031e 18000000 		.4byte	.LFE14-.LFB14
 2279 0322 01       		.uleb128 0x1
 2280 0323 9C       		.byte	0x9c
 2281 0324 0A       		.uleb128 0xa
 2282 0325 67010000 		.4byte	.LASF41
 2283 0329 01       		.byte	0x1
 2284 032a A902     		.2byte	0x2a9
 2285 032c 00000000 		.4byte	.LFB15
 2286 0330 48000000 		.4byte	.LFE15-.LFB15
 2287 0334 01       		.uleb128 0x1
 2288 0335 9C       		.byte	0x9c
 2289 0336 59030000 		.4byte	0x359
 2290 033a 0C       		.uleb128 0xc
 2291 033b E6040000 		.4byte	.LASF42
 2292 033f 01       		.byte	0x1
 2293 0340 A902     		.2byte	0x2a9
 2294 0342 76000000 		.4byte	0x76
 2295 0346 02       		.uleb128 0x2
 2296 0347 91       		.byte	0x91
 2297 0348 64       		.sleb128 -28
 2298 0349 0B       		.uleb128 0xb
 2299 034a FD040000 		.4byte	.LASF20
 2300 034e 01       		.byte	0x1
 2301 034f AB02     		.2byte	0x2ab
 2302 0351 6B000000 		.4byte	0x6b
 2303 0355 02       		.uleb128 0x2
 2304 0356 91       		.byte	0x91
 2305 0357 6F       		.sleb128 -17
 2306 0358 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 66


 2307 0359 0D       		.uleb128 0xd
 2308 035a AC020000 		.4byte	.LASF43
 2309 035e 01       		.byte	0x1
 2310 035f C602     		.2byte	0x2c6
 2311 0361 00000000 		.4byte	.LFB16
 2312 0365 1C000000 		.4byte	.LFE16-.LFB16
 2313 0369 01       		.uleb128 0x1
 2314 036a 9C       		.byte	0x9c
 2315 036b 7F030000 		.4byte	0x37f
 2316 036f 0C       		.uleb128 0xc
 2317 0370 60000000 		.4byte	.LASF44
 2318 0374 01       		.byte	0x1
 2319 0375 C602     		.2byte	0x2c6
 2320 0377 76000000 		.4byte	0x76
 2321 037b 02       		.uleb128 0x2
 2322 037c 91       		.byte	0x91
 2323 037d 74       		.sleb128 -12
 2324 037e 00       		.byte	0
 2325 037f 0E       		.uleb128 0xe
 2326 0380 3F010000 		.4byte	.LASF46
 2327 0384 01       		.byte	0x1
 2328 0385 DA02     		.2byte	0x2da
 2329 0387 76000000 		.4byte	0x76
 2330 038b 00000000 		.4byte	.LFB17
 2331 038f 18000000 		.4byte	.LFE17-.LFB17
 2332 0393 01       		.uleb128 0x1
 2333 0394 9C       		.byte	0x9c
 2334 0395 0A       		.uleb128 0xa
 2335 0396 3F030000 		.4byte	.LASF47
 2336 039a 01       		.byte	0x1
 2337 039b F402     		.2byte	0x2f4
 2338 039d 00000000 		.4byte	.LFB18
 2339 03a1 48000000 		.4byte	.LFE18-.LFB18
 2340 03a5 01       		.uleb128 0x1
 2341 03a6 9C       		.byte	0x9c
 2342 03a7 CA030000 		.4byte	0x3ca
 2343 03ab 0C       		.uleb128 0xc
 2344 03ac 43050000 		.4byte	.LASF48
 2345 03b0 01       		.byte	0x1
 2346 03b1 F402     		.2byte	0x2f4
 2347 03b3 76000000 		.4byte	0x76
 2348 03b7 02       		.uleb128 0x2
 2349 03b8 91       		.byte	0x91
 2350 03b9 64       		.sleb128 -28
 2351 03ba 0B       		.uleb128 0xb
 2352 03bb FD040000 		.4byte	.LASF20
 2353 03bf 01       		.byte	0x1
 2354 03c0 F602     		.2byte	0x2f6
 2355 03c2 6B000000 		.4byte	0x6b
 2356 03c6 02       		.uleb128 0x2
 2357 03c7 91       		.byte	0x91
 2358 03c8 6F       		.sleb128 -17
 2359 03c9 00       		.byte	0
 2360 03ca 0D       		.uleb128 0xd
 2361 03cb 19050000 		.4byte	.LASF49
 2362 03cf 01       		.byte	0x1
 2363 03d0 0F03     		.2byte	0x30f
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 67


 2364 03d2 00000000 		.4byte	.LFB19
 2365 03d6 1C000000 		.4byte	.LFE19-.LFB19
 2366 03da 01       		.uleb128 0x1
 2367 03db 9C       		.byte	0x9c
 2368 03dc F0030000 		.4byte	0x3f0
 2369 03e0 0C       		.uleb128 0xc
 2370 03e1 4E050000 		.4byte	.LASF50
 2371 03e5 01       		.byte	0x1
 2372 03e6 0F03     		.2byte	0x30f
 2373 03e8 76000000 		.4byte	0x76
 2374 03ec 02       		.uleb128 0x2
 2375 03ed 91       		.byte	0x91
 2376 03ee 74       		.sleb128 -12
 2377 03ef 00       		.byte	0
 2378 03f0 0E       		.uleb128 0xe
 2379 03f1 43020000 		.4byte	.LASF51
 2380 03f5 01       		.byte	0x1
 2381 03f6 2303     		.2byte	0x323
 2382 03f8 76000000 		.4byte	0x76
 2383 03fc 00000000 		.4byte	.LFB20
 2384 0400 18000000 		.4byte	.LFE20-.LFB20
 2385 0404 01       		.uleb128 0x1
 2386 0405 9C       		.byte	0x9c
 2387 0406 0A       		.uleb128 0xa
 2388 0407 D1010000 		.4byte	.LASF52
 2389 040b 01       		.byte	0x1
 2390 040c 3D03     		.2byte	0x33d
 2391 040e 00000000 		.4byte	.LFB21
 2392 0412 48000000 		.4byte	.LFE21-.LFB21
 2393 0416 01       		.uleb128 0x1
 2394 0417 9C       		.byte	0x9c
 2395 0418 3B040000 		.4byte	0x43b
 2396 041c 0C       		.uleb128 0xc
 2397 041d 43050000 		.4byte	.LASF48
 2398 0421 01       		.byte	0x1
 2399 0422 3D03     		.2byte	0x33d
 2400 0424 76000000 		.4byte	0x76
 2401 0428 02       		.uleb128 0x2
 2402 0429 91       		.byte	0x91
 2403 042a 64       		.sleb128 -28
 2404 042b 0B       		.uleb128 0xb
 2405 042c FD040000 		.4byte	.LASF20
 2406 0430 01       		.byte	0x1
 2407 0431 3F03     		.2byte	0x33f
 2408 0433 6B000000 		.4byte	0x6b
 2409 0437 02       		.uleb128 0x2
 2410 0438 91       		.byte	0x91
 2411 0439 6F       		.sleb128 -17
 2412 043a 00       		.byte	0
 2413 043b 0D       		.uleb128 0xd
 2414 043c 97010000 		.4byte	.LASF53
 2415 0440 01       		.byte	0x1
 2416 0441 5A03     		.2byte	0x35a
 2417 0443 00000000 		.4byte	.LFB22
 2418 0447 1C000000 		.4byte	.LFE22-.LFB22
 2419 044b 01       		.uleb128 0x1
 2420 044c 9C       		.byte	0x9c
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 68


 2421 044d 61040000 		.4byte	0x461
 2422 0451 0C       		.uleb128 0xc
 2423 0452 54030000 		.4byte	.LASF54
 2424 0456 01       		.byte	0x1
 2425 0457 5A03     		.2byte	0x35a
 2426 0459 76000000 		.4byte	0x76
 2427 045d 02       		.uleb128 0x2
 2428 045e 91       		.byte	0x91
 2429 045f 74       		.sleb128 -12
 2430 0460 00       		.byte	0
 2431 0461 0E       		.uleb128 0xe
 2432 0462 98000000 		.4byte	.LASF55
 2433 0466 01       		.byte	0x1
 2434 0467 8403     		.2byte	0x384
 2435 0469 76000000 		.4byte	0x76
 2436 046d 00000000 		.4byte	.LFB23
 2437 0471 18000000 		.4byte	.LFE23-.LFB23
 2438 0475 01       		.uleb128 0x1
 2439 0476 9C       		.byte	0x9c
 2440 0477 0D       		.uleb128 0xd
 2441 0478 F6000000 		.4byte	.LASF56
 2442 047c 01       		.byte	0x1
 2443 047d B003     		.2byte	0x3b0
 2444 047f 00000000 		.4byte	.LFB24
 2445 0483 1C000000 		.4byte	.LFE24-.LFB24
 2446 0487 01       		.uleb128 0x1
 2447 0488 9C       		.byte	0x9c
 2448 0489 9D040000 		.4byte	0x49d
 2449 048d 0C       		.uleb128 0xc
 2450 048e F2040000 		.4byte	.LASF57
 2451 0492 01       		.byte	0x1
 2452 0493 B003     		.2byte	0x3b0
 2453 0495 76000000 		.4byte	0x76
 2454 0499 02       		.uleb128 0x2
 2455 049a 91       		.byte	0x91
 2456 049b 74       		.sleb128 -12
 2457 049c 00       		.byte	0
 2458 049d 0E       		.uleb128 0xe
 2459 049e 2A030000 		.4byte	.LASF58
 2460 04a2 01       		.byte	0x1
 2461 04a3 DA03     		.2byte	0x3da
 2462 04a5 76000000 		.4byte	0x76
 2463 04a9 00000000 		.4byte	.LFB25
 2464 04ad 18000000 		.4byte	.LFE25-.LFB25
 2465 04b1 01       		.uleb128 0x1
 2466 04b2 9C       		.byte	0x9c
 2467 04b3 0E       		.uleb128 0xe
 2468 04b4 89040000 		.4byte	.LASF59
 2469 04b8 01       		.byte	0x1
 2470 04b9 0604     		.2byte	0x406
 2471 04bb 76000000 		.4byte	0x76
 2472 04bf 00000000 		.4byte	.LFB26
 2473 04c3 18000000 		.4byte	.LFE26-.LFB26
 2474 04c7 01       		.uleb128 0x1
 2475 04c8 9C       		.byte	0x9c
 2476 04c9 0E       		.uleb128 0xe
 2477 04ca C4000000 		.4byte	.LASF60
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 69


 2478 04ce 01       		.byte	0x1
 2479 04cf 1B04     		.2byte	0x41b
 2480 04d1 76000000 		.4byte	0x76
 2481 04d5 00000000 		.4byte	.LFB27
 2482 04d9 18000000 		.4byte	.LFE27-.LFB27
 2483 04dd 01       		.uleb128 0x1
 2484 04de 9C       		.byte	0x9c
 2485 04df 0A       		.uleb128 0xa
 2486 04e0 20020000 		.4byte	.LASF61
 2487 04e4 01       		.byte	0x1
 2488 04e5 3604     		.2byte	0x436
 2489 04e7 00000000 		.4byte	.LFB28
 2490 04eb 44000000 		.4byte	.LFE28-.LFB28
 2491 04ef 01       		.uleb128 0x1
 2492 04f0 9C       		.byte	0x9c
 2493 04f1 14050000 		.4byte	0x514
 2494 04f5 0C       		.uleb128 0xc
 2495 04f6 50010000 		.4byte	.LASF62
 2496 04fa 01       		.byte	0x1
 2497 04fb 3604     		.2byte	0x436
 2498 04fd 76000000 		.4byte	0x76
 2499 0501 02       		.uleb128 0x2
 2500 0502 91       		.byte	0x91
 2501 0503 64       		.sleb128 -28
 2502 0504 0B       		.uleb128 0xb
 2503 0505 FD040000 		.4byte	.LASF20
 2504 0509 01       		.byte	0x1
 2505 050a 3804     		.2byte	0x438
 2506 050c 6B000000 		.4byte	0x6b
 2507 0510 02       		.uleb128 0x2
 2508 0511 91       		.byte	0x91
 2509 0512 6F       		.sleb128 -17
 2510 0513 00       		.byte	0
 2511 0514 0A       		.uleb128 0xa
 2512 0515 16030000 		.4byte	.LASF63
 2513 0519 01       		.byte	0x1
 2514 051a 5704     		.2byte	0x457
 2515 051c 00000000 		.4byte	.LFB29
 2516 0520 44000000 		.4byte	.LFE29-.LFB29
 2517 0524 01       		.uleb128 0x1
 2518 0525 9C       		.byte	0x9c
 2519 0526 49050000 		.4byte	0x549
 2520 052a 0C       		.uleb128 0xc
 2521 052b 50010000 		.4byte	.LASF62
 2522 052f 01       		.byte	0x1
 2523 0530 5704     		.2byte	0x457
 2524 0532 76000000 		.4byte	0x76
 2525 0536 02       		.uleb128 0x2
 2526 0537 91       		.byte	0x91
 2527 0538 64       		.sleb128 -28
 2528 0539 0B       		.uleb128 0xb
 2529 053a FD040000 		.4byte	.LASF20
 2530 053e 01       		.byte	0x1
 2531 053f 5904     		.2byte	0x459
 2532 0541 6B000000 		.4byte	0x6b
 2533 0545 02       		.uleb128 0x2
 2534 0546 91       		.byte	0x91
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 70


 2535 0547 6F       		.sleb128 -17
 2536 0548 00       		.byte	0
 2537 0549 0A       		.uleb128 0xa
 2538 054a FB030000 		.4byte	.LASF64
 2539 054e 01       		.byte	0x1
 2540 054f 7804     		.2byte	0x478
 2541 0551 00000000 		.4byte	.LFB30
 2542 0555 48000000 		.4byte	.LFE30-.LFB30
 2543 0559 01       		.uleb128 0x1
 2544 055a 9C       		.byte	0x9c
 2545 055b 7E050000 		.4byte	0x57e
 2546 055f 0C       		.uleb128 0xc
 2547 0560 50010000 		.4byte	.LASF62
 2548 0564 01       		.byte	0x1
 2549 0565 7804     		.2byte	0x478
 2550 0567 76000000 		.4byte	0x76
 2551 056b 02       		.uleb128 0x2
 2552 056c 91       		.byte	0x91
 2553 056d 64       		.sleb128 -28
 2554 056e 0B       		.uleb128 0xb
 2555 056f FD040000 		.4byte	.LASF20
 2556 0573 01       		.byte	0x1
 2557 0574 7A04     		.2byte	0x47a
 2558 0576 6B000000 		.4byte	0x6b
 2559 057a 02       		.uleb128 0x2
 2560 057b 91       		.byte	0x91
 2561 057c 6F       		.sleb128 -17
 2562 057d 00       		.byte	0
 2563 057e 0A       		.uleb128 0xa
 2564 057f 9A020000 		.4byte	.LASF65
 2565 0583 01       		.byte	0x1
 2566 0584 9804     		.2byte	0x498
 2567 0586 00000000 		.4byte	.LFB31
 2568 058a 44000000 		.4byte	.LFE31-.LFB31
 2569 058e 01       		.uleb128 0x1
 2570 058f 9C       		.byte	0x9c
 2571 0590 B3050000 		.4byte	0x5b3
 2572 0594 0C       		.uleb128 0xc
 2573 0595 50010000 		.4byte	.LASF62
 2574 0599 01       		.byte	0x1
 2575 059a 9804     		.2byte	0x498
 2576 059c 76000000 		.4byte	0x76
 2577 05a0 02       		.uleb128 0x2
 2578 05a1 91       		.byte	0x91
 2579 05a2 64       		.sleb128 -28
 2580 05a3 0B       		.uleb128 0xb
 2581 05a4 FD040000 		.4byte	.LASF20
 2582 05a8 01       		.byte	0x1
 2583 05a9 9A04     		.2byte	0x49a
 2584 05ab 6B000000 		.4byte	0x6b
 2585 05af 02       		.uleb128 0x2
 2586 05b0 91       		.byte	0x91
 2587 05b1 6F       		.sleb128 -17
 2588 05b2 00       		.byte	0
 2589 05b3 0A       		.uleb128 0xa
 2590 05b4 13010000 		.4byte	.LASF66
 2591 05b8 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 71


 2592 05b9 B904     		.2byte	0x4b9
 2593 05bb 00000000 		.4byte	.LFB32
 2594 05bf 44000000 		.4byte	.LFE32-.LFB32
 2595 05c3 01       		.uleb128 0x1
 2596 05c4 9C       		.byte	0x9c
 2597 05c5 E8050000 		.4byte	0x5e8
 2598 05c9 0C       		.uleb128 0xc
 2599 05ca 50010000 		.4byte	.LASF62
 2600 05ce 01       		.byte	0x1
 2601 05cf B904     		.2byte	0x4b9
 2602 05d1 76000000 		.4byte	0x76
 2603 05d5 02       		.uleb128 0x2
 2604 05d6 91       		.byte	0x91
 2605 05d7 64       		.sleb128 -28
 2606 05d8 0B       		.uleb128 0xb
 2607 05d9 FD040000 		.4byte	.LASF20
 2608 05dd 01       		.byte	0x1
 2609 05de BB04     		.2byte	0x4bb
 2610 05e0 6B000000 		.4byte	0x6b
 2611 05e4 02       		.uleb128 0x2
 2612 05e5 91       		.byte	0x91
 2613 05e6 6F       		.sleb128 -17
 2614 05e7 00       		.byte	0
 2615 05e8 0A       		.uleb128 0xa
 2616 05e9 74040000 		.4byte	.LASF67
 2617 05ed 01       		.byte	0x1
 2618 05ee E104     		.2byte	0x4e1
 2619 05f0 00000000 		.4byte	.LFB33
 2620 05f4 3C000000 		.4byte	.LFE33-.LFB33
 2621 05f8 01       		.uleb128 0x1
 2622 05f9 9C       		.byte	0x9c
 2623 05fa 2C060000 		.4byte	0x62c
 2624 05fe 0C       		.uleb128 0xc
 2625 05ff 7C010000 		.4byte	.LASF38
 2626 0603 01       		.byte	0x1
 2627 0604 E104     		.2byte	0x4e1
 2628 0606 76000000 		.4byte	0x76
 2629 060a 02       		.uleb128 0x2
 2630 060b 91       		.byte	0x91
 2631 060c 64       		.sleb128 -28
 2632 060d 0C       		.uleb128 0xc
 2633 060e C9010000 		.4byte	.LASF68
 2634 0612 01       		.byte	0x1
 2635 0613 E104     		.2byte	0x4e1
 2636 0615 76000000 		.4byte	0x76
 2637 0619 02       		.uleb128 0x2
 2638 061a 91       		.byte	0x91
 2639 061b 60       		.sleb128 -32
 2640 061c 0B       		.uleb128 0xb
 2641 061d FD040000 		.4byte	.LASF20
 2642 0621 01       		.byte	0x1
 2643 0622 E304     		.2byte	0x4e3
 2644 0624 6B000000 		.4byte	0x6b
 2645 0628 02       		.uleb128 0x2
 2646 0629 91       		.byte	0x91
 2647 062a 6F       		.sleb128 -17
 2648 062b 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 72


 2649 062c 0E       		.uleb128 0xe
 2650 062d 4F000000 		.4byte	.LASF69
 2651 0631 01       		.byte	0x1
 2652 0632 FE04     		.2byte	0x4fe
 2653 0634 76000000 		.4byte	0x76
 2654 0638 00000000 		.4byte	.LFB34
 2655 063c 20000000 		.4byte	.LFE34-.LFB34
 2656 0640 01       		.uleb128 0x1
 2657 0641 9C       		.byte	0x9c
 2658 0642 0D       		.uleb128 0xd
 2659 0643 17000000 		.4byte	.LASF70
 2660 0647 01       		.byte	0x1
 2661 0648 1705     		.2byte	0x517
 2662 064a 00000000 		.4byte	.LFB35
 2663 064e 18000000 		.4byte	.LFE35-.LFB35
 2664 0652 01       		.uleb128 0x1
 2665 0653 9C       		.byte	0x9c
 2666 0654 68060000 		.4byte	0x668
 2667 0658 0C       		.uleb128 0xc
 2668 0659 5A040000 		.4byte	.LASF71
 2669 065d 01       		.byte	0x1
 2670 065e 1705     		.2byte	0x517
 2671 0660 76000000 		.4byte	0x76
 2672 0664 02       		.uleb128 0x2
 2673 0665 91       		.byte	0x91
 2674 0666 74       		.sleb128 -12
 2675 0667 00       		.byte	0
 2676 0668 0E       		.uleb128 0xe
 2677 0669 AA010000 		.4byte	.LASF72
 2678 066d 01       		.byte	0x1
 2679 066e 2E05     		.2byte	0x52e
 2680 0670 76000000 		.4byte	0x76
 2681 0674 00000000 		.4byte	.LFB36
 2682 0678 14000000 		.4byte	.LFE36-.LFB36
 2683 067c 01       		.uleb128 0x1
 2684 067d 9C       		.byte	0x9c
 2685 067e 0E       		.uleb128 0xe
 2686 067f 9B040000 		.4byte	.LASF73
 2687 0683 01       		.byte	0x1
 2688 0684 4505     		.2byte	0x545
 2689 0686 76000000 		.4byte	0x76
 2690 068a 00000000 		.4byte	.LFB37
 2691 068e 14000000 		.4byte	.LFE37-.LFB37
 2692 0692 01       		.uleb128 0x1
 2693 0693 9C       		.byte	0x9c
 2694 0694 0D       		.uleb128 0xd
 2695 0695 B9040000 		.4byte	.LASF74
 2696 0699 01       		.byte	0x1
 2697 069a 5C05     		.2byte	0x55c
 2698 069c 00000000 		.4byte	.LFB38
 2699 06a0 18000000 		.4byte	.LFE38-.LFB38
 2700 06a4 01       		.uleb128 0x1
 2701 06a5 9C       		.byte	0x9c
 2702 06a6 BA060000 		.4byte	0x6ba
 2703 06aa 0C       		.uleb128 0xc
 2704 06ab 5A040000 		.4byte	.LASF71
 2705 06af 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 73


 2706 06b0 5C05     		.2byte	0x55c
 2707 06b2 76000000 		.4byte	0x76
 2708 06b6 02       		.uleb128 0x2
 2709 06b7 91       		.byte	0x91
 2710 06b8 74       		.sleb128 -12
 2711 06b9 00       		.byte	0
 2712 06ba 0D       		.uleb128 0xd
 2713 06bb 85000000 		.4byte	.LASF75
 2714 06bf 01       		.byte	0x1
 2715 06c0 7305     		.2byte	0x573
 2716 06c2 00000000 		.4byte	.LFB39
 2717 06c6 18000000 		.4byte	.LFE39-.LFB39
 2718 06ca 01       		.uleb128 0x1
 2719 06cb 9C       		.byte	0x9c
 2720 06cc E0060000 		.4byte	0x6e0
 2721 06d0 0C       		.uleb128 0xc
 2722 06d1 5A040000 		.4byte	.LASF71
 2723 06d5 01       		.byte	0x1
 2724 06d6 7305     		.2byte	0x573
 2725 06d8 76000000 		.4byte	0x76
 2726 06dc 02       		.uleb128 0x2
 2727 06dd 91       		.byte	0x91
 2728 06de 74       		.sleb128 -12
 2729 06df 00       		.byte	0
 2730 06e0 0F       		.uleb128 0xf
 2731 06e1 E2000000 		.4byte	.LASF79
 2732 06e5 01       		.byte	0x1
 2733 06e6 16       		.byte	0x16
 2734 06e7 6B000000 		.4byte	0x6b
 2735 06eb 05       		.uleb128 0x5
 2736 06ec 03       		.byte	0x3
 2737 06ed 00000000 		.4byte	TCPWM_initVar
 2738 06f1 00       		.byte	0
 2739              		.section	.debug_abbrev,"",%progbits
 2740              	.Ldebug_abbrev0:
 2741 0000 01       		.uleb128 0x1
 2742 0001 11       		.uleb128 0x11
 2743 0002 01       		.byte	0x1
 2744 0003 25       		.uleb128 0x25
 2745 0004 0E       		.uleb128 0xe
 2746 0005 13       		.uleb128 0x13
 2747 0006 0B       		.uleb128 0xb
 2748 0007 03       		.uleb128 0x3
 2749 0008 0E       		.uleb128 0xe
 2750 0009 1B       		.uleb128 0x1b
 2751 000a 0E       		.uleb128 0xe
 2752 000b 55       		.uleb128 0x55
 2753 000c 17       		.uleb128 0x17
 2754 000d 11       		.uleb128 0x11
 2755 000e 01       		.uleb128 0x1
 2756 000f 10       		.uleb128 0x10
 2757 0010 17       		.uleb128 0x17
 2758 0011 00       		.byte	0
 2759 0012 00       		.byte	0
 2760 0013 02       		.uleb128 0x2
 2761 0014 24       		.uleb128 0x24
 2762 0015 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 74


 2763 0016 0B       		.uleb128 0xb
 2764 0017 0B       		.uleb128 0xb
 2765 0018 3E       		.uleb128 0x3e
 2766 0019 0B       		.uleb128 0xb
 2767 001a 03       		.uleb128 0x3
 2768 001b 0E       		.uleb128 0xe
 2769 001c 00       		.byte	0
 2770 001d 00       		.byte	0
 2771 001e 03       		.uleb128 0x3
 2772 001f 24       		.uleb128 0x24
 2773 0020 00       		.byte	0
 2774 0021 0B       		.uleb128 0xb
 2775 0022 0B       		.uleb128 0xb
 2776 0023 3E       		.uleb128 0x3e
 2777 0024 0B       		.uleb128 0xb
 2778 0025 03       		.uleb128 0x3
 2779 0026 08       		.uleb128 0x8
 2780 0027 00       		.byte	0
 2781 0028 00       		.byte	0
 2782 0029 04       		.uleb128 0x4
 2783 002a 16       		.uleb128 0x16
 2784 002b 00       		.byte	0
 2785 002c 03       		.uleb128 0x3
 2786 002d 0E       		.uleb128 0xe
 2787 002e 3A       		.uleb128 0x3a
 2788 002f 0B       		.uleb128 0xb
 2789 0030 3B       		.uleb128 0x3b
 2790 0031 0B       		.uleb128 0xb
 2791 0032 49       		.uleb128 0x49
 2792 0033 13       		.uleb128 0x13
 2793 0034 00       		.byte	0
 2794 0035 00       		.byte	0
 2795 0036 05       		.uleb128 0x5
 2796 0037 16       		.uleb128 0x16
 2797 0038 00       		.byte	0
 2798 0039 03       		.uleb128 0x3
 2799 003a 0E       		.uleb128 0xe
 2800 003b 3A       		.uleb128 0x3a
 2801 003c 0B       		.uleb128 0xb
 2802 003d 3B       		.uleb128 0x3b
 2803 003e 05       		.uleb128 0x5
 2804 003f 49       		.uleb128 0x49
 2805 0040 13       		.uleb128 0x13
 2806 0041 00       		.byte	0
 2807 0042 00       		.byte	0
 2808 0043 06       		.uleb128 0x6
 2809 0044 35       		.uleb128 0x35
 2810 0045 00       		.byte	0
 2811 0046 49       		.uleb128 0x49
 2812 0047 13       		.uleb128 0x13
 2813 0048 00       		.byte	0
 2814 0049 00       		.byte	0
 2815 004a 07       		.uleb128 0x7
 2816 004b 2E       		.uleb128 0x2e
 2817 004c 00       		.byte	0
 2818 004d 3F       		.uleb128 0x3f
 2819 004e 19       		.uleb128 0x19
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 75


 2820 004f 03       		.uleb128 0x3
 2821 0050 0E       		.uleb128 0xe
 2822 0051 3A       		.uleb128 0x3a
 2823 0052 0B       		.uleb128 0xb
 2824 0053 3B       		.uleb128 0x3b
 2825 0054 0B       		.uleb128 0xb
 2826 0055 27       		.uleb128 0x27
 2827 0056 19       		.uleb128 0x19
 2828 0057 11       		.uleb128 0x11
 2829 0058 01       		.uleb128 0x1
 2830 0059 12       		.uleb128 0x12
 2831 005a 06       		.uleb128 0x6
 2832 005b 40       		.uleb128 0x40
 2833 005c 18       		.uleb128 0x18
 2834 005d 9642     		.uleb128 0x2116
 2835 005f 19       		.uleb128 0x19
 2836 0060 00       		.byte	0
 2837 0061 00       		.byte	0
 2838 0062 08       		.uleb128 0x8
 2839 0063 2E       		.uleb128 0x2e
 2840 0064 01       		.byte	0x1
 2841 0065 3F       		.uleb128 0x3f
 2842 0066 19       		.uleb128 0x19
 2843 0067 03       		.uleb128 0x3
 2844 0068 0E       		.uleb128 0xe
 2845 0069 3A       		.uleb128 0x3a
 2846 006a 0B       		.uleb128 0xb
 2847 006b 3B       		.uleb128 0x3b
 2848 006c 0B       		.uleb128 0xb
 2849 006d 27       		.uleb128 0x27
 2850 006e 19       		.uleb128 0x19
 2851 006f 11       		.uleb128 0x11
 2852 0070 01       		.uleb128 0x1
 2853 0071 12       		.uleb128 0x12
 2854 0072 06       		.uleb128 0x6
 2855 0073 40       		.uleb128 0x40
 2856 0074 18       		.uleb128 0x18
 2857 0075 9642     		.uleb128 0x2116
 2858 0077 19       		.uleb128 0x19
 2859 0078 01       		.uleb128 0x1
 2860 0079 13       		.uleb128 0x13
 2861 007a 00       		.byte	0
 2862 007b 00       		.byte	0
 2863 007c 09       		.uleb128 0x9
 2864 007d 34       		.uleb128 0x34
 2865 007e 00       		.byte	0
 2866 007f 03       		.uleb128 0x3
 2867 0080 0E       		.uleb128 0xe
 2868 0081 3A       		.uleb128 0x3a
 2869 0082 0B       		.uleb128 0xb
 2870 0083 3B       		.uleb128 0x3b
 2871 0084 0B       		.uleb128 0xb
 2872 0085 49       		.uleb128 0x49
 2873 0086 13       		.uleb128 0x13
 2874 0087 02       		.uleb128 0x2
 2875 0088 18       		.uleb128 0x18
 2876 0089 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 76


 2877 008a 00       		.byte	0
 2878 008b 0A       		.uleb128 0xa
 2879 008c 2E       		.uleb128 0x2e
 2880 008d 01       		.byte	0x1
 2881 008e 3F       		.uleb128 0x3f
 2882 008f 19       		.uleb128 0x19
 2883 0090 03       		.uleb128 0x3
 2884 0091 0E       		.uleb128 0xe
 2885 0092 3A       		.uleb128 0x3a
 2886 0093 0B       		.uleb128 0xb
 2887 0094 3B       		.uleb128 0x3b
 2888 0095 05       		.uleb128 0x5
 2889 0096 27       		.uleb128 0x27
 2890 0097 19       		.uleb128 0x19
 2891 0098 11       		.uleb128 0x11
 2892 0099 01       		.uleb128 0x1
 2893 009a 12       		.uleb128 0x12
 2894 009b 06       		.uleb128 0x6
 2895 009c 40       		.uleb128 0x40
 2896 009d 18       		.uleb128 0x18
 2897 009e 9642     		.uleb128 0x2116
 2898 00a0 19       		.uleb128 0x19
 2899 00a1 01       		.uleb128 0x1
 2900 00a2 13       		.uleb128 0x13
 2901 00a3 00       		.byte	0
 2902 00a4 00       		.byte	0
 2903 00a5 0B       		.uleb128 0xb
 2904 00a6 34       		.uleb128 0x34
 2905 00a7 00       		.byte	0
 2906 00a8 03       		.uleb128 0x3
 2907 00a9 0E       		.uleb128 0xe
 2908 00aa 3A       		.uleb128 0x3a
 2909 00ab 0B       		.uleb128 0xb
 2910 00ac 3B       		.uleb128 0x3b
 2911 00ad 05       		.uleb128 0x5
 2912 00ae 49       		.uleb128 0x49
 2913 00af 13       		.uleb128 0x13
 2914 00b0 02       		.uleb128 0x2
 2915 00b1 18       		.uleb128 0x18
 2916 00b2 00       		.byte	0
 2917 00b3 00       		.byte	0
 2918 00b4 0C       		.uleb128 0xc
 2919 00b5 05       		.uleb128 0x5
 2920 00b6 00       		.byte	0
 2921 00b7 03       		.uleb128 0x3
 2922 00b8 0E       		.uleb128 0xe
 2923 00b9 3A       		.uleb128 0x3a
 2924 00ba 0B       		.uleb128 0xb
 2925 00bb 3B       		.uleb128 0x3b
 2926 00bc 05       		.uleb128 0x5
 2927 00bd 49       		.uleb128 0x49
 2928 00be 13       		.uleb128 0x13
 2929 00bf 02       		.uleb128 0x2
 2930 00c0 18       		.uleb128 0x18
 2931 00c1 00       		.byte	0
 2932 00c2 00       		.byte	0
 2933 00c3 0D       		.uleb128 0xd
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 77


 2934 00c4 2E       		.uleb128 0x2e
 2935 00c5 01       		.byte	0x1
 2936 00c6 3F       		.uleb128 0x3f
 2937 00c7 19       		.uleb128 0x19
 2938 00c8 03       		.uleb128 0x3
 2939 00c9 0E       		.uleb128 0xe
 2940 00ca 3A       		.uleb128 0x3a
 2941 00cb 0B       		.uleb128 0xb
 2942 00cc 3B       		.uleb128 0x3b
 2943 00cd 05       		.uleb128 0x5
 2944 00ce 27       		.uleb128 0x27
 2945 00cf 19       		.uleb128 0x19
 2946 00d0 11       		.uleb128 0x11
 2947 00d1 01       		.uleb128 0x1
 2948 00d2 12       		.uleb128 0x12
 2949 00d3 06       		.uleb128 0x6
 2950 00d4 40       		.uleb128 0x40
 2951 00d5 18       		.uleb128 0x18
 2952 00d6 9742     		.uleb128 0x2117
 2953 00d8 19       		.uleb128 0x19
 2954 00d9 01       		.uleb128 0x1
 2955 00da 13       		.uleb128 0x13
 2956 00db 00       		.byte	0
 2957 00dc 00       		.byte	0
 2958 00dd 0E       		.uleb128 0xe
 2959 00de 2E       		.uleb128 0x2e
 2960 00df 00       		.byte	0
 2961 00e0 3F       		.uleb128 0x3f
 2962 00e1 19       		.uleb128 0x19
 2963 00e2 03       		.uleb128 0x3
 2964 00e3 0E       		.uleb128 0xe
 2965 00e4 3A       		.uleb128 0x3a
 2966 00e5 0B       		.uleb128 0xb
 2967 00e6 3B       		.uleb128 0x3b
 2968 00e7 05       		.uleb128 0x5
 2969 00e8 27       		.uleb128 0x27
 2970 00e9 19       		.uleb128 0x19
 2971 00ea 49       		.uleb128 0x49
 2972 00eb 13       		.uleb128 0x13
 2973 00ec 11       		.uleb128 0x11
 2974 00ed 01       		.uleb128 0x1
 2975 00ee 12       		.uleb128 0x12
 2976 00ef 06       		.uleb128 0x6
 2977 00f0 40       		.uleb128 0x40
 2978 00f1 18       		.uleb128 0x18
 2979 00f2 9742     		.uleb128 0x2117
 2980 00f4 19       		.uleb128 0x19
 2981 00f5 00       		.byte	0
 2982 00f6 00       		.byte	0
 2983 00f7 0F       		.uleb128 0xf
 2984 00f8 34       		.uleb128 0x34
 2985 00f9 00       		.byte	0
 2986 00fa 03       		.uleb128 0x3
 2987 00fb 0E       		.uleb128 0xe
 2988 00fc 3A       		.uleb128 0x3a
 2989 00fd 0B       		.uleb128 0xb
 2990 00fe 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 78


 2991 00ff 0B       		.uleb128 0xb
 2992 0100 49       		.uleb128 0x49
 2993 0101 13       		.uleb128 0x13
 2994 0102 3F       		.uleb128 0x3f
 2995 0103 19       		.uleb128 0x19
 2996 0104 02       		.uleb128 0x2
 2997 0105 18       		.uleb128 0x18
 2998 0106 00       		.byte	0
 2999 0107 00       		.byte	0
 3000 0108 00       		.byte	0
 3001              		.section	.debug_aranges,"",%progbits
 3002 0000 54010000 		.4byte	0x154
 3003 0004 0200     		.2byte	0x2
 3004 0006 00000000 		.4byte	.Ldebug_info0
 3005 000a 04       		.byte	0x4
 3006 000b 00       		.byte	0
 3007 000c 0000     		.2byte	0
 3008 000e 0000     		.2byte	0
 3009 0010 00000000 		.4byte	.LFB0
 3010 0014 40000000 		.4byte	.LFE0-.LFB0
 3011 0018 00000000 		.4byte	.LFB1
 3012 001c 38000000 		.4byte	.LFE1-.LFB1
 3013 0020 00000000 		.4byte	.LFB2
 3014 0024 24000000 		.4byte	.LFE2-.LFB2
 3015 0028 00000000 		.4byte	.LFB3
 3016 002c 30000000 		.4byte	.LFE3-.LFB3
 3017 0030 00000000 		.4byte	.LFB4
 3018 0034 48000000 		.4byte	.LFE4-.LFB4
 3019 0038 00000000 		.4byte	.LFB5
 3020 003c 48000000 		.4byte	.LFE5-.LFB5
 3021 0040 00000000 		.4byte	.LFB6
 3022 0044 48000000 		.4byte	.LFE6-.LFB6
 3023 0048 00000000 		.4byte	.LFB7
 3024 004c 4C000000 		.4byte	.LFE7-.LFB7
 3025 0050 00000000 		.4byte	.LFB8
 3026 0054 1C000000 		.4byte	.LFE8-.LFB8
 3027 0058 00000000 		.4byte	.LFB9
 3028 005c 48000000 		.4byte	.LFE9-.LFB9
 3029 0060 00000000 		.4byte	.LFB10
 3030 0064 48000000 		.4byte	.LFE10-.LFB10
 3031 0068 00000000 		.4byte	.LFB11
 3032 006c 4C000000 		.4byte	.LFE11-.LFB11
 3033 0070 00000000 		.4byte	.LFB12
 3034 0074 48000000 		.4byte	.LFE12-.LFB12
 3035 0078 00000000 		.4byte	.LFB13
 3036 007c 1C000000 		.4byte	.LFE13-.LFB13
 3037 0080 00000000 		.4byte	.LFB14
 3038 0084 18000000 		.4byte	.LFE14-.LFB14
 3039 0088 00000000 		.4byte	.LFB15
 3040 008c 48000000 		.4byte	.LFE15-.LFB15
 3041 0090 00000000 		.4byte	.LFB16
 3042 0094 1C000000 		.4byte	.LFE16-.LFB16
 3043 0098 00000000 		.4byte	.LFB17
 3044 009c 18000000 		.4byte	.LFE17-.LFB17
 3045 00a0 00000000 		.4byte	.LFB18
 3046 00a4 48000000 		.4byte	.LFE18-.LFB18
 3047 00a8 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 79


 3048 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3049 00b0 00000000 		.4byte	.LFB20
 3050 00b4 18000000 		.4byte	.LFE20-.LFB20
 3051 00b8 00000000 		.4byte	.LFB21
 3052 00bc 48000000 		.4byte	.LFE21-.LFB21
 3053 00c0 00000000 		.4byte	.LFB22
 3054 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3055 00c8 00000000 		.4byte	.LFB23
 3056 00cc 18000000 		.4byte	.LFE23-.LFB23
 3057 00d0 00000000 		.4byte	.LFB24
 3058 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3059 00d8 00000000 		.4byte	.LFB25
 3060 00dc 18000000 		.4byte	.LFE25-.LFB25
 3061 00e0 00000000 		.4byte	.LFB26
 3062 00e4 18000000 		.4byte	.LFE26-.LFB26
 3063 00e8 00000000 		.4byte	.LFB27
 3064 00ec 18000000 		.4byte	.LFE27-.LFB27
 3065 00f0 00000000 		.4byte	.LFB28
 3066 00f4 44000000 		.4byte	.LFE28-.LFB28
 3067 00f8 00000000 		.4byte	.LFB29
 3068 00fc 44000000 		.4byte	.LFE29-.LFB29
 3069 0100 00000000 		.4byte	.LFB30
 3070 0104 48000000 		.4byte	.LFE30-.LFB30
 3071 0108 00000000 		.4byte	.LFB31
 3072 010c 44000000 		.4byte	.LFE31-.LFB31
 3073 0110 00000000 		.4byte	.LFB32
 3074 0114 44000000 		.4byte	.LFE32-.LFB32
 3075 0118 00000000 		.4byte	.LFB33
 3076 011c 3C000000 		.4byte	.LFE33-.LFB33
 3077 0120 00000000 		.4byte	.LFB34
 3078 0124 20000000 		.4byte	.LFE34-.LFB34
 3079 0128 00000000 		.4byte	.LFB35
 3080 012c 18000000 		.4byte	.LFE35-.LFB35
 3081 0130 00000000 		.4byte	.LFB36
 3082 0134 14000000 		.4byte	.LFE36-.LFB36
 3083 0138 00000000 		.4byte	.LFB37
 3084 013c 14000000 		.4byte	.LFE37-.LFB37
 3085 0140 00000000 		.4byte	.LFB38
 3086 0144 18000000 		.4byte	.LFE38-.LFB38
 3087 0148 00000000 		.4byte	.LFB39
 3088 014c 18000000 		.4byte	.LFE39-.LFB39
 3089 0150 00000000 		.4byte	0
 3090 0154 00000000 		.4byte	0
 3091              		.section	.debug_ranges,"",%progbits
 3092              	.Ldebug_ranges0:
 3093 0000 00000000 		.4byte	.LFB0
 3094 0004 40000000 		.4byte	.LFE0
 3095 0008 00000000 		.4byte	.LFB1
 3096 000c 38000000 		.4byte	.LFE1
 3097 0010 00000000 		.4byte	.LFB2
 3098 0014 24000000 		.4byte	.LFE2
 3099 0018 00000000 		.4byte	.LFB3
 3100 001c 30000000 		.4byte	.LFE3
 3101 0020 00000000 		.4byte	.LFB4
 3102 0024 48000000 		.4byte	.LFE4
 3103 0028 00000000 		.4byte	.LFB5
 3104 002c 48000000 		.4byte	.LFE5
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 80


 3105 0030 00000000 		.4byte	.LFB6
 3106 0034 48000000 		.4byte	.LFE6
 3107 0038 00000000 		.4byte	.LFB7
 3108 003c 4C000000 		.4byte	.LFE7
 3109 0040 00000000 		.4byte	.LFB8
 3110 0044 1C000000 		.4byte	.LFE8
 3111 0048 00000000 		.4byte	.LFB9
 3112 004c 48000000 		.4byte	.LFE9
 3113 0050 00000000 		.4byte	.LFB10
 3114 0054 48000000 		.4byte	.LFE10
 3115 0058 00000000 		.4byte	.LFB11
 3116 005c 4C000000 		.4byte	.LFE11
 3117 0060 00000000 		.4byte	.LFB12
 3118 0064 48000000 		.4byte	.LFE12
 3119 0068 00000000 		.4byte	.LFB13
 3120 006c 1C000000 		.4byte	.LFE13
 3121 0070 00000000 		.4byte	.LFB14
 3122 0074 18000000 		.4byte	.LFE14
 3123 0078 00000000 		.4byte	.LFB15
 3124 007c 48000000 		.4byte	.LFE15
 3125 0080 00000000 		.4byte	.LFB16
 3126 0084 1C000000 		.4byte	.LFE16
 3127 0088 00000000 		.4byte	.LFB17
 3128 008c 18000000 		.4byte	.LFE17
 3129 0090 00000000 		.4byte	.LFB18
 3130 0094 48000000 		.4byte	.LFE18
 3131 0098 00000000 		.4byte	.LFB19
 3132 009c 1C000000 		.4byte	.LFE19
 3133 00a0 00000000 		.4byte	.LFB20
 3134 00a4 18000000 		.4byte	.LFE20
 3135 00a8 00000000 		.4byte	.LFB21
 3136 00ac 48000000 		.4byte	.LFE21
 3137 00b0 00000000 		.4byte	.LFB22
 3138 00b4 1C000000 		.4byte	.LFE22
 3139 00b8 00000000 		.4byte	.LFB23
 3140 00bc 18000000 		.4byte	.LFE23
 3141 00c0 00000000 		.4byte	.LFB24
 3142 00c4 1C000000 		.4byte	.LFE24
 3143 00c8 00000000 		.4byte	.LFB25
 3144 00cc 18000000 		.4byte	.LFE25
 3145 00d0 00000000 		.4byte	.LFB26
 3146 00d4 18000000 		.4byte	.LFE26
 3147 00d8 00000000 		.4byte	.LFB27
 3148 00dc 18000000 		.4byte	.LFE27
 3149 00e0 00000000 		.4byte	.LFB28
 3150 00e4 44000000 		.4byte	.LFE28
 3151 00e8 00000000 		.4byte	.LFB29
 3152 00ec 44000000 		.4byte	.LFE29
 3153 00f0 00000000 		.4byte	.LFB30
 3154 00f4 48000000 		.4byte	.LFE30
 3155 00f8 00000000 		.4byte	.LFB31
 3156 00fc 44000000 		.4byte	.LFE31
 3157 0100 00000000 		.4byte	.LFB32
 3158 0104 44000000 		.4byte	.LFE32
 3159 0108 00000000 		.4byte	.LFB33
 3160 010c 3C000000 		.4byte	.LFE33
 3161 0110 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 81


 3162 0114 20000000 		.4byte	.LFE34
 3163 0118 00000000 		.4byte	.LFB35
 3164 011c 18000000 		.4byte	.LFE35
 3165 0120 00000000 		.4byte	.LFB36
 3166 0124 14000000 		.4byte	.LFE36
 3167 0128 00000000 		.4byte	.LFB37
 3168 012c 14000000 		.4byte	.LFE37
 3169 0130 00000000 		.4byte	.LFB38
 3170 0134 18000000 		.4byte	.LFE38
 3171 0138 00000000 		.4byte	.LFB39
 3172 013c 18000000 		.4byte	.LFE39
 3173 0140 00000000 		.4byte	0
 3174 0144 00000000 		.4byte	0
 3175              		.section	.debug_line,"",%progbits
 3176              	.Ldebug_line0:
 3177 0000 6C030000 		.section	.debug_str,"MS",%progbits,1
 3177      02004400 
 3177      00000201 
 3177      FB0E0D00 
 3177      01010101 
 3178              	.LASF40:
 3179 0000 636F756E 		.ascii	"count\000"
 3179      7400
 3180              	.LASF27:
 3181 0006 54435057 		.ascii	"TCPWM_SetOneShot\000"
 3181      4D5F5365 
 3181      744F6E65 
 3181      53686F74 
 3181      00
 3182              	.LASF70:
 3183 0017 54435057 		.ascii	"TCPWM_SetInterruptMode\000"
 3183      4D5F5365 
 3183      74496E74 
 3183      65727275 
 3183      70744D6F 
 3184              	.LASF77:
 3185 002e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\TCPWM.c\000"
 3185      6E657261 
 3185      7465645F 
 3185      536F7572 
 3185      63655C50 
 3186              	.LASF69:
 3187 004f 54435057 		.ascii	"TCPWM_ReadStatus\000"
 3187      4D5F5265 
 3187      61645374 
 3187      61747573 
 3187      00
 3188              	.LASF44:
 3189 0060 70657269 		.ascii	"period\000"
 3189      6F6400
 3190              	.LASF7:
 3191 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 3191      206C6F6E 
 3191      6720756E 
 3191      7369676E 
 3191      65642069 
 3192              	.LASF24:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 82


 3193 007e 71644D6F 		.ascii	"qdMode\000"
 3193      646500
 3194              	.LASF75:
 3195 0085 54435057 		.ascii	"TCPWM_SetInterrupt\000"
 3195      4D5F5365 
 3195      74496E74 
 3195      65727275 
 3195      707400
 3196              	.LASF55:
 3197 0098 54435057 		.ascii	"TCPWM_ReadCompare\000"
 3197      4D5F5265 
 3197      6164436F 
 3197      6D706172 
 3197      6500
 3198              	.LASF6:
 3199 00aa 6C6F6E67 		.ascii	"long long int\000"
 3199      206C6F6E 
 3199      6720696E 
 3199      7400
 3200              	.LASF0:
 3201 00b8 7369676E 		.ascii	"signed char\000"
 3201      65642063 
 3201      68617200 
 3202              	.LASF60:
 3203 00c4 54435057 		.ascii	"TCPWM_ReadCaptureBuf\000"
 3203      4D5F5265 
 3203      61644361 
 3203      70747572 
 3203      65427566 
 3204              	.LASF4:
 3205 00d9 6C6F6E67 		.ascii	"long int\000"
 3205      20696E74 
 3205      00
 3206              	.LASF79:
 3207 00e2 54435057 		.ascii	"TCPWM_initVar\000"
 3207      4D5F696E 
 3207      69745661 
 3207      7200
 3208              	.LASF9:
 3209 00f0 75696E74 		.ascii	"uint8\000"
 3209      3800
 3210              	.LASF56:
 3211 00f6 54435057 		.ascii	"TCPWM_WriteCompareBuf\000"
 3211      4D5F5772 
 3211      69746543 
 3211      6F6D7061 
 3211      72654275 
 3212              	.LASF12:
 3213 010c 646F7562 		.ascii	"double\000"
 3213      6C6500
 3214              	.LASF66:
 3215 0113 54435057 		.ascii	"TCPWM_SetCountMode\000"
 3215      4D5F5365 
 3215      74436F75 
 3215      6E744D6F 
 3215      646500
 3216              	.LASF10:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 83


 3217 0126 75696E74 		.ascii	"uint32\000"
 3217      333200
 3218              	.LASF45:
 3219 012d 54435057 		.ascii	"TCPWM_ReadCounter\000"
 3219      4D5F5265 
 3219      6164436F 
 3219      756E7465 
 3219      7200
 3220              	.LASF46:
 3221 013f 54435057 		.ascii	"TCPWM_ReadPeriod\000"
 3221      4D5F5265 
 3221      61645065 
 3221      72696F64 
 3221      00
 3222              	.LASF62:
 3223 0150 74726967 		.ascii	"triggerMode\000"
 3223      6765724D 
 3223      6F646500 
 3224              	.LASF16:
 3225 015c 54435057 		.ascii	"TCPWM_Init\000"
 3225      4D5F496E 
 3225      697400
 3226              	.LASF41:
 3227 0167 54435057 		.ascii	"TCPWM_SetCounterMode\000"
 3227      4D5F5365 
 3227      74436F75 
 3227      6E746572 
 3227      4D6F6465 
 3228              	.LASF38:
 3229 017c 6D61736B 		.ascii	"mask\000"
 3229      00
 3230              	.LASF36:
 3231 0181 64656164 		.ascii	"deadTime\000"
 3231      54696D65 
 3231      00
 3232              	.LASF8:
 3233 018a 756E7369 		.ascii	"unsigned int\000"
 3233      676E6564 
 3233      20696E74 
 3233      00
 3234              	.LASF53:
 3235 0197 54435057 		.ascii	"TCPWM_WriteCompare\000"
 3235      4D5F5772 
 3235      69746543 
 3235      6F6D7061 
 3235      726500
 3236              	.LASF72:
 3237 01aa 54435057 		.ascii	"TCPWM_GetInterruptSourceMasked\000"
 3237      4D5F4765 
 3237      74496E74 
 3237      65727275 
 3237      7074536F 
 3238              	.LASF68:
 3239 01c9 636F6D6D 		.ascii	"command\000"
 3239      616E6400 
 3240              	.LASF52:
 3241 01d1 54435057 		.ascii	"TCPWM_SetPeriodSwap\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 84


 3241      4D5F5365 
 3241      74506572 
 3241      696F6453 
 3241      77617000 
 3242              	.LASF5:
 3243 01e5 6C6F6E67 		.ascii	"long unsigned int\000"
 3243      20756E73 
 3243      69676E65 
 3243      6420696E 
 3243      7400
 3244              	.LASF30:
 3245 01f7 6D6F6465 		.ascii	"modeMask\000"
 3245      4D61736B 
 3245      00
 3246              	.LASF3:
 3247 0200 73686F72 		.ascii	"short unsigned int\000"
 3247      7420756E 
 3247      7369676E 
 3247      65642069 
 3247      6E7400
 3248              	.LASF18:
 3249 0213 54435057 		.ascii	"TCPWM_Enable\000"
 3249      4D5F456E 
 3249      61626C65 
 3249      00
 3250              	.LASF61:
 3251 0220 54435057 		.ascii	"TCPWM_SetCaptureMode\000"
 3251      4D5F5365 
 3251      74436170 
 3251      74757265 
 3251      4D6F6465 
 3252              	.LASF28:
 3253 0235 6F6E6553 		.ascii	"oneShotEnable\000"
 3253      686F7445 
 3253      6E61626C 
 3253      6500
 3254              	.LASF51:
 3255 0243 54435057 		.ascii	"TCPWM_ReadPeriodBuf\000"
 3255      4D5F5265 
 3255      61645065 
 3255      72696F64 
 3255      42756600 
 3256              	.LASF78:
 3257 0257 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\IR LCD\\IR_LCD\\IR_LCD.c"
 3257      73657273 
 3257      5C41646D 
 3257      696E5C44 
 3257      65736B74 
 3258 0284 7964736E 		.ascii	"ydsn\000"
 3258      00
 3259              	.LASF29:
 3260 0289 54435057 		.ascii	"TCPWM_SetPWMMode\000"
 3260      4D5F5365 
 3260      7450574D 
 3260      4D6F6465 
 3260      00
 3261              	.LASF65:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 85


 3262 029a 54435057 		.ascii	"TCPWM_SetStopMode\000"
 3262      4D5F5365 
 3262      7453746F 
 3262      704D6F64 
 3262      6500
 3263              	.LASF43:
 3264 02ac 54435057 		.ascii	"TCPWM_WritePeriod\000"
 3264      4D5F5772 
 3264      69746550 
 3264      6572696F 
 3264      6400
 3265              	.LASF39:
 3266 02be 54435057 		.ascii	"TCPWM_WriteCounter\000"
 3266      4D5F5772 
 3266      69746543 
 3266      6F756E74 
 3266      657200
 3267              	.LASF14:
 3268 02d1 72656733 		.ascii	"reg32\000"
 3268      3200
 3269              	.LASF22:
 3270 02d7 54435057 		.ascii	"TCPWM_SetQDMode\000"
 3270      4D5F5365 
 3270      7451444D 
 3270      6F646500 
 3271              	.LASF33:
 3272 02e7 54435057 		.ascii	"TCPWM_SetPWMStopOnKill\000"
 3272      4D5F5365 
 3272      7450574D 
 3272      53746F70 
 3272      4F6E4B69 
 3273              	.LASF15:
 3274 02fe 73697A65 		.ascii	"sizetype\000"
 3274      74797065 
 3274      00
 3275              	.LASF32:
 3276 0307 73796E63 		.ascii	"syncKillEnable\000"
 3276      4B696C6C 
 3276      456E6162 
 3276      6C6500
 3277              	.LASF63:
 3278 0316 54435057 		.ascii	"TCPWM_SetReloadMode\000"
 3278      4D5F5365 
 3278      7452656C 
 3278      6F61644D 
 3278      6F646500 
 3279              	.LASF58:
 3280 032a 54435057 		.ascii	"TCPWM_ReadCompareBuf\000"
 3280      4D5F5265 
 3280      6164436F 
 3280      6D706172 
 3280      65427566 
 3281              	.LASF47:
 3282 033f 54435057 		.ascii	"TCPWM_SetCompareSwap\000"
 3282      4D5F5365 
 3282      74436F6D 
 3282      70617265 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 86


 3282      53776170 
 3283              	.LASF54:
 3284 0354 636F6D70 		.ascii	"compare\000"
 3284      61726500 
 3285              	.LASF11:
 3286 035c 666C6F61 		.ascii	"float\000"
 3286      7400
 3287              	.LASF26:
 3288 0362 70726573 		.ascii	"prescaler\000"
 3288      63616C65 
 3288      7200
 3289              	.LASF37:
 3290 036c 54435057 		.ascii	"TCPWM_SetPWMInvert\000"
 3290      4D5F5365 
 3290      7450574D 
 3290      496E7665 
 3290      727400
 3291              	.LASF76:
 3292 037f 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3292      4320342E 
 3292      382E3420 
 3292      32303134 
 3292      30353236 
 3293 03b2 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3293      20726576 
 3293      6973696F 
 3293      6E203231 
 3293      31333538 
 3294 03e5 30202D66 		.ascii	"0 -ffunction-sections\000"
 3294      66756E63 
 3294      74696F6E 
 3294      2D736563 
 3294      74696F6E 
 3295              	.LASF64:
 3296 03fb 54435057 		.ascii	"TCPWM_SetStartMode\000"
 3296      4D5F5365 
 3296      74537461 
 3296      72744D6F 
 3296      646500
 3297              	.LASF21:
 3298 040e 54435057 		.ascii	"TCPWM_SetMode\000"
 3298      4D5F5365 
 3298      744D6F64 
 3298      6500
 3299              	.LASF31:
 3300 041c 54435057 		.ascii	"TCPWM_SetPWMSyncKill\000"
 3300      4D5F5365 
 3300      7450574D 
 3300      53796E63 
 3300      4B696C6C 
 3301              	.LASF1:
 3302 0431 756E7369 		.ascii	"unsigned char\000"
 3302      676E6564 
 3302      20636861 
 3302      7200
 3303              	.LASF34:
 3304 043f 73746F70 		.ascii	"stopOnKillEnable\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 87


 3304      4F6E4B69 
 3304      6C6C456E 
 3304      61626C65 
 3304      00
 3305              	.LASF2:
 3306 0450 73686F72 		.ascii	"short int\000"
 3306      7420696E 
 3306      7400
 3307              	.LASF71:
 3308 045a 696E7465 		.ascii	"interruptMask\000"
 3308      72727570 
 3308      744D6173 
 3308      6B00
 3309              	.LASF17:
 3310 0468 54435057 		.ascii	"TCPWM_Start\000"
 3310      4D5F5374 
 3310      61727400 
 3311              	.LASF67:
 3312 0474 54435057 		.ascii	"TCPWM_TriggerCommand\000"
 3312      4D5F5472 
 3312      69676765 
 3312      72436F6D 
 3312      6D616E64 
 3313              	.LASF59:
 3314 0489 54435057 		.ascii	"TCPWM_ReadCapture\000"
 3314      4D5F5265 
 3314      61644361 
 3314      70747572 
 3314      6500
 3315              	.LASF73:
 3316 049b 54435057 		.ascii	"TCPWM_GetInterruptSource\000"
 3316      4D5F4765 
 3316      74496E74 
 3316      65727275 
 3316      7074536F 
 3317              	.LASF13:
 3318 04b4 63686172 		.ascii	"char\000"
 3318      00
 3319              	.LASF74:
 3320 04b9 54435057 		.ascii	"TCPWM_ClearInterrupt\000"
 3320      4D5F436C 
 3320      65617249 
 3320      6E746572 
 3320      72757074 
 3321              	.LASF23:
 3322 04ce 6D6F6465 		.ascii	"mode\000"
 3322      00
 3323              	.LASF25:
 3324 04d3 54435057 		.ascii	"TCPWM_SetPrescaler\000"
 3324      4D5F5365 
 3324      74507265 
 3324      7363616C 
 3324      657200
 3325              	.LASF42:
 3326 04e6 636F756E 		.ascii	"counterMode\000"
 3326      7465724D 
 3326      6F646500 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccHNmju6.s 			page 88


 3327              	.LASF57:
 3328 04f2 636F6D70 		.ascii	"compareBuf\000"
 3328      61726542 
 3328      756600
 3329              	.LASF20:
 3330 04fd 656E6162 		.ascii	"enableInterrupts\000"
 3330      6C65496E 
 3330      74657272 
 3330      75707473 
 3330      00
 3331              	.LASF19:
 3332 050e 54435057 		.ascii	"TCPWM_Stop\000"
 3332      4D5F5374 
 3332      6F7000
 3333              	.LASF49:
 3334 0519 54435057 		.ascii	"TCPWM_WritePeriodBuf\000"
 3334      4D5F5772 
 3334      69746550 
 3334      6572696F 
 3334      64427566 
 3335              	.LASF35:
 3336 052e 54435057 		.ascii	"TCPWM_SetPWMDeadTime\000"
 3336      4D5F5365 
 3336      7450574D 
 3336      44656164 
 3336      54696D65 
 3337              	.LASF48:
 3338 0543 73776170 		.ascii	"swapEnable\000"
 3338      456E6162 
 3338      6C6500
 3339              	.LASF50:
 3340 054e 70657269 		.ascii	"periodBuf\000"
 3340      6F644275 
 3340      6600
 3341              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

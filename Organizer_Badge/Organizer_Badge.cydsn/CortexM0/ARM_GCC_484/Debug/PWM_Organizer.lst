ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_Organizer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_Organizer_initVar
  18              		.bss
  19              		.type	PWM_Organizer_initVar, %object
  20              		.size	PWM_Organizer_initVar, 1
  21              	PWM_Organizer_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_Organizer_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_Organizer_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_Organizer_Start, %function
  29              	PWM_Organizer_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_Organizer.c"
   1:.\Generated_Source\PSoC4/PWM_Organizer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_Organizer.c **** * File Name: PWM_Organizer.c
   3:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
   5:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  15:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  17:.\Generated_Source\PSoC4/PWM_Organizer.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_Organizer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_Organizer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_Organizer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_Organizer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  24:.\Generated_Source\PSoC4/PWM_Organizer.c **** #include "PWM_Organizer.h"
  25:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  26:.\Generated_Source\PSoC4/PWM_Organizer.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_Organizer.c **** #ifdef PWM_Organizer_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #error PWM_v3_10 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_Organizer.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* PWM_Organizer_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  32:.\Generated_Source\PSoC4/PWM_Organizer.c **** uint8 PWM_Organizer_initVar = 0u;
  33:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  34:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  35:.\Generated_Source\PSoC4/PWM_Organizer.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Function Name: PWM_Organizer_Start
  37:.\Generated_Source\PSoC4/PWM_Organizer.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  39:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  44:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  47:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  50:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  PWM_Organizer_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_Organizer.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  54:.\Generated_Source\PSoC4/PWM_Organizer.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_Organizer.c **** void PWM_Organizer_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_Organizer.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_Organizer.c ****     if(PWM_Organizer_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
  60:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_Organizer_Init
  61:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
  63:.\Generated_Source\PSoC4/PWM_Organizer.c ****     PWM_Organizer_Enable();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_Organizer_Enable
  64:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  65:.\Generated_Source\PSoC4/PWM_Organizer.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_Organizer_initVar
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	PWM_Organizer_Start, .-PWM_Organizer_Start
  65              		.section	.text.PWM_Organizer_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_Organizer_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_Organizer_Init, %function
  71              	PWM_Organizer_Init:
  72              	.LFB1:
  66:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  67:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  68:.\Generated_Source\PSoC4/PWM_Organizer.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Function Name: PWM_Organizer_Init
  70:.\Generated_Source\PSoC4/PWM_Organizer.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  72:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  PWM_Organizer_Start().
  76:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  77:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  80:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
  83:.\Generated_Source\PSoC4/PWM_Organizer.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_Organizer.c **** void PWM_Organizer_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_Organizer.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UsingFixedFunction || PWM_Organizer_UseControl)
  87:.\Generated_Source\PSoC4/PWM_Organizer.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UsingFixedFunction || PWM_Organizer_UseControl) */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 4


  89:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  90:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if(!PWM_Organizer_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(PWM_Organizer_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_Organizer.c ****             uint8 PWM_Organizer_interruptState;
  94:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (!PWM_Organizer_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
  97:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_CONTROL |= PWM_Organizer_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if (PWM_Organizer_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_CONTROL |= PWM_Organizer_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 104:.\Generated_Source\PSoC4/PWM_Organizer.c ****         ctrl = PWM_Organizer_CONTROL3 & ((uint8 )(~PWM_Organizer_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_CONTROL3 = ctrl | PWM_Organizer_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 107:.\Generated_Source\PSoC4/PWM_Organizer.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_RT1 &= ((uint8)(~PWM_Organizer_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_RT1 |= PWM_Organizer_SYNC;
 110:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 111:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_RT1 &= ((uint8)(~PWM_Organizer_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_RT1 |= PWM_Organizer_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 115:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #elif (PWM_Organizer_UseControl)
 116:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_Organizer.c ****         ctrl = PWM_Organizer_CONTROL & ((uint8)(~PWM_Organizer_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 204B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 ((uint8)(~PWM_Organizer_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_CONTROL = ctrl | PWM_Organizer_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 1C4B     		ldr	r3, .L6
  94 0016 FA1D     		add	r2, r7, #7
  95 0018 1278     		ldrb	r2, [r2]
  96 001a 0921     		mov	r1, #9
  97 001c 0A43     		orr	r2, r1
  98 001e D2B2     		uxtb	r2, r2
  99 0020 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                    PWM_Organizer_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 123:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (!PWM_Organizer_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if (PWM_Organizer_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_AUX_CONTROLDP0 |= (PWM_Organizer_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else /* (PWM_Organizer_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_AUX_CONTROLDP0 |= (PWM_Organizer_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 5


 100              		.loc 1 129 0
 101 0022 1A4B     		ldr	r3, .L6+4
 102 0024 194A     		ldr	r2, .L6+4
 103 0026 1278     		ldrb	r2, [r2]
 104 0028 D2B2     		uxtb	r2, r2
 105 002a 0121     		mov	r1, #1
 106 002c 0A43     		orr	r2, r1
 107 002e D2B2     		uxtb	r2, r2
 108 0030 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_AUX_CONTROLDP1 |= (PWM_Organizer_AUX_CTRL_FIFO0_CLR);
 109              		.loc 1 130 0
 110 0032 174B     		ldr	r3, .L6+8
 111 0034 164A     		ldr	r2, .L6+8
 112 0036 1278     		ldrb	r2, [r2]
 113 0038 D2B2     		uxtb	r2, r2
 114 003a 0121     		mov	r1, #1
 115 003c 0A43     		orr	r2, r1
 116 003e D2B2     		uxtb	r2, r2
 117 0040 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 133:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_WriteCounter(PWM_Organizer_INIT_PERIOD_VALUE);
 118              		.loc 1 133 0
 119 0042 C820     		mov	r0, #200
 120 0044 FFF7FEFF 		bl	PWM_Organizer_WriteCounter
 134:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (!PWM_Organizer_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 136:.\Generated_Source\PSoC4/PWM_Organizer.c ****     PWM_Organizer_WritePeriod(PWM_Organizer_INIT_PERIOD_VALUE);
 121              		.loc 1 136 0
 122 0048 C820     		mov	r0, #200
 123 004a FFF7FEFF 		bl	PWM_Organizer_WritePeriod
 137:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 138:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if (PWM_Organizer_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_WriteCompare(PWM_Organizer_INIT_COMPARE_VALUE1);
 124              		.loc 1 139 0
 125 004e C820     		mov	r0, #200
 126 0050 FFF7FEFF 		bl	PWM_Organizer_WriteCompare
 140:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_WriteCompare1(PWM_Organizer_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_WriteCompare2(PWM_Organizer_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 145:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if (PWM_Organizer_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_WriteKillTime(PWM_Organizer_MinimumKillTime);
 147:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 149:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if (PWM_Organizer_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_WriteDeadTime(PWM_Organizer_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 153:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UseStatus || PWM_Organizer_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_SetInterruptMode(PWM_Organizer_INIT_INTERRUPTS_MODE);
 127              		.loc 1 154 0
 128 0054 0420     		mov	r0, #4
 129 0056 FFF7FEFF 		bl	PWM_Organizer_SetInterruptMode
 155:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UseStatus || PWM_Organizer_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 6


 157:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_GLOBAL_ENABLE |= PWM_Organizer_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_CONTROL2 |= PWM_Organizer_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(PWM_Organizer_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 165:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_interruptState = CyEnterCriticalSection();
 130              		.loc 1 167 0
 131 005a BC1D     		add	r4, r7, #6
 132 005c FFF7FEFF 		bl	CyEnterCriticalSection
 133 0060 031C     		mov	r3, r0
 134 0062 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_STATUS_AUX_CTRL |= PWM_Organizer_STATUS_ACTL_INT_EN_MASK;
 135              		.loc 1 169 0
 136 0064 0A4B     		ldr	r3, .L6+8
 137 0066 0A4A     		ldr	r2, .L6+8
 138 0068 1278     		ldrb	r2, [r2]
 139 006a D2B2     		uxtb	r2, r2
 140 006c 1021     		mov	r1, #16
 141 006e 0A43     		orr	r2, r1
 142 0070 D2B2     		uxtb	r2, r2
 143 0072 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 171:.\Generated_Source\PSoC4/PWM_Organizer.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CyExitCriticalSection(PWM_Organizer_interruptState);
 144              		.loc 1 172 0
 145 0074 BB1D     		add	r3, r7, #6
 146 0076 1B78     		ldrb	r3, [r3]
 147 0078 181C     		mov	r0, r3
 148 007a FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 174:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Clear the FIFO to enable the PWM_Organizer_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_Organizer.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_ClearFIFO();
 149              		.loc 1 176 0
 150 007e FFF7FEFF 		bl	PWM_Organizer_ClearFIFO
 177:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_Organizer.c **** }
 151              		.loc 1 179 0
 152 0082 BD46     		mov	sp, r7
 153 0084 03B0     		add	sp, sp, #12
 154              		@ sp needed
 155 0086 90BD     		pop	{r4, r7, pc}
 156              	.L7:
 157              		.align	2
 158              	.L6:
 159 0088 70000F40 		.word	1074724976
 160 008c 90000F40 		.word	1074725008
 161 0090 91000F40 		.word	1074725009
 162              		.cfi_endproc
 163              	.LFE1:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 7


 164              		.size	PWM_Organizer_Init, .-PWM_Organizer_Init
 165              		.section	.text.PWM_Organizer_Enable,"ax",%progbits
 166              		.align	2
 167              		.global	PWM_Organizer_Enable
 168              		.code	16
 169              		.thumb_func
 170              		.type	PWM_Organizer_Enable, %function
 171              	PWM_Organizer_Enable:
 172              	.LFB2:
 180:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 181:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 182:.\Generated_Source\PSoC4/PWM_Organizer.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Function Name: PWM_Organizer_Enable
 184:.\Generated_Source\PSoC4/PWM_Organizer.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 186:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 189:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 192:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 195:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 198:.\Generated_Source\PSoC4/PWM_Organizer.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_Organizer.c **** void PWM_Organizer_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_Organizer.c **** {
 173              		.loc 1 200 0
 174              		.cfi_startproc
 175 0000 80B5     		push	{r7, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_GLOBAL_ENABLE |= PWM_Organizer_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_GLOBAL_STBY_ENABLE |= PWM_Organizer_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 207:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UseControl || PWM_Organizer_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_CONTROL |= PWM_Organizer_CTRL_ENABLE;
 181              		.loc 1 209 0
 182 0004 054B     		ldr	r3, .L9
 183 0006 054A     		ldr	r2, .L9
 184 0008 1278     		ldrb	r2, [r2]
 185 000a D2B2     		uxtb	r2, r2
 186 000c 8021     		mov	r1, #128
 187 000e 4942     		neg	r1, r1
 188 0010 0A43     		orr	r2, r1
 189 0012 D2B2     		uxtb	r2, r2
 190 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 8


 210:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UseControl || PWM_Organizer_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_Organizer.c **** }
 191              		.loc 1 211 0
 192 0016 BD46     		mov	sp, r7
 193              		@ sp needed
 194 0018 80BD     		pop	{r7, pc}
 195              	.L10:
 196 001a C046     		.align	2
 197              	.L9:
 198 001c 70000F40 		.word	1074724976
 199              		.cfi_endproc
 200              	.LFE2:
 201              		.size	PWM_Organizer_Enable, .-PWM_Organizer_Enable
 202              		.section	.text.PWM_Organizer_Stop,"ax",%progbits
 203              		.align	2
 204              		.global	PWM_Organizer_Stop
 205              		.code	16
 206              		.thumb_func
 207              		.type	PWM_Organizer_Stop, %function
 208              	PWM_Organizer_Stop:
 209              	.LFB3:
 212:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 213:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 214:.\Generated_Source\PSoC4/PWM_Organizer.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Function Name: PWM_Organizer_Stop
 216:.\Generated_Source\PSoC4/PWM_Organizer.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 218:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 222:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 225:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 228:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 232:.\Generated_Source\PSoC4/PWM_Organizer.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_Organizer.c **** void PWM_Organizer_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_Organizer.c **** {
 210              		.loc 1 234 0
 211              		.cfi_startproc
 212 0000 80B5     		push	{r7, lr}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UseControl || PWM_Organizer_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_CONTROL &= ((uint8)(~PWM_Organizer_CTRL_ENABLE));
 218              		.loc 1 236 0
 219 0004 044B     		ldr	r3, .L12
 220 0006 044A     		ldr	r2, .L12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 9


 221 0008 1278     		ldrb	r2, [r2]
 222 000a D1B2     		uxtb	r1, r2
 223 000c 7F22     		mov	r2, #127
 224 000e 0A40     		and	r2, r1
 225 0010 D2B2     		uxtb	r2, r2
 226 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UseControl || PWM_Organizer_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 239:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_GLOBAL_ENABLE &= ((uint8)(~PWM_Organizer_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_Organizer.c ****         PWM_Organizer_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Organizer_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_Organizer.c **** }
 227              		.loc 1 244 0
 228 0014 BD46     		mov	sp, r7
 229              		@ sp needed
 230 0016 80BD     		pop	{r7, pc}
 231              	.L13:
 232              		.align	2
 233              	.L12:
 234 0018 70000F40 		.word	1074724976
 235              		.cfi_endproc
 236              	.LFE3:
 237              		.size	PWM_Organizer_Stop, .-PWM_Organizer_Stop
 238              		.section	.text.PWM_Organizer_WriteCounter,"ax",%progbits
 239              		.align	2
 240              		.global	PWM_Organizer_WriteCounter
 241              		.code	16
 242              		.thumb_func
 243              		.type	PWM_Organizer_WriteCounter, %function
 244              	PWM_Organizer_WriteCounter:
 245              	.LFB4:
 245:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 246:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (PWM_Organizer_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 249:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 250:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Function Name: PWM_Organizer_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_Organizer.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 254:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 258:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 262:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 265:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/PWM_Organizer.c ****         void PWM_Organizer_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_Organizer.c ****         {
 268:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #if(PWM_Organizer_UsingFixedFunction)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 10


 269:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 270:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #if(0 != PWM_Organizer_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_Organizer.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Organizer_CTRL_CMP
 272:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_Organizer.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #endif /* (0 != PWM_Organizer_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 276:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_CONTROL3 &= ((uint8)(~PWM_Organizer_CTRL_CMPMODE1_MASK)); /*Clear Exi
 277:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 279:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #elif (PWM_Organizer_UseControl)
 280:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 281:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #if(0 != PWM_Organizer_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_Organizer.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Organizer_CTRL_CM
 283:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                                 PWM_Organizer_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_Organizer.c ****                     uint8 comparemode1masked = comparemode & PWM_Organizer_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #endif /* (0 != PWM_Organizer_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 288:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #if(0 != PWM_Organizer_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_Organizer.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Organizer_CTRL_CM
 290:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                                PWM_Organizer_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_Organizer.c ****                     uint8 comparemode2masked = comparemode & PWM_Organizer_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 #endif /* (0 != PWM_Organizer_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 295:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_CONTROL &= ((uint8)(~(PWM_Organizer_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                             PWM_Organizer_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 300:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #endif /* (PWM_Organizer_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_Organizer.c ****         }
 304:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* PWM_Organizer_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 306:.\Generated_Source\PSoC4/PWM_Organizer.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 308:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 310:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 311:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Function Name: PWM_Organizer_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_Organizer.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 315:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 318:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 322:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Return:
 323:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 325:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *******************************************************************************/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 11


 326:.\Generated_Source\PSoC4/PWM_Organizer.c ****         void PWM_Organizer_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_Organizer.c ****         {
 328:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #if(0 != PWM_Organizer_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Organizer_CTRL_CMPMODE
 330:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                            PWM_Organizer_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 uint8 comparemodemasked = comparemode & PWM_Organizer_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #endif /* (0 != PWM_Organizer_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 335:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #if (PWM_Organizer_UseControl)
 336:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_CONTROL &= ((uint8)(~PWM_Organizer_CTRL_CMPMODE1_MASK)); /*Clear exis
 337:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #endif /* (PWM_Organizer_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_Organizer.c ****         }
 340:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* PWM_Organizer_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 342:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (PWM_Organizer_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 344:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 345:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 349:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 352:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 356:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 359:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 362:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 363:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(0 != PWM_Organizer_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_Organizer.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Organizer_CTRL_CMPMODE2_SH
 365:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                                  PWM_Organizer_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_Organizer.c ****             uint8 comparemodemasked = comparemode & PWM_Organizer_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (0 != PWM_Organizer_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 370:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if (PWM_Organizer_UseControl)
 371:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_CONTROL &= ((uint8)(~PWM_Organizer_CTRL_CMPMODE2_MASK)); /*Clear existing
 372:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 375:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /*PWM_Organizer_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 377:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 379:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 380:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (!PWM_Organizer_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 382:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 12


 383:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 387:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 393:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 396:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 399:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 402:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 246              		.loc 1 405 0
 247              		.cfi_startproc
 248 0000 80B5     		push	{r7, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 82B0     		sub	sp, sp, #8
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
 256 0006 021C     		mov	r2, r0
 257 0008 BB1D     		add	r3, r7, #6
 258 000a 1A80     		strh	r2, [r3]
 406:.\Generated_Source\PSoC4/PWM_Organizer.c ****         CY_SET_REG16(PWM_Organizer_COUNTER_LSB_PTR, counter);
 259              		.loc 1 406 0
 260 000c 034B     		ldr	r3, .L15
 261 000e BA1D     		add	r2, r7, #6
 262 0010 1288     		ldrh	r2, [r2]
 263 0012 1A80     		strh	r2, [r3]
 407:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 264              		.loc 1 407 0
 265 0014 BD46     		mov	sp, r7
 266 0016 02B0     		add	sp, sp, #8
 267              		@ sp needed
 268 0018 80BD     		pop	{r7, pc}
 269              	.L16:
 270 001a C046     		.align	2
 271              	.L15:
 272 001c 00100F40 		.word	1074728960
 273              		.cfi_endproc
 274              	.LFE4:
 275              		.size	PWM_Organizer_WriteCounter, .-PWM_Organizer_WriteCounter
 276              		.section	.text.PWM_Organizer_ReadCounter,"ax",%progbits
 277              		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 13


 278              		.global	PWM_Organizer_ReadCounter
 279              		.code	16
 280              		.thumb_func
 281              		.type	PWM_Organizer_ReadCounter, %function
 282              	PWM_Organizer_ReadCounter:
 283              	.LFB5:
 408:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 409:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 410:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 414:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 418:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 421:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 424:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint16 PWM_Organizer_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 284              		.loc 1 426 0
 285              		.cfi_startproc
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_Organizer.c ****           (void)CY_GET_REG8(PWM_Organizer_COUNTERCAP_LSB_PTR_8BIT);
 292              		.loc 1 430 0
 293 0004 034B     		ldr	r3, .L19
 294 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 432:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return (CY_GET_REG16(PWM_Organizer_CAPTURE_LSB_PTR));
 295              		.loc 1 433 0
 296 0008 034B     		ldr	r3, .L19+4
 297 000a 1B88     		ldrh	r3, [r3]
 298 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 299              		.loc 1 434 0
 300 000e 181C     		mov	r0, r3
 301 0010 BD46     		mov	sp, r7
 302              		@ sp needed
 303 0012 80BD     		pop	{r7, pc}
 304              	.L20:
 305              		.align	2
 306              	.L19:
 307 0014 10000F40 		.word	1074724880
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 14


 308 0018 A0100F40 		.word	1074729120
 309              		.cfi_endproc
 310              	.LFE5:
 311              		.size	PWM_Organizer_ReadCounter, .-PWM_Organizer_ReadCounter
 312              		.section	.text.PWM_Organizer_ClearFIFO,"ax",%progbits
 313              		.align	2
 314              		.global	PWM_Organizer_ClearFIFO
 315              		.code	16
 316              		.thumb_func
 317              		.type	PWM_Organizer_ClearFIFO, %function
 318              	PWM_Organizer_ClearFIFO:
 319              	.LFB6:
 435:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 436:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if (PWM_Organizer_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 438:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 439:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Function Name: PWM_Organizer_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_Organizer.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 443:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 446:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 449:.\Generated_Source\PSoC4/PWM_Organizer.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *
 452:.\Generated_Source\PSoC4/PWM_Organizer.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_Organizer.c ****         void PWM_Organizer_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_Organizer.c ****         {
 320              		.loc 1 454 0
 321              		.cfi_startproc
 322 0000 80B5     		push	{r7, lr}
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 00AF     		add	r7, sp, #0
 327              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/PWM_Organizer.c ****             while(0u != (PWM_Organizer_ReadStatusRegister() & PWM_Organizer_STATUS_FIFONEMPTY))
 328              		.loc 1 455 0
 329 0004 01E0     		b	.L22
 330              	.L23:
 456:.\Generated_Source\PSoC4/PWM_Organizer.c ****             {
 457:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 (void)PWM_Organizer_ReadCapture();
 331              		.loc 1 457 0
 332 0006 FFF7FEFF 		bl	PWM_Organizer_ReadCapture
 333              	.L22:
 455:.\Generated_Source\PSoC4/PWM_Organizer.c ****             while(0u != (PWM_Organizer_ReadStatusRegister() & PWM_Organizer_STATUS_FIFONEMPTY))
 334              		.loc 1 455 0 discriminator 1
 335 000a FFF7FEFF 		bl	PWM_Organizer_ReadStatusRegister
 336 000e 031C     		mov	r3, r0
 337 0010 1A1C     		mov	r2, r3
 338 0012 1023     		mov	r3, #16
 339 0014 1340     		and	r3, r2
 340 0016 F6D1     		bne	.L23
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 15


 458:.\Generated_Source\PSoC4/PWM_Organizer.c ****             }
 459:.\Generated_Source\PSoC4/PWM_Organizer.c ****         }
 341              		.loc 1 459 0
 342 0018 BD46     		mov	sp, r7
 343              		@ sp needed
 344 001a 80BD     		pop	{r7, pc}
 345              		.cfi_endproc
 346              	.LFE6:
 347              		.size	PWM_Organizer_ClearFIFO, .-PWM_Organizer_ClearFIFO
 348              		.section	.text.PWM_Organizer_WritePeriod,"ax",%progbits
 349              		.align	2
 350              		.global	PWM_Organizer_WritePeriod
 351              		.code	16
 352              		.thumb_func
 353              		.type	PWM_Organizer_WritePeriod, %function
 354              	PWM_Organizer_WritePeriod:
 355              	.LFB7:
 460:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 461:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* PWM_Organizer_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 463:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* !PWM_Organizer_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 465:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 466:.\Generated_Source\PSoC4/PWM_Organizer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Function Name: PWM_Organizer_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_Organizer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 470:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 474:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_Organizer.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 478:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 481:.\Generated_Source\PSoC4/PWM_Organizer.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_Organizer.c **** void PWM_Organizer_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM_Organizer.c **** {
 356              		.loc 1 483 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 82B0     		sub	sp, sp, #8
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 021C     		mov	r2, r0
 367 0008 BB1D     		add	r3, r7, #6
 368 000a 1A80     		strh	r2, [r3]
 484:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if(PWM_Organizer_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_Organizer.c ****         CY_SET_REG16(PWM_Organizer_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #else
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 16


 487:.\Generated_Source\PSoC4/PWM_Organizer.c ****         CY_SET_REG16(PWM_Organizer_PERIOD_LSB_PTR, period);
 369              		.loc 1 487 0
 370 000c 034B     		ldr	r3, .L25
 371 000e BA1D     		add	r2, r7, #6
 372 0010 1288     		ldrh	r2, [r2]
 373 0012 1A80     		strh	r2, [r3]
 488:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_Organizer.c **** }
 374              		.loc 1 489 0
 375 0014 BD46     		mov	sp, r7
 376 0016 02B0     		add	sp, sp, #8
 377              		@ sp needed
 378 0018 80BD     		pop	{r7, pc}
 379              	.L26:
 380 001a C046     		.align	2
 381              	.L25:
 382 001c 80100F40 		.word	1074729088
 383              		.cfi_endproc
 384              	.LFE7:
 385              		.size	PWM_Organizer_WritePeriod, .-PWM_Organizer_WritePeriod
 386              		.section	.text.PWM_Organizer_WriteCompare,"ax",%progbits
 387              		.align	2
 388              		.global	PWM_Organizer_WriteCompare
 389              		.code	16
 390              		.thumb_func
 391              		.type	PWM_Organizer_WriteCompare, %function
 392              	PWM_Organizer_WriteCompare:
 393              	.LFB8:
 490:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 491:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (PWM_Organizer_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 493:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 494:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 498:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 505:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 508:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 511:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 515:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 17


 394              		.loc 1 518 0
 395              		.cfi_startproc
 396 0000 80B5     		push	{r7, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 7, -8
 399              		.cfi_offset 14, -4
 400 0002 82B0     		sub	sp, sp, #8
 401              		.cfi_def_cfa_offset 16
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 404 0006 021C     		mov	r2, r0
 405 0008 BB1D     		add	r3, r7, #6
 406 000a 1A80     		strh	r2, [r3]
 519:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(PWM_Organizer_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CY_SET_REG16(PWM_Organizer_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CY_SET_REG16(PWM_Organizer_COMPARE1_LSB_PTR, compare);
 407              		.loc 1 522 0
 408 000c 034B     		ldr	r3, .L28
 409 000e BA1D     		add	r2, r7, #6
 410 0010 1288     		ldrh	r2, [r2]
 411 0012 1A80     		strh	r2, [r3]
 523:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 525:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if (PWM_Organizer_PWMMode == PWM_Organizer__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #if(PWM_Organizer_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 CY_SET_REG16(PWM_Organizer_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 CY_SET_REG16(PWM_Organizer_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #endif /* (PWM_Organizer_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_PWMMode == PWM_Organizer__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 412              		.loc 1 532 0
 413 0014 BD46     		mov	sp, r7
 414 0016 02B0     		add	sp, sp, #8
 415              		@ sp needed
 416 0018 80BD     		pop	{r7, pc}
 417              	.L29:
 418 001a C046     		.align	2
 419              	.L28:
 420 001c 40100F40 		.word	1074729024
 421              		.cfi_endproc
 422              	.LFE8:
 423              		.size	PWM_Organizer_WriteCompare, .-PWM_Organizer_WriteCompare
 424              		.section	.text.PWM_Organizer_SetInterruptMode,"ax",%progbits
 425              		.align	2
 426              		.global	PWM_Organizer_SetInterruptMode
 427              		.code	16
 428              		.thumb_func
 429              		.type	PWM_Organizer_SetInterruptMode, %function
 430              	PWM_Organizer_SetInterruptMode:
 431              	.LFB9:
 533:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 534:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 535:.\Generated_Source\PSoC4/PWM_Organizer.c **** #else
 536:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 537:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 18


 538:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 542:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 548:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 551:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 554:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 558:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(PWM_Organizer_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CY_SET_REG16(PWM_Organizer_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CY_SET_REG16(PWM_Organizer_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 564:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 565:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 566:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 570:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 577:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 580:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 583:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 587:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(PWM_Organizer_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CY_SET_REG16(PWM_Organizer_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CY_SET_REG16(PWM_Organizer_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 593:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 19


 595:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (PWM_Organizer_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 597:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 598:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 602:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 605:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 608:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 611:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 614:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(!PWM_Organizer_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_Organizer.c ****             CY_SET_REG8(PWM_Organizer_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_Organizer.c ****             PWM_Organizer_DEADBAND_COUNT &= ((uint8)(~PWM_Organizer_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 622:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #if(PWM_Organizer_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Organizer_DEADBAND_
 625:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                                     PWM_Organizer_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 PWM_Organizer_DEADBAND_COUNT |= deadtime & PWM_Organizer_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #endif /* (PWM_Organizer_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 630:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (!PWM_Organizer_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 632:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 633:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 634:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 638:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 641:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 644:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 647:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint8 PWM_Organizer_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 650:.\Generated_Source\PSoC4/PWM_Organizer.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(!PWM_Organizer_DeadBand2_4)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 20


 652:.\Generated_Source\PSoC4/PWM_Organizer.c ****             return (CY_GET_REG8(PWM_Organizer_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 655:.\Generated_Source\PSoC4/PWM_Organizer.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #if(PWM_Organizer_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 return ((uint8)(((uint8)(PWM_Organizer_DEADBAND_COUNT & PWM_Organizer_DEADBAND_COUN
 658:.\Generated_Source\PSoC4/PWM_Organizer.c ****                                                                            PWM_Organizer_DEADBAND_C
 659:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_Organizer.c ****                 return (PWM_Organizer_DEADBAND_COUNT & PWM_Organizer_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_Organizer.c ****             #endif /* (PWM_Organizer_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (!PWM_Organizer_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 664:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 666:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (PWM_Organizer_UseStatus || PWM_Organizer_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 668:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 669:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 673:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 677:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 680:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 683:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 432              		.loc 1 685 0
 433              		.cfi_startproc
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 82B0     		sub	sp, sp, #8
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
 442 0006 021C     		mov	r2, r0
 443 0008 FB1D     		add	r3, r7, #7
 444 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/PWM_Organizer.c ****         CY_SET_REG8(PWM_Organizer_STATUS_MASK_PTR, interruptMode);
 445              		.loc 1 686 0
 446 000c 034B     		ldr	r3, .L31
 447 000e FA1D     		add	r2, r7, #7
 448 0010 1278     		ldrb	r2, [r2]
 449 0012 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 450              		.loc 1 687 0
 451 0014 BD46     		mov	sp, r7
 452 0016 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 21


 453              		@ sp needed
 454 0018 80BD     		pop	{r7, pc}
 455              	.L32:
 456 001a C046     		.align	2
 457              	.L31:
 458 001c 81000F40 		.word	1074724993
 459              		.cfi_endproc
 460              	.LFE9:
 461              		.size	PWM_Organizer_SetInterruptMode, .-PWM_Organizer_SetInterruptMode
 462              		.section	.text.PWM_Organizer_ReadStatusRegister,"ax",%progbits
 463              		.align	2
 464              		.global	PWM_Organizer_ReadStatusRegister
 465              		.code	16
 466              		.thumb_func
 467              		.type	PWM_Organizer_ReadStatusRegister, %function
 468              	PWM_Organizer_ReadStatusRegister:
 469              	.LFB10:
 688:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 689:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 690:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 694:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 697:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 700:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 710:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint8 PWM_Organizer_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 470              		.loc 1 712 0
 471              		.cfi_startproc
 472 0000 80B5     		push	{r7, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return (CY_GET_REG8(PWM_Organizer_STATUS_PTR));
 478              		.loc 1 713 0
 479 0004 024B     		ldr	r3, .L35
 480 0006 1B78     		ldrb	r3, [r3]
 481 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 482              		.loc 1 714 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 22


 483 000a 181C     		mov	r0, r3
 484 000c BD46     		mov	sp, r7
 485              		@ sp needed
 486 000e 80BD     		pop	{r7, pc}
 487              	.L36:
 488              		.align	2
 489              	.L35:
 490 0010 61000F40 		.word	1074724961
 491              		.cfi_endproc
 492              	.LFE10:
 493              		.size	PWM_Organizer_ReadStatusRegister, .-PWM_Organizer_ReadStatusRegister
 494              		.section	.text.PWM_Organizer_ReadControlRegister,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_Organizer_ReadControlRegister
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_Organizer_ReadControlRegister, %function
 500              	PWM_Organizer_ReadControlRegister:
 501              	.LFB11:
 715:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 716:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* (PWM_Organizer_UseStatus || PWM_Organizer_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 718:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 719:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (PWM_Organizer_UseControl)
 720:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 721:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 722:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 726:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 730:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 733:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 736:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint8 PWM_Organizer_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 502              		.loc 1 738 0
 503              		.cfi_startproc
 504 0000 80B5     		push	{r7, lr}
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 82B0     		sub	sp, sp, #8
 509              		.cfi_def_cfa_offset 16
 510 0004 00AF     		add	r7, sp, #0
 511              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/PWM_Organizer.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 741:.\Generated_Source\PSoC4/PWM_Organizer.c ****         result = CY_GET_REG8(PWM_Organizer_CONTROL_PTR);
 512              		.loc 1 741 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 23


 513 0006 054A     		ldr	r2, .L39
 514 0008 FB1D     		add	r3, r7, #7
 515 000a 1278     		ldrb	r2, [r2]
 516 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return (result);
 517              		.loc 1 742 0
 518 000e FB1D     		add	r3, r7, #7
 519 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 520              		.loc 1 743 0
 521 0012 181C     		mov	r0, r3
 522 0014 BD46     		mov	sp, r7
 523 0016 02B0     		add	sp, sp, #8
 524              		@ sp needed
 525 0018 80BD     		pop	{r7, pc}
 526              	.L40:
 527 001a C046     		.align	2
 528              	.L39:
 529 001c 70000F40 		.word	1074724976
 530              		.cfi_endproc
 531              	.LFE11:
 532              		.size	PWM_Organizer_ReadControlRegister, .-PWM_Organizer_ReadControlRegister
 533              		.section	.text.PWM_Organizer_WriteControlRegister,"ax",%progbits
 534              		.align	2
 535              		.global	PWM_Organizer_WriteControlRegister
 536              		.code	16
 537              		.thumb_func
 538              		.type	PWM_Organizer_WriteControlRegister, %function
 539              	PWM_Organizer_WriteControlRegister:
 540              	.LFB12:
 744:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 745:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 746:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 750:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 754:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 761:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 764:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_Organizer.c ****     void PWM_Organizer_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 541              		.loc 1 766 0
 542              		.cfi_startproc
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 24


 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 021C     		mov	r2, r0
 552 0008 FB1D     		add	r3, r7, #7
 553 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/PWM_Organizer.c ****         CY_SET_REG8(PWM_Organizer_CONTROL_PTR, control);
 554              		.loc 1 767 0
 555 000c 034B     		ldr	r3, .L42
 556 000e FA1D     		add	r2, r7, #7
 557 0010 1278     		ldrb	r2, [r2]
 558 0012 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 559              		.loc 1 768 0
 560 0014 BD46     		mov	sp, r7
 561 0016 02B0     		add	sp, sp, #8
 562              		@ sp needed
 563 0018 80BD     		pop	{r7, pc}
 564              	.L43:
 565 001a C046     		.align	2
 566              	.L42:
 567 001c 70000F40 		.word	1074724976
 568              		.cfi_endproc
 569              	.LFE12:
 570              		.size	PWM_Organizer_WriteControlRegister, .-PWM_Organizer_WriteControlRegister
 571              		.section	.text.PWM_Organizer_ReadCapture,"ax",%progbits
 572              		.align	2
 573              		.global	PWM_Organizer_ReadCapture
 574              		.code	16
 575              		.thumb_func
 576              		.type	PWM_Organizer_ReadCapture, %function
 577              	PWM_Organizer_ReadCapture:
 578              	.LFB13:
 769:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 770:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* (PWM_Organizer_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 772:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 773:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (!PWM_Organizer_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 775:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 776:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 780:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 783:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 786:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 789:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 25


 790:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint16 PWM_Organizer_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 579              		.loc 1 791 0
 580              		.cfi_startproc
 581 0000 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 00AF     		add	r7, sp, #0
 586              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return (CY_GET_REG16(PWM_Organizer_CAPTURE_LSB_PTR));
 587              		.loc 1 792 0
 588 0004 024B     		ldr	r3, .L46
 589 0006 1B88     		ldrh	r3, [r3]
 590 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 591              		.loc 1 793 0
 592 000a 181C     		mov	r0, r3
 593 000c BD46     		mov	sp, r7
 594              		@ sp needed
 595 000e 80BD     		pop	{r7, pc}
 596              	.L47:
 597              		.align	2
 598              	.L46:
 599 0010 A0100F40 		.word	1074729120
 600              		.cfi_endproc
 601              	.LFE13:
 602              		.size	PWM_Organizer_ReadCapture, .-PWM_Organizer_ReadCapture
 603              		.section	.text.PWM_Organizer_ReadCompare,"ax",%progbits
 604              		.align	2
 605              		.global	PWM_Organizer_ReadCompare
 606              		.code	16
 607              		.thumb_func
 608              		.type	PWM_Organizer_ReadCompare, %function
 609              	PWM_Organizer_ReadCompare:
 610              	.LFB14:
 794:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 795:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* (!PWM_Organizer_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 797:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 798:.\Generated_Source\PSoC4/PWM_Organizer.c **** #if (PWM_Organizer_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 800:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 801:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 805:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 809:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 812:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 26


 815:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint16 PWM_Organizer_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 611              		.loc 1 817 0
 612              		.cfi_startproc
 613 0000 80B5     		push	{r7, lr}
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 7, -8
 616              		.cfi_offset 14, -4
 617 0002 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #if(PWM_Organizer_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_Organizer.c ****             return ((uint16)CY_GET_REG16(PWM_Organizer_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_Organizer.c ****             return (CY_GET_REG16(PWM_Organizer_COMPARE1_LSB_PTR));
 619              		.loc 1 821 0
 620 0004 024B     		ldr	r3, .L50
 621 0006 1B88     		ldrh	r3, [r3]
 622 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC4/PWM_Organizer.c ****         #endif /* (PWM_Organizer_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 623              		.loc 1 823 0
 624 000a 181C     		mov	r0, r3
 625 000c BD46     		mov	sp, r7
 626              		@ sp needed
 627 000e 80BD     		pop	{r7, pc}
 628              	.L51:
 629              		.align	2
 630              	.L50:
 631 0010 40100F40 		.word	1074729024
 632              		.cfi_endproc
 633              	.LFE14:
 634              		.size	PWM_Organizer_ReadCompare, .-PWM_Organizer_ReadCompare
 635              		.section	.text.PWM_Organizer_ReadPeriod,"ax",%progbits
 636              		.align	2
 637              		.global	PWM_Organizer_ReadPeriod
 638              		.code	16
 639              		.thumb_func
 640              		.type	PWM_Organizer_ReadPeriod, %function
 641              	PWM_Organizer_ReadPeriod:
 642              	.LFB15:
 824:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 825:.\Generated_Source\PSoC4/PWM_Organizer.c **** #else
 826:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 827:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 828:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 832:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 835:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 838:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8/uint16: Current compare value.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 27


 840:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 841:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint16 PWM_Organizer_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 844:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return (CY_GET_REG16(PWM_Organizer_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 846:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 847:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 848:.\Generated_Source\PSoC4/PWM_Organizer.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Function Name: PWM_Organizer_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_Organizer.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 852:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 855:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 858:.\Generated_Source\PSoC4/PWM_Organizer.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *
 861:.\Generated_Source\PSoC4/PWM_Organizer.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_Organizer.c ****     uint16 PWM_Organizer_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_Organizer.c ****     {
 864:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return (CY_GET_REG16(PWM_Organizer_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_Organizer.c ****     }
 866:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 867:.\Generated_Source\PSoC4/PWM_Organizer.c **** #endif /* (PWM_Organizer_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 869:.\Generated_Source\PSoC4/PWM_Organizer.c **** 
 870:.\Generated_Source\PSoC4/PWM_Organizer.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Function Name: PWM_Organizer_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_Organizer.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 874:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 877:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 880:.\Generated_Source\PSoC4/PWM_Organizer.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_Organizer.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_Organizer.c **** *
 883:.\Generated_Source\PSoC4/PWM_Organizer.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_Organizer.c **** uint16 PWM_Organizer_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_Organizer.c **** {
 643              		.loc 1 885 0
 644              		.cfi_startproc
 645 0000 80B5     		push	{r7, lr}
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #if(PWM_Organizer_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return ((uint16)CY_GET_REG16(PWM_Organizer_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #else
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 28


 889:.\Generated_Source\PSoC4/PWM_Organizer.c ****         return (CY_GET_REG16(PWM_Organizer_PERIOD_LSB_PTR));
 651              		.loc 1 889 0
 652 0004 024B     		ldr	r3, .L54
 653 0006 1B88     		ldrh	r3, [r3]
 654 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC4/PWM_Organizer.c ****     #endif /* (PWM_Organizer_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_Organizer.c **** }
 655              		.loc 1 891 0
 656 000a 181C     		mov	r0, r3
 657 000c BD46     		mov	sp, r7
 658              		@ sp needed
 659 000e 80BD     		pop	{r7, pc}
 660              	.L55:
 661              		.align	2
 662              	.L54:
 663 0010 80100F40 		.word	1074729088
 664              		.cfi_endproc
 665              	.LFE15:
 666              		.size	PWM_Organizer_ReadPeriod, .-PWM_Organizer_ReadPeriod
 667              		.text
 668              	.Letext0:
 669              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 670              		.section	.debug_info,"",%progbits
 671              	.Ldebug_info0:
 672 0000 9A020000 		.4byte	0x29a
 673 0004 0400     		.2byte	0x4
 674 0006 00000000 		.4byte	.Ldebug_abbrev0
 675 000a 04       		.byte	0x4
 676 000b 01       		.uleb128 0x1
 677 000c B1000000 		.4byte	.LASF40
 678 0010 01       		.byte	0x1
 679 0011 68000000 		.4byte	.LASF41
 680 0015 E3010000 		.4byte	.LASF42
 681 0019 00000000 		.4byte	.Ldebug_ranges0+0
 682 001d 00000000 		.4byte	0
 683 0021 00000000 		.4byte	.Ldebug_line0
 684 0025 02       		.uleb128 0x2
 685 0026 01       		.byte	0x1
 686 0027 06       		.byte	0x6
 687 0028 85030000 		.4byte	.LASF0
 688 002c 02       		.uleb128 0x2
 689 002d 01       		.byte	0x1
 690 002e 08       		.byte	0x8
 691 002f 4E010000 		.4byte	.LASF1
 692 0033 02       		.uleb128 0x2
 693 0034 02       		.byte	0x2
 694 0035 05       		.byte	0x5
 695 0036 40030000 		.4byte	.LASF2
 696 003a 02       		.uleb128 0x2
 697 003b 02       		.byte	0x2
 698 003c 07       		.byte	0x7
 699 003d 55000000 		.4byte	.LASF3
 700 0041 02       		.uleb128 0x2
 701 0042 04       		.byte	0x4
 702 0043 05       		.byte	0x5
 703 0044 77030000 		.4byte	.LASF4
 704 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 29


 705 0049 04       		.byte	0x4
 706 004a 07       		.byte	0x7
 707 004b 77010000 		.4byte	.LASF5
 708 004f 02       		.uleb128 0x2
 709 0050 08       		.byte	0x8
 710 0051 05       		.byte	0x5
 711 0052 E8020000 		.4byte	.LASF6
 712 0056 02       		.uleb128 0x2
 713 0057 08       		.byte	0x8
 714 0058 07       		.byte	0x7
 715 0059 91020000 		.4byte	.LASF7
 716 005d 03       		.uleb128 0x3
 717 005e 04       		.byte	0x4
 718 005f 05       		.byte	0x5
 719 0060 696E7400 		.ascii	"int\000"
 720 0064 02       		.uleb128 0x2
 721 0065 04       		.byte	0x4
 722 0066 07       		.byte	0x7
 723 0067 52020000 		.4byte	.LASF8
 724 006b 04       		.uleb128 0x4
 725 006c 89010000 		.4byte	.LASF9
 726 0070 02       		.byte	0x2
 727 0071 A1       		.byte	0xa1
 728 0072 2C000000 		.4byte	0x2c
 729 0076 04       		.uleb128 0x4
 730 0077 4B020000 		.4byte	.LASF10
 731 007b 02       		.byte	0x2
 732 007c A2       		.byte	0xa2
 733 007d 3A000000 		.4byte	0x3a
 734 0081 02       		.uleb128 0x2
 735 0082 04       		.byte	0x4
 736 0083 04       		.byte	0x4
 737 0084 AB000000 		.4byte	.LASF11
 738 0088 02       		.uleb128 0x2
 739 0089 08       		.byte	0x8
 740 008a 04       		.byte	0x4
 741 008b DC010000 		.4byte	.LASF12
 742 008f 02       		.uleb128 0x2
 743 0090 01       		.byte	0x1
 744 0091 08       		.byte	0x8
 745 0092 80030000 		.4byte	.LASF13
 746 0096 05       		.uleb128 0x5
 747 0097 5C010000 		.4byte	.LASF14
 748 009b 02       		.byte	0x2
 749 009c 4B01     		.2byte	0x14b
 750 009e A2000000 		.4byte	0xa2
 751 00a2 06       		.uleb128 0x6
 752 00a3 6B000000 		.4byte	0x6b
 753 00a7 05       		.uleb128 0x5
 754 00a8 00000000 		.4byte	.LASF15
 755 00ac 02       		.byte	0x2
 756 00ad 4C01     		.2byte	0x14c
 757 00af B3000000 		.4byte	0xb3
 758 00b3 06       		.uleb128 0x6
 759 00b4 76000000 		.4byte	0x76
 760 00b8 02       		.uleb128 0x2
 761 00b9 04       		.byte	0x4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 30


 762 00ba 07       		.byte	0x7
 763 00bb DF020000 		.4byte	.LASF16
 764 00bf 07       		.uleb128 0x7
 765 00c0 63030000 		.4byte	.LASF19
 766 00c4 01       		.byte	0x1
 767 00c5 37       		.byte	0x37
 768 00c6 00000000 		.4byte	.LFB0
 769 00ca 24000000 		.4byte	.LFE0-.LFB0
 770 00ce 01       		.uleb128 0x1
 771 00cf 9C       		.byte	0x9c
 772 00d0 08       		.uleb128 0x8
 773 00d1 20000000 		.4byte	.LASF22
 774 00d5 01       		.byte	0x1
 775 00d6 54       		.byte	0x54
 776 00d7 00000000 		.4byte	.LFB1
 777 00db 94000000 		.4byte	.LFE1-.LFB1
 778 00df 01       		.uleb128 0x1
 779 00e0 9C       		.byte	0x9c
 780 00e1 02010000 		.4byte	0x102
 781 00e5 09       		.uleb128 0x9
 782 00e6 DA020000 		.4byte	.LASF17
 783 00ea 01       		.byte	0x1
 784 00eb 57       		.byte	0x57
 785 00ec 6B000000 		.4byte	0x6b
 786 00f0 02       		.uleb128 0x2
 787 00f1 91       		.byte	0x91
 788 00f2 6F       		.sleb128 -17
 789 00f3 09       		.uleb128 0x9
 790 00f4 5F020000 		.4byte	.LASF18
 791 00f8 01       		.byte	0x1
 792 00f9 5D       		.byte	0x5d
 793 00fa 6B000000 		.4byte	0x6b
 794 00fe 02       		.uleb128 0x2
 795 00ff 91       		.byte	0x91
 796 0100 6E       		.sleb128 -18
 797 0101 00       		.byte	0
 798 0102 0A       		.uleb128 0xa
 799 0103 7C020000 		.4byte	.LASF20
 800 0107 01       		.byte	0x1
 801 0108 C7       		.byte	0xc7
 802 0109 00000000 		.4byte	.LFB2
 803 010d 20000000 		.4byte	.LFE2-.LFB2
 804 0111 01       		.uleb128 0x1
 805 0112 9C       		.byte	0x9c
 806 0113 0A       		.uleb128 0xa
 807 0114 C7020000 		.4byte	.LASF21
 808 0118 01       		.byte	0x1
 809 0119 E9       		.byte	0xe9
 810 011a 00000000 		.4byte	.LFB3
 811 011e 1C000000 		.4byte	.LFE3-.LFB3
 812 0122 01       		.uleb128 0x1
 813 0123 9C       		.byte	0x9c
 814 0124 0B       		.uleb128 0xb
 815 0125 30020000 		.4byte	.LASF23
 816 0129 01       		.byte	0x1
 817 012a 9301     		.2byte	0x193
 818 012c 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 31


 819 0130 20000000 		.4byte	.LFE4-.LFB4
 820 0134 01       		.uleb128 0x1
 821 0135 9C       		.byte	0x9c
 822 0136 4A010000 		.4byte	0x14a
 823 013a 0C       		.uleb128 0xc
 824 013b D4010000 		.4byte	.LASF26
 825 013f 01       		.byte	0x1
 826 0140 9301     		.2byte	0x193
 827 0142 76000000 		.4byte	0x76
 828 0146 02       		.uleb128 0x2
 829 0147 91       		.byte	0x91
 830 0148 76       		.sleb128 -10
 831 0149 00       		.byte	0
 832 014a 0D       		.uleb128 0xd
 833 014b BA010000 		.4byte	.LASF32
 834 014f 01       		.byte	0x1
 835 0150 A901     		.2byte	0x1a9
 836 0152 76000000 		.4byte	0x76
 837 0156 00000000 		.4byte	.LFB5
 838 015a 1C000000 		.4byte	.LFE5-.LFB5
 839 015e 01       		.uleb128 0x1
 840 015f 9C       		.byte	0x9c
 841 0160 0E       		.uleb128 0xe
 842 0161 AF020000 		.4byte	.LASF24
 843 0165 01       		.byte	0x1
 844 0166 C501     		.2byte	0x1c5
 845 0168 00000000 		.4byte	.LFB6
 846 016c 1C000000 		.4byte	.LFE6-.LFB6
 847 0170 01       		.uleb128 0x1
 848 0171 9C       		.byte	0x9c
 849 0172 0B       		.uleb128 0xb
 850 0173 F6020000 		.4byte	.LASF25
 851 0177 01       		.byte	0x1
 852 0178 E201     		.2byte	0x1e2
 853 017a 00000000 		.4byte	.LFB7
 854 017e 20000000 		.4byte	.LFE7-.LFB7
 855 0182 01       		.uleb128 0x1
 856 0183 9C       		.byte	0x9c
 857 0184 98010000 		.4byte	0x198
 858 0188 0C       		.uleb128 0xc
 859 0189 33000000 		.4byte	.LASF27
 860 018d 01       		.byte	0x1
 861 018e E201     		.2byte	0x1e2
 862 0190 76000000 		.4byte	0x76
 863 0194 02       		.uleb128 0x2
 864 0195 91       		.byte	0x91
 865 0196 76       		.sleb128 -10
 866 0197 00       		.byte	0
 867 0198 0B       		.uleb128 0xb
 868 0199 3A000000 		.4byte	.LASF28
 869 019d 01       		.byte	0x1
 870 019e 0402     		.2byte	0x204
 871 01a0 00000000 		.4byte	.LFB8
 872 01a4 20000000 		.4byte	.LFE8-.LFB8
 873 01a8 01       		.uleb128 0x1
 874 01a9 9C       		.byte	0x9c
 875 01aa BE010000 		.4byte	0x1be
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 32


 876 01ae 0C       		.uleb128 0xc
 877 01af 91030000 		.4byte	.LASF29
 878 01b3 01       		.byte	0x1
 879 01b4 0402     		.2byte	0x204
 880 01b6 76000000 		.4byte	0x76
 881 01ba 02       		.uleb128 0x2
 882 01bb 91       		.byte	0x91
 883 01bc 76       		.sleb128 -10
 884 01bd 00       		.byte	0
 885 01be 0B       		.uleb128 0xb
 886 01bf 99030000 		.4byte	.LASF30
 887 01c3 01       		.byte	0x1
 888 01c4 AC02     		.2byte	0x2ac
 889 01c6 00000000 		.4byte	.LFB9
 890 01ca 20000000 		.4byte	.LFE9-.LFB9
 891 01ce 01       		.uleb128 0x1
 892 01cf 9C       		.byte	0x9c
 893 01d0 E4010000 		.4byte	0x1e4
 894 01d4 0C       		.uleb128 0xc
 895 01d5 10030000 		.4byte	.LASF31
 896 01d9 01       		.byte	0x1
 897 01da AC02     		.2byte	0x2ac
 898 01dc 6B000000 		.4byte	0x6b
 899 01e0 02       		.uleb128 0x2
 900 01e1 91       		.byte	0x91
 901 01e2 77       		.sleb128 -9
 902 01e3 00       		.byte	0
 903 01e4 0D       		.uleb128 0xd
 904 01e5 2D010000 		.4byte	.LASF33
 905 01e9 01       		.byte	0x1
 906 01ea C702     		.2byte	0x2c7
 907 01ec 6B000000 		.4byte	0x6b
 908 01f0 00000000 		.4byte	.LFB10
 909 01f4 14000000 		.4byte	.LFE10-.LFB10
 910 01f8 01       		.uleb128 0x1
 911 01f9 9C       		.byte	0x9c
 912 01fa 0F       		.uleb128 0xf
 913 01fb 1E030000 		.4byte	.LASF43
 914 01ff 01       		.byte	0x1
 915 0200 E102     		.2byte	0x2e1
 916 0202 6B000000 		.4byte	0x6b
 917 0206 00000000 		.4byte	.LFB11
 918 020a 20000000 		.4byte	.LFE11-.LFB11
 919 020e 01       		.uleb128 0x1
 920 020f 9C       		.byte	0x9c
 921 0210 24020000 		.4byte	0x224
 922 0214 10       		.uleb128 0x10
 923 0215 A8020000 		.4byte	.LASF34
 924 0219 01       		.byte	0x1
 925 021a E302     		.2byte	0x2e3
 926 021c 6B000000 		.4byte	0x6b
 927 0220 02       		.uleb128 0x2
 928 0221 91       		.byte	0x91
 929 0222 77       		.sleb128 -9
 930 0223 00       		.byte	0
 931 0224 0B       		.uleb128 0xb
 932 0225 97010000 		.4byte	.LASF35
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 33


 933 0229 01       		.byte	0x1
 934 022a FD02     		.2byte	0x2fd
 935 022c 00000000 		.4byte	.LFB12
 936 0230 20000000 		.4byte	.LFE12-.LFB12
 937 0234 01       		.uleb128 0x1
 938 0235 9C       		.byte	0x9c
 939 0236 4A020000 		.4byte	0x24a
 940 023a 0C       		.uleb128 0xc
 941 023b 8F010000 		.4byte	.LASF36
 942 023f 01       		.byte	0x1
 943 0240 FD02     		.2byte	0x2fd
 944 0242 6B000000 		.4byte	0x6b
 945 0246 02       		.uleb128 0x2
 946 0247 91       		.byte	0x91
 947 0248 77       		.sleb128 -9
 948 0249 00       		.byte	0
 949 024a 0D       		.uleb128 0xd
 950 024b 91000000 		.4byte	.LASF37
 951 024f 01       		.byte	0x1
 952 0250 1603     		.2byte	0x316
 953 0252 76000000 		.4byte	0x76
 954 0256 00000000 		.4byte	.LFB13
 955 025a 14000000 		.4byte	.LFE13-.LFB13
 956 025e 01       		.uleb128 0x1
 957 025f 9C       		.byte	0x9c
 958 0260 0D       		.uleb128 0xd
 959 0261 06000000 		.4byte	.LASF38
 960 0265 01       		.byte	0x1
 961 0266 3003     		.2byte	0x330
 962 0268 76000000 		.4byte	0x76
 963 026c 00000000 		.4byte	.LFB14
 964 0270 14000000 		.4byte	.LFE14-.LFB14
 965 0274 01       		.uleb128 0x1
 966 0275 9C       		.byte	0x9c
 967 0276 0D       		.uleb128 0xd
 968 0277 4A030000 		.4byte	.LASF39
 969 027b 01       		.byte	0x1
 970 027c 7403     		.2byte	0x374
 971 027e 76000000 		.4byte	0x76
 972 0282 00000000 		.4byte	.LFB15
 973 0286 14000000 		.4byte	.LFE15-.LFB15
 974 028a 01       		.uleb128 0x1
 975 028b 9C       		.byte	0x9c
 976 028c 11       		.uleb128 0x11
 977 028d 61010000 		.4byte	.LASF44
 978 0291 01       		.byte	0x1
 979 0292 20       		.byte	0x20
 980 0293 6B000000 		.4byte	0x6b
 981 0297 05       		.uleb128 0x5
 982 0298 03       		.byte	0x3
 983 0299 00000000 		.4byte	PWM_Organizer_initVar
 984 029d 00       		.byte	0
 985              		.section	.debug_abbrev,"",%progbits
 986              	.Ldebug_abbrev0:
 987 0000 01       		.uleb128 0x1
 988 0001 11       		.uleb128 0x11
 989 0002 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 34


 990 0003 25       		.uleb128 0x25
 991 0004 0E       		.uleb128 0xe
 992 0005 13       		.uleb128 0x13
 993 0006 0B       		.uleb128 0xb
 994 0007 03       		.uleb128 0x3
 995 0008 0E       		.uleb128 0xe
 996 0009 1B       		.uleb128 0x1b
 997 000a 0E       		.uleb128 0xe
 998 000b 55       		.uleb128 0x55
 999 000c 17       		.uleb128 0x17
 1000 000d 11       		.uleb128 0x11
 1001 000e 01       		.uleb128 0x1
 1002 000f 10       		.uleb128 0x10
 1003 0010 17       		.uleb128 0x17
 1004 0011 00       		.byte	0
 1005 0012 00       		.byte	0
 1006 0013 02       		.uleb128 0x2
 1007 0014 24       		.uleb128 0x24
 1008 0015 00       		.byte	0
 1009 0016 0B       		.uleb128 0xb
 1010 0017 0B       		.uleb128 0xb
 1011 0018 3E       		.uleb128 0x3e
 1012 0019 0B       		.uleb128 0xb
 1013 001a 03       		.uleb128 0x3
 1014 001b 0E       		.uleb128 0xe
 1015 001c 00       		.byte	0
 1016 001d 00       		.byte	0
 1017 001e 03       		.uleb128 0x3
 1018 001f 24       		.uleb128 0x24
 1019 0020 00       		.byte	0
 1020 0021 0B       		.uleb128 0xb
 1021 0022 0B       		.uleb128 0xb
 1022 0023 3E       		.uleb128 0x3e
 1023 0024 0B       		.uleb128 0xb
 1024 0025 03       		.uleb128 0x3
 1025 0026 08       		.uleb128 0x8
 1026 0027 00       		.byte	0
 1027 0028 00       		.byte	0
 1028 0029 04       		.uleb128 0x4
 1029 002a 16       		.uleb128 0x16
 1030 002b 00       		.byte	0
 1031 002c 03       		.uleb128 0x3
 1032 002d 0E       		.uleb128 0xe
 1033 002e 3A       		.uleb128 0x3a
 1034 002f 0B       		.uleb128 0xb
 1035 0030 3B       		.uleb128 0x3b
 1036 0031 0B       		.uleb128 0xb
 1037 0032 49       		.uleb128 0x49
 1038 0033 13       		.uleb128 0x13
 1039 0034 00       		.byte	0
 1040 0035 00       		.byte	0
 1041 0036 05       		.uleb128 0x5
 1042 0037 16       		.uleb128 0x16
 1043 0038 00       		.byte	0
 1044 0039 03       		.uleb128 0x3
 1045 003a 0E       		.uleb128 0xe
 1046 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 35


 1047 003c 0B       		.uleb128 0xb
 1048 003d 3B       		.uleb128 0x3b
 1049 003e 05       		.uleb128 0x5
 1050 003f 49       		.uleb128 0x49
 1051 0040 13       		.uleb128 0x13
 1052 0041 00       		.byte	0
 1053 0042 00       		.byte	0
 1054 0043 06       		.uleb128 0x6
 1055 0044 35       		.uleb128 0x35
 1056 0045 00       		.byte	0
 1057 0046 49       		.uleb128 0x49
 1058 0047 13       		.uleb128 0x13
 1059 0048 00       		.byte	0
 1060 0049 00       		.byte	0
 1061 004a 07       		.uleb128 0x7
 1062 004b 2E       		.uleb128 0x2e
 1063 004c 00       		.byte	0
 1064 004d 3F       		.uleb128 0x3f
 1065 004e 19       		.uleb128 0x19
 1066 004f 03       		.uleb128 0x3
 1067 0050 0E       		.uleb128 0xe
 1068 0051 3A       		.uleb128 0x3a
 1069 0052 0B       		.uleb128 0xb
 1070 0053 3B       		.uleb128 0x3b
 1071 0054 0B       		.uleb128 0xb
 1072 0055 27       		.uleb128 0x27
 1073 0056 19       		.uleb128 0x19
 1074 0057 11       		.uleb128 0x11
 1075 0058 01       		.uleb128 0x1
 1076 0059 12       		.uleb128 0x12
 1077 005a 06       		.uleb128 0x6
 1078 005b 40       		.uleb128 0x40
 1079 005c 18       		.uleb128 0x18
 1080 005d 9642     		.uleb128 0x2116
 1081 005f 19       		.uleb128 0x19
 1082 0060 00       		.byte	0
 1083 0061 00       		.byte	0
 1084 0062 08       		.uleb128 0x8
 1085 0063 2E       		.uleb128 0x2e
 1086 0064 01       		.byte	0x1
 1087 0065 3F       		.uleb128 0x3f
 1088 0066 19       		.uleb128 0x19
 1089 0067 03       		.uleb128 0x3
 1090 0068 0E       		.uleb128 0xe
 1091 0069 3A       		.uleb128 0x3a
 1092 006a 0B       		.uleb128 0xb
 1093 006b 3B       		.uleb128 0x3b
 1094 006c 0B       		.uleb128 0xb
 1095 006d 27       		.uleb128 0x27
 1096 006e 19       		.uleb128 0x19
 1097 006f 11       		.uleb128 0x11
 1098 0070 01       		.uleb128 0x1
 1099 0071 12       		.uleb128 0x12
 1100 0072 06       		.uleb128 0x6
 1101 0073 40       		.uleb128 0x40
 1102 0074 18       		.uleb128 0x18
 1103 0075 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 36


 1104 0077 19       		.uleb128 0x19
 1105 0078 01       		.uleb128 0x1
 1106 0079 13       		.uleb128 0x13
 1107 007a 00       		.byte	0
 1108 007b 00       		.byte	0
 1109 007c 09       		.uleb128 0x9
 1110 007d 34       		.uleb128 0x34
 1111 007e 00       		.byte	0
 1112 007f 03       		.uleb128 0x3
 1113 0080 0E       		.uleb128 0xe
 1114 0081 3A       		.uleb128 0x3a
 1115 0082 0B       		.uleb128 0xb
 1116 0083 3B       		.uleb128 0x3b
 1117 0084 0B       		.uleb128 0xb
 1118 0085 49       		.uleb128 0x49
 1119 0086 13       		.uleb128 0x13
 1120 0087 02       		.uleb128 0x2
 1121 0088 18       		.uleb128 0x18
 1122 0089 00       		.byte	0
 1123 008a 00       		.byte	0
 1124 008b 0A       		.uleb128 0xa
 1125 008c 2E       		.uleb128 0x2e
 1126 008d 00       		.byte	0
 1127 008e 3F       		.uleb128 0x3f
 1128 008f 19       		.uleb128 0x19
 1129 0090 03       		.uleb128 0x3
 1130 0091 0E       		.uleb128 0xe
 1131 0092 3A       		.uleb128 0x3a
 1132 0093 0B       		.uleb128 0xb
 1133 0094 3B       		.uleb128 0x3b
 1134 0095 0B       		.uleb128 0xb
 1135 0096 27       		.uleb128 0x27
 1136 0097 19       		.uleb128 0x19
 1137 0098 11       		.uleb128 0x11
 1138 0099 01       		.uleb128 0x1
 1139 009a 12       		.uleb128 0x12
 1140 009b 06       		.uleb128 0x6
 1141 009c 40       		.uleb128 0x40
 1142 009d 18       		.uleb128 0x18
 1143 009e 9742     		.uleb128 0x2117
 1144 00a0 19       		.uleb128 0x19
 1145 00a1 00       		.byte	0
 1146 00a2 00       		.byte	0
 1147 00a3 0B       		.uleb128 0xb
 1148 00a4 2E       		.uleb128 0x2e
 1149 00a5 01       		.byte	0x1
 1150 00a6 3F       		.uleb128 0x3f
 1151 00a7 19       		.uleb128 0x19
 1152 00a8 03       		.uleb128 0x3
 1153 00a9 0E       		.uleb128 0xe
 1154 00aa 3A       		.uleb128 0x3a
 1155 00ab 0B       		.uleb128 0xb
 1156 00ac 3B       		.uleb128 0x3b
 1157 00ad 05       		.uleb128 0x5
 1158 00ae 27       		.uleb128 0x27
 1159 00af 19       		.uleb128 0x19
 1160 00b0 11       		.uleb128 0x11
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 37


 1161 00b1 01       		.uleb128 0x1
 1162 00b2 12       		.uleb128 0x12
 1163 00b3 06       		.uleb128 0x6
 1164 00b4 40       		.uleb128 0x40
 1165 00b5 18       		.uleb128 0x18
 1166 00b6 9742     		.uleb128 0x2117
 1167 00b8 19       		.uleb128 0x19
 1168 00b9 01       		.uleb128 0x1
 1169 00ba 13       		.uleb128 0x13
 1170 00bb 00       		.byte	0
 1171 00bc 00       		.byte	0
 1172 00bd 0C       		.uleb128 0xc
 1173 00be 05       		.uleb128 0x5
 1174 00bf 00       		.byte	0
 1175 00c0 03       		.uleb128 0x3
 1176 00c1 0E       		.uleb128 0xe
 1177 00c2 3A       		.uleb128 0x3a
 1178 00c3 0B       		.uleb128 0xb
 1179 00c4 3B       		.uleb128 0x3b
 1180 00c5 05       		.uleb128 0x5
 1181 00c6 49       		.uleb128 0x49
 1182 00c7 13       		.uleb128 0x13
 1183 00c8 02       		.uleb128 0x2
 1184 00c9 18       		.uleb128 0x18
 1185 00ca 00       		.byte	0
 1186 00cb 00       		.byte	0
 1187 00cc 0D       		.uleb128 0xd
 1188 00cd 2E       		.uleb128 0x2e
 1189 00ce 00       		.byte	0
 1190 00cf 3F       		.uleb128 0x3f
 1191 00d0 19       		.uleb128 0x19
 1192 00d1 03       		.uleb128 0x3
 1193 00d2 0E       		.uleb128 0xe
 1194 00d3 3A       		.uleb128 0x3a
 1195 00d4 0B       		.uleb128 0xb
 1196 00d5 3B       		.uleb128 0x3b
 1197 00d6 05       		.uleb128 0x5
 1198 00d7 27       		.uleb128 0x27
 1199 00d8 19       		.uleb128 0x19
 1200 00d9 49       		.uleb128 0x49
 1201 00da 13       		.uleb128 0x13
 1202 00db 11       		.uleb128 0x11
 1203 00dc 01       		.uleb128 0x1
 1204 00dd 12       		.uleb128 0x12
 1205 00de 06       		.uleb128 0x6
 1206 00df 40       		.uleb128 0x40
 1207 00e0 18       		.uleb128 0x18
 1208 00e1 9742     		.uleb128 0x2117
 1209 00e3 19       		.uleb128 0x19
 1210 00e4 00       		.byte	0
 1211 00e5 00       		.byte	0
 1212 00e6 0E       		.uleb128 0xe
 1213 00e7 2E       		.uleb128 0x2e
 1214 00e8 00       		.byte	0
 1215 00e9 3F       		.uleb128 0x3f
 1216 00ea 19       		.uleb128 0x19
 1217 00eb 03       		.uleb128 0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 38


 1218 00ec 0E       		.uleb128 0xe
 1219 00ed 3A       		.uleb128 0x3a
 1220 00ee 0B       		.uleb128 0xb
 1221 00ef 3B       		.uleb128 0x3b
 1222 00f0 05       		.uleb128 0x5
 1223 00f1 27       		.uleb128 0x27
 1224 00f2 19       		.uleb128 0x19
 1225 00f3 11       		.uleb128 0x11
 1226 00f4 01       		.uleb128 0x1
 1227 00f5 12       		.uleb128 0x12
 1228 00f6 06       		.uleb128 0x6
 1229 00f7 40       		.uleb128 0x40
 1230 00f8 18       		.uleb128 0x18
 1231 00f9 9642     		.uleb128 0x2116
 1232 00fb 19       		.uleb128 0x19
 1233 00fc 00       		.byte	0
 1234 00fd 00       		.byte	0
 1235 00fe 0F       		.uleb128 0xf
 1236 00ff 2E       		.uleb128 0x2e
 1237 0100 01       		.byte	0x1
 1238 0101 3F       		.uleb128 0x3f
 1239 0102 19       		.uleb128 0x19
 1240 0103 03       		.uleb128 0x3
 1241 0104 0E       		.uleb128 0xe
 1242 0105 3A       		.uleb128 0x3a
 1243 0106 0B       		.uleb128 0xb
 1244 0107 3B       		.uleb128 0x3b
 1245 0108 05       		.uleb128 0x5
 1246 0109 27       		.uleb128 0x27
 1247 010a 19       		.uleb128 0x19
 1248 010b 49       		.uleb128 0x49
 1249 010c 13       		.uleb128 0x13
 1250 010d 11       		.uleb128 0x11
 1251 010e 01       		.uleb128 0x1
 1252 010f 12       		.uleb128 0x12
 1253 0110 06       		.uleb128 0x6
 1254 0111 40       		.uleb128 0x40
 1255 0112 18       		.uleb128 0x18
 1256 0113 9742     		.uleb128 0x2117
 1257 0115 19       		.uleb128 0x19
 1258 0116 01       		.uleb128 0x1
 1259 0117 13       		.uleb128 0x13
 1260 0118 00       		.byte	0
 1261 0119 00       		.byte	0
 1262 011a 10       		.uleb128 0x10
 1263 011b 34       		.uleb128 0x34
 1264 011c 00       		.byte	0
 1265 011d 03       		.uleb128 0x3
 1266 011e 0E       		.uleb128 0xe
 1267 011f 3A       		.uleb128 0x3a
 1268 0120 0B       		.uleb128 0xb
 1269 0121 3B       		.uleb128 0x3b
 1270 0122 05       		.uleb128 0x5
 1271 0123 49       		.uleb128 0x49
 1272 0124 13       		.uleb128 0x13
 1273 0125 02       		.uleb128 0x2
 1274 0126 18       		.uleb128 0x18
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 39


 1275 0127 00       		.byte	0
 1276 0128 00       		.byte	0
 1277 0129 11       		.uleb128 0x11
 1278 012a 34       		.uleb128 0x34
 1279 012b 00       		.byte	0
 1280 012c 03       		.uleb128 0x3
 1281 012d 0E       		.uleb128 0xe
 1282 012e 3A       		.uleb128 0x3a
 1283 012f 0B       		.uleb128 0xb
 1284 0130 3B       		.uleb128 0x3b
 1285 0131 0B       		.uleb128 0xb
 1286 0132 49       		.uleb128 0x49
 1287 0133 13       		.uleb128 0x13
 1288 0134 3F       		.uleb128 0x3f
 1289 0135 19       		.uleb128 0x19
 1290 0136 02       		.uleb128 0x2
 1291 0137 18       		.uleb128 0x18
 1292 0138 00       		.byte	0
 1293 0139 00       		.byte	0
 1294 013a 00       		.byte	0
 1295              		.section	.debug_aranges,"",%progbits
 1296 0000 94000000 		.4byte	0x94
 1297 0004 0200     		.2byte	0x2
 1298 0006 00000000 		.4byte	.Ldebug_info0
 1299 000a 04       		.byte	0x4
 1300 000b 00       		.byte	0
 1301 000c 0000     		.2byte	0
 1302 000e 0000     		.2byte	0
 1303 0010 00000000 		.4byte	.LFB0
 1304 0014 24000000 		.4byte	.LFE0-.LFB0
 1305 0018 00000000 		.4byte	.LFB1
 1306 001c 94000000 		.4byte	.LFE1-.LFB1
 1307 0020 00000000 		.4byte	.LFB2
 1308 0024 20000000 		.4byte	.LFE2-.LFB2
 1309 0028 00000000 		.4byte	.LFB3
 1310 002c 1C000000 		.4byte	.LFE3-.LFB3
 1311 0030 00000000 		.4byte	.LFB4
 1312 0034 20000000 		.4byte	.LFE4-.LFB4
 1313 0038 00000000 		.4byte	.LFB5
 1314 003c 1C000000 		.4byte	.LFE5-.LFB5
 1315 0040 00000000 		.4byte	.LFB6
 1316 0044 1C000000 		.4byte	.LFE6-.LFB6
 1317 0048 00000000 		.4byte	.LFB7
 1318 004c 20000000 		.4byte	.LFE7-.LFB7
 1319 0050 00000000 		.4byte	.LFB8
 1320 0054 20000000 		.4byte	.LFE8-.LFB8
 1321 0058 00000000 		.4byte	.LFB9
 1322 005c 20000000 		.4byte	.LFE9-.LFB9
 1323 0060 00000000 		.4byte	.LFB10
 1324 0064 14000000 		.4byte	.LFE10-.LFB10
 1325 0068 00000000 		.4byte	.LFB11
 1326 006c 20000000 		.4byte	.LFE11-.LFB11
 1327 0070 00000000 		.4byte	.LFB12
 1328 0074 20000000 		.4byte	.LFE12-.LFB12
 1329 0078 00000000 		.4byte	.LFB13
 1330 007c 14000000 		.4byte	.LFE13-.LFB13
 1331 0080 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 40


 1332 0084 14000000 		.4byte	.LFE14-.LFB14
 1333 0088 00000000 		.4byte	.LFB15
 1334 008c 14000000 		.4byte	.LFE15-.LFB15
 1335 0090 00000000 		.4byte	0
 1336 0094 00000000 		.4byte	0
 1337              		.section	.debug_ranges,"",%progbits
 1338              	.Ldebug_ranges0:
 1339 0000 00000000 		.4byte	.LFB0
 1340 0004 24000000 		.4byte	.LFE0
 1341 0008 00000000 		.4byte	.LFB1
 1342 000c 94000000 		.4byte	.LFE1
 1343 0010 00000000 		.4byte	.LFB2
 1344 0014 20000000 		.4byte	.LFE2
 1345 0018 00000000 		.4byte	.LFB3
 1346 001c 1C000000 		.4byte	.LFE3
 1347 0020 00000000 		.4byte	.LFB4
 1348 0024 20000000 		.4byte	.LFE4
 1349 0028 00000000 		.4byte	.LFB5
 1350 002c 1C000000 		.4byte	.LFE5
 1351 0030 00000000 		.4byte	.LFB6
 1352 0034 1C000000 		.4byte	.LFE6
 1353 0038 00000000 		.4byte	.LFB7
 1354 003c 20000000 		.4byte	.LFE7
 1355 0040 00000000 		.4byte	.LFB8
 1356 0044 20000000 		.4byte	.LFE8
 1357 0048 00000000 		.4byte	.LFB9
 1358 004c 20000000 		.4byte	.LFE9
 1359 0050 00000000 		.4byte	.LFB10
 1360 0054 14000000 		.4byte	.LFE10
 1361 0058 00000000 		.4byte	.LFB11
 1362 005c 20000000 		.4byte	.LFE11
 1363 0060 00000000 		.4byte	.LFB12
 1364 0064 20000000 		.4byte	.LFE12
 1365 0068 00000000 		.4byte	.LFB13
 1366 006c 14000000 		.4byte	.LFE13
 1367 0070 00000000 		.4byte	.LFB14
 1368 0074 14000000 		.4byte	.LFE14
 1369 0078 00000000 		.4byte	.LFB15
 1370 007c 14000000 		.4byte	.LFE15
 1371 0080 00000000 		.4byte	0
 1372 0084 00000000 		.4byte	0
 1373              		.section	.debug_line,"",%progbits
 1374              	.Ldebug_line0:
 1375 0000 93010000 		.section	.debug_str,"MS",%progbits,1
 1375      02004C00 
 1375      00000201 
 1375      FB0E0D00 
 1375      01010101 
 1376              	.LASF15:
 1377 0000 72656731 		.ascii	"reg16\000"
 1377      3600
 1378              	.LASF38:
 1379 0006 50574D5F 		.ascii	"PWM_Organizer_ReadCompare\000"
 1379      4F726761 
 1379      6E697A65 
 1379      725F5265 
 1379      6164436F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 41


 1380              	.LASF22:
 1381 0020 50574D5F 		.ascii	"PWM_Organizer_Init\000"
 1381      4F726761 
 1381      6E697A65 
 1381      725F496E 
 1381      697400
 1382              	.LASF27:
 1383 0033 70657269 		.ascii	"period\000"
 1383      6F6400
 1384              	.LASF28:
 1385 003a 50574D5F 		.ascii	"PWM_Organizer_WriteCompare\000"
 1385      4F726761 
 1385      6E697A65 
 1385      725F5772 
 1385      69746543 
 1386              	.LASF3:
 1387 0055 73686F72 		.ascii	"short unsigned int\000"
 1387      7420756E 
 1387      7369676E 
 1387      65642069 
 1387      6E7400
 1388              	.LASF41:
 1389 0068 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_Organizer.c\000"
 1389      6E657261 
 1389      7465645F 
 1389      536F7572 
 1389      63655C50 
 1390              	.LASF37:
 1391 0091 50574D5F 		.ascii	"PWM_Organizer_ReadCapture\000"
 1391      4F726761 
 1391      6E697A65 
 1391      725F5265 
 1391      61644361 
 1392              	.LASF11:
 1393 00ab 666C6F61 		.ascii	"float\000"
 1393      7400
 1394              	.LASF40:
 1395 00b1 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1395      4320342E 
 1395      382E3420 
 1395      32303134 
 1395      30353236 
 1396 00e4 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1396      20726576 
 1396      6973696F 
 1396      6E203231 
 1396      31333538 
 1397 0117 30202D66 		.ascii	"0 -ffunction-sections\000"
 1397      66756E63 
 1397      74696F6E 
 1397      2D736563 
 1397      74696F6E 
 1398              	.LASF33:
 1399 012d 50574D5F 		.ascii	"PWM_Organizer_ReadStatusRegister\000"
 1399      4F726761 
 1399      6E697A65 
 1399      725F5265 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 42


 1399      61645374 
 1400              	.LASF1:
 1401 014e 756E7369 		.ascii	"unsigned char\000"
 1401      676E6564 
 1401      20636861 
 1401      7200
 1402              	.LASF14:
 1403 015c 72656738 		.ascii	"reg8\000"
 1403      00
 1404              	.LASF44:
 1405 0161 50574D5F 		.ascii	"PWM_Organizer_initVar\000"
 1405      4F726761 
 1405      6E697A65 
 1405      725F696E 
 1405      69745661 
 1406              	.LASF5:
 1407 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 1407      20756E73 
 1407      69676E65 
 1407      6420696E 
 1407      7400
 1408              	.LASF9:
 1409 0189 75696E74 		.ascii	"uint8\000"
 1409      3800
 1410              	.LASF36:
 1411 018f 636F6E74 		.ascii	"control\000"
 1411      726F6C00 
 1412              	.LASF35:
 1413 0197 50574D5F 		.ascii	"PWM_Organizer_WriteControlRegister\000"
 1413      4F726761 
 1413      6E697A65 
 1413      725F5772 
 1413      69746543 
 1414              	.LASF32:
 1415 01ba 50574D5F 		.ascii	"PWM_Organizer_ReadCounter\000"
 1415      4F726761 
 1415      6E697A65 
 1415      725F5265 
 1415      6164436F 
 1416              	.LASF26:
 1417 01d4 636F756E 		.ascii	"counter\000"
 1417      74657200 
 1418              	.LASF12:
 1419 01dc 646F7562 		.ascii	"double\000"
 1419      6C6500
 1420              	.LASF42:
 1421 01e3 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\Organizer Badge\\Organiz"
 1421      73657273 
 1421      5C41646D 
 1421      696E5C44 
 1421      65736B74 
 1422 0211 65725F42 		.ascii	"er_Badge\\Organizer_Badge.cydsn\000"
 1422      61646765 
 1422      5C4F7267 
 1422      616E697A 
 1422      65725F42 
 1423              	.LASF23:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 43


 1424 0230 50574D5F 		.ascii	"PWM_Organizer_WriteCounter\000"
 1424      4F726761 
 1424      6E697A65 
 1424      725F5772 
 1424      69746543 
 1425              	.LASF10:
 1426 024b 75696E74 		.ascii	"uint16\000"
 1426      313600
 1427              	.LASF8:
 1428 0252 756E7369 		.ascii	"unsigned int\000"
 1428      676E6564 
 1428      20696E74 
 1428      00
 1429              	.LASF18:
 1430 025f 50574D5F 		.ascii	"PWM_Organizer_interruptState\000"
 1430      4F726761 
 1430      6E697A65 
 1430      725F696E 
 1430      74657272 
 1431              	.LASF20:
 1432 027c 50574D5F 		.ascii	"PWM_Organizer_Enable\000"
 1432      4F726761 
 1432      6E697A65 
 1432      725F456E 
 1432      61626C65 
 1433              	.LASF7:
 1434 0291 6C6F6E67 		.ascii	"long long unsigned int\000"
 1434      206C6F6E 
 1434      6720756E 
 1434      7369676E 
 1434      65642069 
 1435              	.LASF34:
 1436 02a8 72657375 		.ascii	"result\000"
 1436      6C7400
 1437              	.LASF24:
 1438 02af 50574D5F 		.ascii	"PWM_Organizer_ClearFIFO\000"
 1438      4F726761 
 1438      6E697A65 
 1438      725F436C 
 1438      65617246 
 1439              	.LASF21:
 1440 02c7 50574D5F 		.ascii	"PWM_Organizer_Stop\000"
 1440      4F726761 
 1440      6E697A65 
 1440      725F5374 
 1440      6F7000
 1441              	.LASF17:
 1442 02da 6374726C 		.ascii	"ctrl\000"
 1442      00
 1443              	.LASF16:
 1444 02df 73697A65 		.ascii	"sizetype\000"
 1444      74797065 
 1444      00
 1445              	.LASF6:
 1446 02e8 6C6F6E67 		.ascii	"long long int\000"
 1446      206C6F6E 
 1446      6720696E 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc1vH8BS.s 			page 44


 1446      7400
 1447              	.LASF25:
 1448 02f6 50574D5F 		.ascii	"PWM_Organizer_WritePeriod\000"
 1448      4F726761 
 1448      6E697A65 
 1448      725F5772 
 1448      69746550 
 1449              	.LASF31:
 1450 0310 696E7465 		.ascii	"interruptMode\000"
 1450      72727570 
 1450      744D6F64 
 1450      6500
 1451              	.LASF43:
 1452 031e 50574D5F 		.ascii	"PWM_Organizer_ReadControlRegister\000"
 1452      4F726761 
 1452      6E697A65 
 1452      725F5265 
 1452      6164436F 
 1453              	.LASF2:
 1454 0340 73686F72 		.ascii	"short int\000"
 1454      7420696E 
 1454      7400
 1455              	.LASF39:
 1456 034a 50574D5F 		.ascii	"PWM_Organizer_ReadPeriod\000"
 1456      4F726761 
 1456      6E697A65 
 1456      725F5265 
 1456      61645065 
 1457              	.LASF19:
 1458 0363 50574D5F 		.ascii	"PWM_Organizer_Start\000"
 1458      4F726761 
 1458      6E697A65 
 1458      725F5374 
 1458      61727400 
 1459              	.LASF4:
 1460 0377 6C6F6E67 		.ascii	"long int\000"
 1460      20696E74 
 1460      00
 1461              	.LASF13:
 1462 0380 63686172 		.ascii	"char\000"
 1462      00
 1463              	.LASF0:
 1464 0385 7369676E 		.ascii	"signed char\000"
 1464      65642063 
 1464      68617200 
 1465              	.LASF29:
 1466 0391 636F6D70 		.ascii	"compare\000"
 1466      61726500 
 1467              	.LASF30:
 1468 0399 50574D5F 		.ascii	"PWM_Organizer_SetInterruptMode\000"
 1468      4F726761 
 1468      6E697A65 
 1468      725F5365 
 1468      74496E74 
 1469              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
